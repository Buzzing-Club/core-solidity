{"id":"67041c788682dda6626cd3ae2437b37c","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\ninterface IBubblySwapLmPool {\r\n  function accumulateReward(uint32 currTimestamp) external;\r\n\r\n  function crossLmTick(int24 tick, bool zeroForOne) external;\r\n}\r\n"},"contracts/BubblySwapPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity =0.7.6;\r\n\r\nimport './interfaces/IBubblySwapPool.sol';\r\n\r\nimport './libraries/LowGasSafeMath.sol';\r\nimport './libraries/SafeCast.sol';\r\nimport './libraries/Tick.sol';\r\nimport './libraries/TickBitmap.sol';\r\nimport './libraries/Position.sol';\r\nimport './libraries/Oracle.sol';\r\n\r\nimport './libraries/FullMath.sol';\r\nimport './libraries/FixedPoint128.sol';\r\nimport './libraries/TransferHelper.sol';\r\nimport './libraries/TickMath.sol';\r\nimport './libraries/LiquidityMath.sol';\r\nimport './libraries/SqrtPriceMath.sol';\r\nimport './libraries/SwapMath.sol';\r\n\r\nimport './interfaces/IBubblySwapPoolDeployer.sol';\r\nimport './interfaces/IBubblySwapFactory.sol';\r\nimport './interfaces/IERC20Minimal.sol';\r\nimport './interfaces/callback/IBubblySwapMintCallback.sol';\r\nimport './interfaces/callback/IBubblySwapSwapCallback.sol';\r\nimport './interfaces/callback/IBubblySwapFlashCallback.sol';\r\n\r\nimport '@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol';\r\n\r\ncontract BubblySwapPool is IBubblySwapPool {\r\n    using LowGasSafeMath for uint256;\r\n    using LowGasSafeMath for int256;\r\n    using SafeCast for uint256;\r\n    using SafeCast for int256;\r\n    using Tick for mapping(int24 => Tick.Info);\r\n    using TickBitmap for mapping(int16 => uint256);\r\n    using Position for mapping(bytes32 => Position.Info);\r\n    using Position for Position.Info;\r\n    using Oracle for Oracle.Observation[65535];\r\n\r\n    /// @inheritdoc IBubblySwapPoolImmutables\r\n    address public immutable override factory;\r\n    /// @inheritdoc IBubblySwapPoolImmutables\r\n    address public immutable override token0;\r\n    /// @inheritdoc IBubblySwapPoolImmutables\r\n    address public immutable override token1;\r\n    /// @inheritdoc IBubblySwapPoolImmutables\r\n    uint24 public immutable override fee;\r\n\r\n    /// @inheritdoc IBubblySwapPoolImmutables\r\n    int24 public immutable override tickSpacing;\r\n\r\n    /// @inheritdoc IBubblySwapPoolImmutables\r\n    uint128 public immutable override maxLiquidityPerTick;\r\n\r\n    uint32  internal constant PROTOCOL_FEE_SP = 65536;\r\n\r\n    uint256 internal constant PROTOCOL_FEE_DENOMINATOR = 10000;\r\n\r\n    struct Slot0 {\r\n        // the current price\r\n        uint160 sqrtPriceX96;\r\n        // the current tick\r\n        int24 tick;\r\n        // the most-recently updated index of the observations array\r\n        uint16 observationIndex;\r\n        // the current maximum number of observations that are being stored\r\n        uint16 observationCardinality;\r\n        // the next maximum number of observations to store, triggered in observations.write\r\n        uint16 observationCardinalityNext;\r\n        // the current protocol fee for token0 and token1,\r\n        // 2 uint32 values store in a uint32 variable (fee/PROTOCOL_FEE_DENOMINATOR)\r\n        uint32 feeProtocol;\r\n        // whether the pool is locked\r\n        bool unlocked;\r\n    }\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    Slot0 public override slot0;\r\n\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    uint256 public override feeGrowthGlobal0X128;\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    uint256 public override feeGrowthGlobal1X128;\r\n\r\n    // accumulated protocol fees in token0/token1 units\r\n    struct ProtocolFees {\r\n        uint128 token0;\r\n        uint128 token1;\r\n    }\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    ProtocolFees public override protocolFees;\r\n\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    uint128 public override liquidity;\r\n\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    mapping(int24 => Tick.Info) public override ticks;\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    mapping(int16 => uint256) public override tickBitmap;\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    mapping(bytes32 => Position.Info) public override positions;\r\n    /// @inheritdoc IBubblySwapPoolState\r\n    Oracle.Observation[65535] public override observations;\r\n\r\n    // liquidity mining\r\n    IBubblySwapLmPool public lmPool;\r\n\r\n    event SetLmPoolEvent(address addr);\r\n\r\n    /// @dev Mutually exclusive reentrancy protection into the pool to/from a method. This method also prevents entrance\r\n    /// to a function before the pool is initialized. The reentrancy guard is required throughout the contract because\r\n    /// we use balance checks to determine the payment status of interactions such as mint, swap and flash.\r\n    modifier lock() {\r\n        require(slot0.unlocked, 'LOK');\r\n        slot0.unlocked = false;\r\n        _;\r\n        slot0.unlocked = true;\r\n    }\r\n\r\n    /// @dev Prevents calling a function from anyone except the factory or its\r\n    /// owner\r\n    modifier onlyFactoryOrFactoryOwner() {\r\n        require(msg.sender == factory || msg.sender == IBubblySwapFactory(factory).owner());\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        int24 _tickSpacing;\r\n        (factory, token0, token1, fee, _tickSpacing) = IBubblySwapPoolDeployer(msg.sender).parameters();\r\n        tickSpacing = _tickSpacing;\r\n\r\n        maxLiquidityPerTick = Tick.tickSpacingToMaxLiquidityPerTick(_tickSpacing);\r\n    }\r\n\r\n    /// @dev Common checks for valid tick inputs.\r\n    function checkTicks(int24 tickLower, int24 tickUpper) private pure {\r\n        require(tickLower < tickUpper, 'TLU');\r\n        require(tickLower >= TickMath.MIN_TICK, 'TLM');\r\n        require(tickUpper <= TickMath.MAX_TICK, 'TUM');\r\n    }\r\n\r\n    /// @dev Returns the block timestamp truncated to 32 bits, i.e. mod 2**32. This method is overridden in tests.\r\n    function _blockTimestamp() internal view virtual returns (uint32) {\r\n        return uint32(block.timestamp); // truncation is desired\r\n    }\r\n\r\n    /// @dev Get the pool's balance of token0\r\n    /// @dev This function is gas optimized to avoid a redundant extcodesize check in addition to the returndatasize\r\n    /// check\r\n    function balance0() private view returns (uint256) {\r\n        (bool success, bytes memory data) = token0.staticcall(\r\n            abi.encodeWithSelector(IERC20Minimal.balanceOf.selector, address(this))\r\n        );\r\n        require(success && data.length >= 32);\r\n        return abi.decode(data, (uint256));\r\n    }\r\n\r\n    /// @dev Get the pool's balance of token1\r\n    /// @dev This function is gas optimized to avoid a redundant extcodesize check in addition to the returndatasize\r\n    /// check\r\n    function balance1() private view returns (uint256) {\r\n        (bool success, bytes memory data) = token1.staticcall(\r\n            abi.encodeWithSelector(IERC20Minimal.balanceOf.selector, address(this))\r\n        );\r\n        require(success && data.length >= 32);\r\n        return abi.decode(data, (uint256));\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolDerivedState\r\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\r\n        external\r\n        view\r\n        override\r\n        returns (\r\n            int56 tickCumulativeInside,\r\n            uint160 secondsPerLiquidityInsideX128,\r\n            uint32 secondsInside\r\n        )\r\n    {\r\n        checkTicks(tickLower, tickUpper);\r\n\r\n        int56 tickCumulativeLower;\r\n        int56 tickCumulativeUpper;\r\n        uint160 secondsPerLiquidityOutsideLowerX128;\r\n        uint160 secondsPerLiquidityOutsideUpperX128;\r\n        uint32 secondsOutsideLower;\r\n        uint32 secondsOutsideUpper;\r\n\r\n        {\r\n            Tick.Info storage lower = ticks[tickLower];\r\n            Tick.Info storage upper = ticks[tickUpper];\r\n            bool initializedLower;\r\n            (tickCumulativeLower, secondsPerLiquidityOutsideLowerX128, secondsOutsideLower, initializedLower) = (\r\n                lower.tickCumulativeOutside,\r\n                lower.secondsPerLiquidityOutsideX128,\r\n                lower.secondsOutside,\r\n                lower.initialized\r\n            );\r\n            require(initializedLower);\r\n\r\n            bool initializedUpper;\r\n            (tickCumulativeUpper, secondsPerLiquidityOutsideUpperX128, secondsOutsideUpper, initializedUpper) = (\r\n                upper.tickCumulativeOutside,\r\n                upper.secondsPerLiquidityOutsideX128,\r\n                upper.secondsOutside,\r\n                upper.initialized\r\n            );\r\n            require(initializedUpper);\r\n        }\r\n\r\n        Slot0 memory _slot0 = slot0;\r\n\r\n        if (_slot0.tick < tickLower) {\r\n            return (\r\n                tickCumulativeLower - tickCumulativeUpper,\r\n                secondsPerLiquidityOutsideLowerX128 - secondsPerLiquidityOutsideUpperX128,\r\n                secondsOutsideLower - secondsOutsideUpper\r\n            );\r\n        } else if (_slot0.tick < tickUpper) {\r\n            uint32 time = _blockTimestamp();\r\n            (int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128) = observations.observeSingle(\r\n                time,\r\n                0,\r\n                _slot0.tick,\r\n                _slot0.observationIndex,\r\n                liquidity,\r\n                _slot0.observationCardinality\r\n            );\r\n            return (\r\n                tickCumulative - tickCumulativeLower - tickCumulativeUpper,\r\n                secondsPerLiquidityCumulativeX128 -\r\n                    secondsPerLiquidityOutsideLowerX128 -\r\n                    secondsPerLiquidityOutsideUpperX128,\r\n                time - secondsOutsideLower - secondsOutsideUpper\r\n            );\r\n        } else {\r\n            return (\r\n                tickCumulativeUpper - tickCumulativeLower,\r\n                secondsPerLiquidityOutsideUpperX128 - secondsPerLiquidityOutsideLowerX128,\r\n                secondsOutsideUpper - secondsOutsideLower\r\n            );\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolDerivedState\r\n    function observe(uint32[] calldata secondsAgos)\r\n        external\r\n        view\r\n        override\r\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s)\r\n    {\r\n        return\r\n            observations.observe(\r\n                _blockTimestamp(),\r\n                secondsAgos,\r\n                slot0.tick,\r\n                slot0.observationIndex,\r\n                liquidity,\r\n                slot0.observationCardinality\r\n            );\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext)\r\n        external\r\n        override\r\n        lock\r\n    {\r\n        uint16 observationCardinalityNextOld = slot0.observationCardinalityNext; // for the event\r\n        uint16 observationCardinalityNextNew = observations.grow(\r\n            observationCardinalityNextOld,\r\n            observationCardinalityNext\r\n        );\r\n        slot0.observationCardinalityNext = observationCardinalityNextNew;\r\n        if (observationCardinalityNextOld != observationCardinalityNextNew)\r\n            emit IncreaseObservationCardinalityNext(observationCardinalityNextOld, observationCardinalityNextNew);\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    /// @dev not locked because it initializes unlocked\r\n    function initialize(uint160 sqrtPriceX96) external override {\r\n        require(slot0.sqrtPriceX96 == 0, 'AI');\r\n\r\n        int24 tick = TickMath.getTickAtSqrtRatio(sqrtPriceX96);\r\n\r\n        (uint16 cardinality, uint16 cardinalityNext) = observations.initialize(_blockTimestamp());\r\n\r\n        slot0 = Slot0({\r\n            sqrtPriceX96: sqrtPriceX96,\r\n            tick: tick,\r\n            observationIndex: 0,\r\n            observationCardinality: cardinality,\r\n            observationCardinalityNext: cardinalityNext,\r\n            feeProtocol: 209718400, // default value for all pools, 3200:3200, store 2 uint32 inside\r\n            unlocked: true\r\n        });\r\n\r\n        if (fee == 100) {\r\n            slot0.feeProtocol = 216272100; // value for 3300:3300, store 2 uint32 inside\r\n        } else if (fee == 500) {\r\n            slot0.feeProtocol = 222825800; // value for 3400:3400, store 2 uint32 inside\r\n        } else if (fee == 2500) {\r\n            slot0.feeProtocol = 209718400; // value for 3200:3200, store 2 uint32 inside\r\n        } else if (fee == 10000) {\r\n            slot0.feeProtocol = 209718400; // value for 3200:3200, store 2 uint32 inside\r\n        }\r\n\r\n        emit Initialize(sqrtPriceX96, tick);\r\n    }\r\n\r\n    struct ModifyPositionParams {\r\n        // the address that owns the position\r\n        address owner;\r\n        // the lower and upper tick of the position\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        // any change in liquidity\r\n        int128 liquidityDelta;\r\n    }\r\n\r\n    /// @dev Effect some changes to a position\r\n    /// @param params the position details and the change to the position's liquidity to effect\r\n    /// @return position a storage pointer referencing the position with the given owner and tick range\r\n    /// @return amount0 the amount of token0 owed to the pool, negative if the pool should pay the recipient\r\n    /// @return amount1 the amount of token1 owed to the pool, negative if the pool should pay the recipient\r\n    function _modifyPosition(ModifyPositionParams memory params)\r\n        private\r\n        returns (\r\n            Position.Info storage position,\r\n            int256 amount0,\r\n            int256 amount1\r\n        )\r\n    {\r\n        checkTicks(params.tickLower, params.tickUpper);\r\n\r\n        Slot0 memory _slot0 = slot0; // SLOAD for gas optimization\r\n\r\n        position = _updatePosition(\r\n            params.owner,\r\n            params.tickLower,\r\n            params.tickUpper,\r\n            params.liquidityDelta,\r\n            _slot0.tick\r\n        );\r\n\r\n        if (params.liquidityDelta != 0) {\r\n            if (_slot0.tick < params.tickLower) {\r\n                // current tick is below the passed range; liquidity can only become in range by crossing from left to\r\n                // right, when we'll need _more_ token0 (it's becoming more valuable) so user must provide it\r\n                amount0 = SqrtPriceMath.getAmount0Delta(\r\n                    TickMath.getSqrtRatioAtTick(params.tickLower),\r\n                    TickMath.getSqrtRatioAtTick(params.tickUpper),\r\n                    params.liquidityDelta\r\n                );\r\n            } else if (_slot0.tick < params.tickUpper) {\r\n                // current tick is inside the passed range\r\n                uint128 liquidityBefore = liquidity; // SLOAD for gas optimization\r\n\r\n                // write an oracle entry\r\n                (slot0.observationIndex, slot0.observationCardinality) = observations.write(\r\n                    _slot0.observationIndex,\r\n                    _blockTimestamp(),\r\n                    _slot0.tick,\r\n                    liquidityBefore,\r\n                    _slot0.observationCardinality,\r\n                    _slot0.observationCardinalityNext\r\n                );\r\n\r\n                amount0 = SqrtPriceMath.getAmount0Delta(\r\n                    _slot0.sqrtPriceX96,\r\n                    TickMath.getSqrtRatioAtTick(params.tickUpper),\r\n                    params.liquidityDelta\r\n                );\r\n                amount1 = SqrtPriceMath.getAmount1Delta(\r\n                    TickMath.getSqrtRatioAtTick(params.tickLower),\r\n                    _slot0.sqrtPriceX96,\r\n                    params.liquidityDelta\r\n                );\r\n\r\n                liquidity = LiquidityMath.addDelta(liquidityBefore, params.liquidityDelta);\r\n            } else {\r\n                // current tick is above the passed range; liquidity can only become in range by crossing from right to\r\n                // left, when we'll need _more_ token1 (it's becoming more valuable) so user must provide it\r\n                amount1 = SqrtPriceMath.getAmount1Delta(\r\n                    TickMath.getSqrtRatioAtTick(params.tickLower),\r\n                    TickMath.getSqrtRatioAtTick(params.tickUpper),\r\n                    params.liquidityDelta\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @dev Gets and updates a position with the given liquidity delta\r\n    /// @param owner the owner of the position\r\n    /// @param tickLower the lower tick of the position's tick range\r\n    /// @param tickUpper the upper tick of the position's tick range\r\n    /// @param tick the current tick, passed to avoid sloads\r\n    function _updatePosition(\r\n        address owner,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        int128 liquidityDelta,\r\n        int24 tick\r\n    ) private returns (Position.Info storage position) {\r\n        position = positions.get(owner, tickLower, tickUpper);\r\n\r\n        uint256 _feeGrowthGlobal0X128 = feeGrowthGlobal0X128; // SLOAD for gas optimization\r\n        uint256 _feeGrowthGlobal1X128 = feeGrowthGlobal1X128; // SLOAD for gas optimization\r\n\r\n        // if we need to update the ticks, do it\r\n        bool flippedLower;\r\n        bool flippedUpper;\r\n        if (liquidityDelta != 0) {\r\n            uint32 time = _blockTimestamp();\r\n            (int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128) = observations.observeSingle(\r\n                time,\r\n                0,\r\n                slot0.tick,\r\n                slot0.observationIndex,\r\n                liquidity,\r\n                slot0.observationCardinality\r\n            );\r\n\r\n            flippedLower = ticks.update(\r\n                tickLower,\r\n                tick,\r\n                liquidityDelta,\r\n                _feeGrowthGlobal0X128,\r\n                _feeGrowthGlobal1X128,\r\n                secondsPerLiquidityCumulativeX128,\r\n                tickCumulative,\r\n                time,\r\n                false,\r\n                maxLiquidityPerTick\r\n            );\r\n            flippedUpper = ticks.update(\r\n                tickUpper,\r\n                tick,\r\n                liquidityDelta,\r\n                _feeGrowthGlobal0X128,\r\n                _feeGrowthGlobal1X128,\r\n                secondsPerLiquidityCumulativeX128,\r\n                tickCumulative,\r\n                time,\r\n                true,\r\n                maxLiquidityPerTick\r\n            );\r\n\r\n            if (flippedLower) {\r\n                tickBitmap.flipTick(tickLower, tickSpacing);\r\n            }\r\n            if (flippedUpper) {\r\n                tickBitmap.flipTick(tickUpper, tickSpacing);\r\n            }\r\n        }\r\n\r\n        (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128) = ticks.getFeeGrowthInside(\r\n            tickLower,\r\n            tickUpper,\r\n            tick,\r\n            _feeGrowthGlobal0X128,\r\n            _feeGrowthGlobal1X128\r\n        );\r\n\r\n        position.update(liquidityDelta, feeGrowthInside0X128, feeGrowthInside1X128);\r\n\r\n        // clear any tick data that is no longer needed\r\n        if (liquidityDelta < 0) {\r\n            if (flippedLower) {\r\n                ticks.clear(tickLower);\r\n            }\r\n            if (flippedUpper) {\r\n                ticks.clear(tickUpper);\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    /// @dev noDelegateCall is applied indirectly via _modifyPosition\r\n    function mint(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount,\r\n        bytes calldata data\r\n    ) external override lock returns (uint256 amount0, uint256 amount1) {\r\n        require(amount > 0);\r\n        (, int256 amount0Int, int256 amount1Int) = _modifyPosition(\r\n            ModifyPositionParams({\r\n                owner: recipient,\r\n                tickLower: tickLower,\r\n                tickUpper: tickUpper,\r\n                liquidityDelta: int256(amount).toInt128()\r\n            })\r\n        );\r\n\r\n        amount0 = uint256(amount0Int);\r\n        amount1 = uint256(amount1Int);\r\n\r\n        uint256 balance0Before;\r\n        uint256 balance1Before;\r\n        if (amount0 > 0) balance0Before = balance0();\r\n        if (amount1 > 0) balance1Before = balance1();\r\n        IBubblySwapMintCallback(msg.sender).BubblySwapMintCallback(amount0, amount1, data);\r\n        if (amount0 > 0) require(balance0Before.add(amount0) <= balance0(), 'M0');\r\n        if (amount1 > 0) require(balance1Before.add(amount1) <= balance1(), 'M1');\r\n\r\n        emit Mint(msg.sender, recipient, tickLower, tickUpper, amount, amount0, amount1);\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    function collect(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external override lock returns (uint128 amount0, uint128 amount1) {\r\n        // we don't need to checkTicks here, because invalid positions will never have non-zero tokensOwed{0,1}\r\n        Position.Info storage position = positions.get(msg.sender, tickLower, tickUpper);\r\n\r\n        amount0 = amount0Requested > position.tokensOwed0 ? position.tokensOwed0 : amount0Requested;\r\n        amount1 = amount1Requested > position.tokensOwed1 ? position.tokensOwed1 : amount1Requested;\r\n\r\n        if (amount0 > 0) {\r\n            position.tokensOwed0 -= amount0;\r\n            TransferHelper.safeTransfer(token0, recipient, amount0);\r\n        }\r\n        if (amount1 > 0) {\r\n            position.tokensOwed1 -= amount1;\r\n            TransferHelper.safeTransfer(token1, recipient, amount1);\r\n        }\r\n\r\n        emit Collect(msg.sender, recipient, tickLower, tickUpper, amount0, amount1);\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    /// @dev noDelegateCall is applied indirectly via _modifyPosition\r\n    function burn(\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount\r\n    ) external override lock returns (uint256 amount0, uint256 amount1) {\r\n        (Position.Info storage position, int256 amount0Int, int256 amount1Int) = _modifyPosition(\r\n            ModifyPositionParams({\r\n                owner: msg.sender,\r\n                tickLower: tickLower,\r\n                tickUpper: tickUpper,\r\n                liquidityDelta: -int256(amount).toInt128()\r\n            })\r\n        );\r\n\r\n        amount0 = uint256(-amount0Int);\r\n        amount1 = uint256(-amount1Int);\r\n\r\n        if (amount0 > 0 || amount1 > 0) {\r\n            (position.tokensOwed0, position.tokensOwed1) = (\r\n                position.tokensOwed0 + uint128(amount0),\r\n                position.tokensOwed1 + uint128(amount1)\r\n            );\r\n        }\r\n\r\n        emit Burn(msg.sender, tickLower, tickUpper, amount, amount0, amount1);\r\n    }\r\n\r\n    struct SwapCache {\r\n        // the protocol fee for the input token\r\n        uint32 feeProtocol;\r\n        // liquidity at the beginning of the swap\r\n        uint128 liquidityStart;\r\n        // the timestamp of the current block\r\n        uint32 blockTimestamp;\r\n        // the current value of the tick accumulator, computed only if we cross an initialized tick\r\n        int56 tickCumulative;\r\n        // the current value of seconds per liquidity accumulator, computed only if we cross an initialized tick\r\n        uint160 secondsPerLiquidityCumulativeX128;\r\n        // whether we've computed and cached the above two accumulators\r\n        bool computedLatestObservation;\r\n    }\r\n\r\n    // the top level state of the swap, the results of which are recorded in storage at the end\r\n    struct SwapState {\r\n        // the amount remaining to be swapped in/out of the input/output asset\r\n        int256 amountSpecifiedRemaining;\r\n        // the amount already swapped out/in of the output/input asset\r\n        int256 amountCalculated;\r\n        // current sqrt(price)\r\n        uint160 sqrtPriceX96;\r\n        // the tick associated with the current price\r\n        int24 tick;\r\n        // the global fee growth of the input token\r\n        uint256 feeGrowthGlobalX128;\r\n        // amount of input token paid as protocol fee\r\n        uint128 protocolFee;\r\n        // the current liquidity in range\r\n        uint128 liquidity;\r\n    }\r\n\r\n    struct StepComputations {\r\n        // the price at the beginning of the step\r\n        uint160 sqrtPriceStartX96;\r\n        // the next tick to swap to from the current tick in the swap direction\r\n        int24 tickNext;\r\n        // whether tickNext is initialized or not\r\n        bool initialized;\r\n        // sqrt(price) for the next tick (1/0)\r\n        uint160 sqrtPriceNextX96;\r\n        // how much is being swapped in in this step\r\n        uint256 amountIn;\r\n        // how much is being swapped out\r\n        uint256 amountOut;\r\n        // how much fee is being paid in\r\n        uint256 feeAmount;\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    function swap(\r\n        address recipient,\r\n        bool zeroForOne,\r\n        int256 amountSpecified,\r\n        uint160 sqrtPriceLimitX96,\r\n        bytes calldata data\r\n    ) external override returns (int256 amount0, int256 amount1) {\r\n        require(amountSpecified != 0, 'AS');\r\n\r\n        Slot0 memory slot0Start = slot0;\r\n\r\n        require(slot0Start.unlocked, 'LOK');\r\n        require(\r\n            zeroForOne\r\n                ? sqrtPriceLimitX96 < slot0Start.sqrtPriceX96 && sqrtPriceLimitX96 > TickMath.MIN_SQRT_RATIO\r\n                : sqrtPriceLimitX96 > slot0Start.sqrtPriceX96 && sqrtPriceLimitX96 < TickMath.MAX_SQRT_RATIO,\r\n            'SPL'\r\n        );\r\n\r\n        slot0.unlocked = false;\r\n\r\n        SwapCache memory cache = SwapCache({\r\n            liquidityStart: liquidity,\r\n            blockTimestamp: _blockTimestamp(),\r\n            feeProtocol: zeroForOne ? (slot0Start.feeProtocol % PROTOCOL_FEE_SP) : (slot0Start.feeProtocol >> 16),\r\n            secondsPerLiquidityCumulativeX128: 0,\r\n            tickCumulative: 0,\r\n            computedLatestObservation: false\r\n        });\r\n\r\n        if (address(lmPool) != address(0)) {\r\n          lmPool.accumulateReward(cache.blockTimestamp);\r\n        }\r\n\r\n        bool exactInput = amountSpecified > 0;\r\n\r\n        SwapState memory state = SwapState({\r\n            amountSpecifiedRemaining: amountSpecified,\r\n            amountCalculated: 0,\r\n            sqrtPriceX96: slot0Start.sqrtPriceX96,\r\n            tick: slot0Start.tick,\r\n            feeGrowthGlobalX128: zeroForOne ? feeGrowthGlobal0X128 : feeGrowthGlobal1X128,\r\n            protocolFee: 0,\r\n            liquidity: cache.liquidityStart\r\n        });\r\n\r\n        // continue swapping as long as we haven't used the entire input/output and haven't reached the price limit\r\n        while (state.amountSpecifiedRemaining != 0 && state.sqrtPriceX96 != sqrtPriceLimitX96) {\r\n            StepComputations memory step;\r\n\r\n            step.sqrtPriceStartX96 = state.sqrtPriceX96;\r\n\r\n            (step.tickNext, step.initialized) = tickBitmap.nextInitializedTickWithinOneWord(\r\n                state.tick,\r\n                tickSpacing,\r\n                zeroForOne\r\n            );\r\n\r\n            // ensure that we do not overshoot the min/max tick, as the tick bitmap is not aware of these bounds\r\n            if (step.tickNext < TickMath.MIN_TICK) {\r\n                step.tickNext = TickMath.MIN_TICK;\r\n            } else if (step.tickNext > TickMath.MAX_TICK) {\r\n                step.tickNext = TickMath.MAX_TICK;\r\n            }\r\n\r\n            // get the price for the next tick\r\n            step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.tickNext);\r\n\r\n            // compute values to swap to the target tick, price limit, or point where input/output amount is exhausted\r\n            (state.sqrtPriceX96, step.amountIn, step.amountOut, step.feeAmount) = SwapMath.computeSwapStep(\r\n                state.sqrtPriceX96,\r\n                (zeroForOne ? step.sqrtPriceNextX96 < sqrtPriceLimitX96 : step.sqrtPriceNextX96 > sqrtPriceLimitX96)\r\n                    ? sqrtPriceLimitX96\r\n                    : step.sqrtPriceNextX96,\r\n                state.liquidity,\r\n                state.amountSpecifiedRemaining,\r\n                fee\r\n            );\r\n\r\n            if (exactInput) {\r\n                state.amountSpecifiedRemaining -= (step.amountIn + step.feeAmount).toInt256();\r\n                state.amountCalculated = state.amountCalculated.sub(step.amountOut.toInt256());\r\n            } else {\r\n                state.amountSpecifiedRemaining += step.amountOut.toInt256();\r\n                state.amountCalculated = state.amountCalculated.add((step.amountIn + step.feeAmount).toInt256());\r\n            }\r\n\r\n            // if the protocol fee is on, calculate how much is owed, decrement feeAmount, and increment protocolFee\r\n            if (cache.feeProtocol > 0) {\r\n                uint256 delta = (step.feeAmount.mul(cache.feeProtocol)) / PROTOCOL_FEE_DENOMINATOR;\r\n                step.feeAmount -= delta;\r\n                state.protocolFee += uint128(delta);\r\n            }\r\n\r\n            // update global fee tracker\r\n            if (state.liquidity > 0)\r\n                state.feeGrowthGlobalX128 += FullMath.mulDiv(step.feeAmount, FixedPoint128.Q128, state.liquidity);\r\n\r\n            // shift tick if we reached the next price\r\n            if (state.sqrtPriceX96 == step.sqrtPriceNextX96) {\r\n                // if the tick is initialized, run the tick transition\r\n                if (step.initialized) {\r\n                    // check for the placeholder value, which we replace with the actual value the first time the swap\r\n                    // crosses an initialized tick\r\n                    if (!cache.computedLatestObservation) {\r\n                        (cache.tickCumulative, cache.secondsPerLiquidityCumulativeX128) = observations.observeSingle(\r\n                            cache.blockTimestamp,\r\n                            0,\r\n                            slot0Start.tick,\r\n                            slot0Start.observationIndex,\r\n                            cache.liquidityStart,\r\n                            slot0Start.observationCardinality\r\n                        );\r\n                        cache.computedLatestObservation = true;\r\n                    }\r\n\r\n                    if (address(lmPool) != address(0)) {\r\n                      lmPool.crossLmTick(step.tickNext, zeroForOne);\r\n                    }\r\n\r\n                    int128 liquidityNet = ticks.cross(\r\n                        step.tickNext,\r\n                        (zeroForOne ? state.feeGrowthGlobalX128 : feeGrowthGlobal0X128),\r\n                        (zeroForOne ? feeGrowthGlobal1X128 : state.feeGrowthGlobalX128),\r\n                        cache.secondsPerLiquidityCumulativeX128,\r\n                        cache.tickCumulative,\r\n                        cache.blockTimestamp\r\n                    );\r\n                    // if we're moving leftward, we interpret liquidityNet as the opposite sign\r\n                    // safe because liquidityNet cannot be type(int128).min\r\n                    if (zeroForOne) liquidityNet = -liquidityNet;\r\n\r\n                    state.liquidity = LiquidityMath.addDelta(state.liquidity, liquidityNet);\r\n                }\r\n\r\n                state.tick = zeroForOne ? step.tickNext - 1 : step.tickNext;\r\n            } else if (state.sqrtPriceX96 != step.sqrtPriceStartX96) {\r\n                // recompute unless we're on a lower tick boundary (i.e. already transitioned ticks), and haven't moved\r\n                state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96);\r\n            }\r\n        }\r\n\r\n        // update tick and write an oracle entry if the tick change\r\n        if (state.tick != slot0Start.tick) {\r\n            (uint16 observationIndex, uint16 observationCardinality) = observations.write(\r\n                slot0Start.observationIndex,\r\n                cache.blockTimestamp,\r\n                slot0Start.tick,\r\n                cache.liquidityStart,\r\n                slot0Start.observationCardinality,\r\n                slot0Start.observationCardinalityNext\r\n            );\r\n            (slot0.sqrtPriceX96, slot0.tick, slot0.observationIndex, slot0.observationCardinality) = (\r\n                state.sqrtPriceX96,\r\n                state.tick,\r\n                observationIndex,\r\n                observationCardinality\r\n            );\r\n        } else {\r\n            // otherwise just update the price\r\n            slot0.sqrtPriceX96 = state.sqrtPriceX96;\r\n        }\r\n\r\n        // update liquidity if it changed\r\n        if (cache.liquidityStart != state.liquidity) liquidity = state.liquidity;\r\n\r\n        uint128 protocolFeesToken0 = 0;\r\n        uint128 protocolFeesToken1 = 0;\r\n\r\n        // update fee growth global and, if necessary, protocol fees\r\n        // overflow is acceptable, protocol has to withdraw before it hits type(uint128).max fees\r\n        if (zeroForOne) {\r\n            feeGrowthGlobal0X128 = state.feeGrowthGlobalX128;\r\n            if (state.protocolFee > 0) protocolFees.token0 += state.protocolFee;\r\n            protocolFeesToken0 = state.protocolFee;\r\n        } else {\r\n            feeGrowthGlobal1X128 = state.feeGrowthGlobalX128;\r\n            if (state.protocolFee > 0) protocolFees.token1 += state.protocolFee;\r\n            protocolFeesToken1 = state.protocolFee;\r\n        }\r\n\r\n        (amount0, amount1) = zeroForOne == exactInput\r\n            ? (amountSpecified - state.amountSpecifiedRemaining, state.amountCalculated)\r\n            : (state.amountCalculated, amountSpecified - state.amountSpecifiedRemaining);\r\n\r\n        // do the transfers and collect payment\r\n        if (zeroForOne) {\r\n            if (amount1 < 0) TransferHelper.safeTransfer(token1, recipient, uint256(-amount1));\r\n\r\n            uint256 balance0Before = balance0();\r\n            IBubblySwapSwapCallback(msg.sender).BubblySwapSwapCallback(amount0, amount1, data);\r\n            require(balance0Before.add(uint256(amount0)) <= balance0(), 'IIA');\r\n        } else {\r\n            if (amount0 < 0) TransferHelper.safeTransfer(token0, recipient, uint256(-amount0));\r\n\r\n            uint256 balance1Before = balance1();\r\n            IBubblySwapSwapCallback(msg.sender).BubblySwapSwapCallback(amount0, amount1, data);\r\n            require(balance1Before.add(uint256(amount1)) <= balance1(), 'IIA');\r\n        }\r\n\r\n        emit Swap(msg.sender, recipient, amount0, amount1, state.sqrtPriceX96, state.liquidity, state.tick, protocolFeesToken0, protocolFeesToken1);\r\n        slot0.unlocked = true;\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolActions\r\n    function flash(\r\n        address recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        bytes calldata data\r\n    ) external override lock {\r\n        uint128 _liquidity = liquidity;\r\n        require(_liquidity > 0, 'L');\r\n\r\n        uint256 fee0 = FullMath.mulDivRoundingUp(amount0, fee, 1e6);\r\n        uint256 fee1 = FullMath.mulDivRoundingUp(amount1, fee, 1e6);\r\n        uint256 balance0Before = balance0();\r\n        uint256 balance1Before = balance1();\r\n\r\n        if (amount0 > 0) TransferHelper.safeTransfer(token0, recipient, amount0);\r\n        if (amount1 > 0) TransferHelper.safeTransfer(token1, recipient, amount1);\r\n\r\n        IBubblySwapFlashCallback(msg.sender).BubblySwapFlashCallback(fee0, fee1, data);\r\n\r\n        uint256 balance0After = balance0();\r\n        uint256 balance1After = balance1();\r\n\r\n        require(balance0Before.add(fee0) <= balance0After, 'F0');\r\n        require(balance1Before.add(fee1) <= balance1After, 'F1');\r\n\r\n        // sub is safe because we know balanceAfter is gt balanceBefore by at least fee\r\n        uint256 paid0 = balance0After - balance0Before;\r\n        uint256 paid1 = balance1After - balance1Before;\r\n\r\n        if (paid0 > 0) {\r\n            uint32 feeProtocol0 = slot0.feeProtocol % PROTOCOL_FEE_SP;\r\n            uint256 fees0 = feeProtocol0 == 0 ? 0 : (paid0 * feeProtocol0) / PROTOCOL_FEE_DENOMINATOR;\r\n            if (uint128(fees0) > 0) protocolFees.token0 += uint128(fees0);\r\n            feeGrowthGlobal0X128 += FullMath.mulDiv(paid0 - fees0, FixedPoint128.Q128, _liquidity);\r\n        }\r\n        if (paid1 > 0) {\r\n            uint32 feeProtocol1 = slot0.feeProtocol >> 16;\r\n            uint256 fees1 = feeProtocol1 == 0 ? 0 : (paid1 * feeProtocol1) / PROTOCOL_FEE_DENOMINATOR;\r\n            if (uint128(fees1) > 0) protocolFees.token1 += uint128(fees1);\r\n            feeGrowthGlobal1X128 += FullMath.mulDiv(paid1 - fees1, FixedPoint128.Q128, _liquidity);\r\n        }\r\n\r\n        emit Flash(msg.sender, recipient, amount0, amount1, paid0, paid1);\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolOwnerActions\r\n    function setFeeProtocol(uint32 feeProtocol0, uint32 feeProtocol1) external override lock onlyFactoryOrFactoryOwner {\r\n        require(\r\n            (feeProtocol0 == 0 || (feeProtocol0 >= 1000 && feeProtocol0 <= 4000)) &&\r\n            (feeProtocol1 == 0 || (feeProtocol1 >= 1000 && feeProtocol1 <= 4000))\r\n        );\r\n\r\n        uint32 feeProtocolOld = slot0.feeProtocol;\r\n        slot0.feeProtocol = feeProtocol0 + (feeProtocol1 << 16);\r\n        emit SetFeeProtocol(feeProtocolOld % PROTOCOL_FEE_SP, feeProtocolOld >> 16, feeProtocol0, feeProtocol1);\r\n    }\r\n\r\n    /// @inheritdoc IBubblySwapPoolOwnerActions\r\n    function collectProtocol(\r\n        address recipient,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external override lock onlyFactoryOrFactoryOwner returns (uint128 amount0, uint128 amount1) {\r\n        amount0 = amount0Requested > protocolFees.token0 ? protocolFees.token0 : amount0Requested;\r\n        amount1 = amount1Requested > protocolFees.token1 ? protocolFees.token1 : amount1Requested;\r\n\r\n        if (amount0 > 0) {\r\n            if (amount0 == protocolFees.token0) amount0--; // ensure that the slot is not cleared, for gas savings\r\n            protocolFees.token0 -= amount0;\r\n            TransferHelper.safeTransfer(token0, recipient, amount0);\r\n        }\r\n        if (amount1 > 0) {\r\n            if (amount1 == protocolFees.token1) amount1--; // ensure that the slot is not cleared, for gas savings\r\n            protocolFees.token1 -= amount1;\r\n            TransferHelper.safeTransfer(token1, recipient, amount1);\r\n        }\r\n\r\n        emit CollectProtocol(msg.sender, recipient, amount0, amount1);\r\n    }\r\n\r\n    function setLmPool(address _lmPool) external override onlyFactoryOrFactoryOwner {\r\n      lmPool = IBubblySwapLmPool(_lmPool);\r\n      emit SetLmPoolEvent(address(_lmPool));\r\n    }\r\n}\r\n"},"contracts/interfaces/callback/IBubblySwapFlashCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IBubblySwapPoolActions#flash\r\n/// @notice Any contract that calls IBubblySwapPoolActions#flash must implement this interface\r\ninterface IBubblySwapFlashCallback {\r\n    /// @notice Called to `msg.sender` after transferring to the recipient from IBubblySwapPool#flash.\r\n    /// @dev In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts.\r\n    /// The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\r\n    /// @param fee0 The fee amount in token0 due to the pool by the end of the flash\r\n    /// @param fee1 The fee amount in token1 due to the pool by the end of the flash\r\n    /// @param data Any data passed through by the caller via the IBubblySwapPoolActions#flash call\r\n    function BubblySwapFlashCallback(\r\n        uint256 fee0,\r\n        uint256 fee1,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/callback/IBubblySwapMintCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IBubblySwapPoolActions#mint\r\n/// @notice Any contract that calls IBubblySwapPoolActions#mint must implement this interface\r\ninterface IBubblySwapMintCallback {\r\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IBubblySwapPool#mint.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\r\n    /// The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\r\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\r\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\r\n    /// @param data Any data passed through by the caller via the IBubblySwapPoolActions#mint call\r\n    function BubblySwapMintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/callback/IBubblySwapSwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IBubblySwapPoolActions#swap\r\n/// @notice Any contract that calls IBubblySwapPoolActions#swap must implement this interface\r\ninterface IBubblySwapSwapCallback {\r\n    /// @notice Called to `msg.sender` after executing a swap via IBubblySwapPool#swap.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n    /// The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\r\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n    /// @param data Any data passed through by the caller via the IBubblySwapPoolActions#swap call\r\n    function BubblySwapSwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"},"contracts/interfaces/IBubblySwapFactory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title The interface for the PancakeSwap V3 Factory\r\n/// @notice The PancakeSwap V3 Factory facilitates creation of PancakeSwap V3 pools and control over the protocol fees\r\ninterface IBubblySwapFactory {\r\n    struct TickSpacingExtraInfo {\r\n        bool whitelistRequested;\r\n        bool enabled;\r\n    }\r\n\r\n    /// @notice Emitted when the owner of the factory is changed\r\n    /// @param oldOwner The owner before the owner was changed\r\n    /// @param newOwner The owner after the owner was changed\r\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\r\n\r\n    /// @notice Emitted when a pool is created\r\n    /// @param token0 The first token of the pool by address sort order\r\n    /// @param token1 The second token of the pool by address sort order\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\r\n    /// @param pool The address of the created pool\r\n    event PoolCreated(\r\n        address indexed token0,\r\n        address indexed token1,\r\n        uint24 indexed fee,\r\n        int24 tickSpacing,\r\n        address pool\r\n    );\r\n\r\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip\r\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\r\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\r\n\r\n    event FeeAmountExtraInfoUpdated(uint24 indexed fee, bool whitelistRequested, bool enabled);\r\n\r\n    event WhiteListAdded(address indexed user, bool verified);\r\n\r\n    /// @notice Emitted when LM pool deployer is set\r\n    event SetLmPoolDeployer(address indexed lmPoolDeployer);\r\n\r\n    /// @notice Returns the current owner of the factory\r\n    /// @dev Can be changed by the current owner via setOwner\r\n    /// @return The address of the factory owner\r\n    function owner() external view returns (address);\r\n\r\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\r\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\r\n    /// @return The tick spacing\r\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\r\n\r\n    /// @notice Returns the tick spacing extra info\r\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\r\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\r\n    /// @return whitelistRequested The flag whether should be created by white list users only\r\n    function feeAmountTickSpacingExtraInfo(uint24 fee) external view returns (bool whitelistRequested, bool enabled);\r\n\r\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\r\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\r\n    /// @param tokenA The contract address of either token0 or token1\r\n    /// @param tokenB The contract address of the other token\r\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// @return pool The pool address\r\n    function getPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external view returns (address pool);\r\n\r\n    /// @notice Creates a pool for the given two tokens and fee\r\n    /// @param tokenA One of the two tokens in the desired pool\r\n    /// @param tokenB The other of the two tokens in the desired pool\r\n    /// @param fee The desired fee for the pool\r\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\r\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\r\n    /// are invalid.\r\n    /// @return pool The address of the newly created pool\r\n    function createPool(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24 fee\r\n    ) external returns (address pool);\r\n\r\n    /// @notice Updates the owner of the factory\r\n    /// @dev Must be called by the current owner\r\n    /// @param _owner The new owner of the factory\r\n    function setOwner(address _owner) external;\r\n\r\n    /// @notice Enables a fee amount with the given tickSpacing\r\n    /// @dev Fee amounts may never be removed once enabled\r\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\r\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\r\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\r\n\r\n    /// @notice Set an address into white list\r\n    /// @dev Address can be updated by owner with boolean value false\r\n    /// @param user The user address that add into white list\r\n    function setWhiteListAddress(address user, bool verified) external;\r\n\r\n    /// @notice Set a fee amount extra info\r\n    /// @dev Fee amounts can be updated by owner with extra info\r\n    /// @param whitelistRequested The flag whether should be created by owner only\r\n    /// @param enabled The flag is the fee is enabled or not\r\n    function setFeeAmountExtraInfo(\r\n        uint24 fee,\r\n        bool whitelistRequested,\r\n        bool enabled\r\n    ) external;\r\n\r\n    function setLmPoolDeployer(address _lmPoolDeployer) external;\r\n\r\n    function setFeeProtocol(address pool, uint32 feeProtocol0, uint32 feeProtocol1) external;\r\n\r\n    function collectProtocol(\r\n        address pool,\r\n        address recipient,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n    function setLmPool(address pool, address lmPool) external;\r\n}\r\n"},"contracts/interfaces/IBubblySwapPool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './pool/IBubblySwapPoolImmutables.sol';\r\nimport './pool/IBubblySwapPoolState.sol';\r\nimport './pool/IBubblySwapPoolDerivedState.sol';\r\nimport './pool/IBubblySwapPoolActions.sol';\r\nimport './pool/IBubblySwapPoolOwnerActions.sol';\r\nimport './pool/IBubblySwapPoolEvents.sol';\r\n\r\n/// @title The interface for a PancakeSwap V3 Pool\r\n/// @notice A PancakeSwap pool facilitates swapping and automated market making between any two assets that strictly conform\r\n/// to the ERC20 specification\r\n/// @dev The pool interface is broken up into many smaller pieces\r\ninterface IBubblySwapPool is\r\n    IBubblySwapPoolImmutables,\r\n    IBubblySwapPoolState,\r\n    IBubblySwapPoolDerivedState,\r\n    IBubblySwapPoolActions,\r\n    IBubblySwapPoolOwnerActions,\r\n    IBubblySwapPoolEvents\r\n{\r\n\r\n}\r\n"},"contracts/interfaces/IBubblySwapPoolDeployer.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title An interface for a contract that is capable of deploying PancakeSwap V3 Pools\r\n/// @notice A contract that constructs a pool must implement this to pass arguments to the pool\r\n/// @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\r\n/// of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\r\ninterface IBubblySwapPoolDeployer {\r\n    /// @notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\r\n    /// @dev Called by the pool constructor to fetch the parameters of the pool\r\n    /// Returns factory The factory address\r\n    /// Returns token0 The first token of the pool by address sort order\r\n    /// Returns token1 The second token of the pool by address sort order\r\n    /// Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\r\n    /// Returns tickSpacing The minimum number of ticks between initialized ticks\r\n    function parameters()\r\n        external\r\n        view\r\n        returns (\r\n            address factory,\r\n            address token0,\r\n            address token1,\r\n            uint24 fee,\r\n            int24 tickSpacing\r\n        );\r\n\r\n    function deploy(\r\n        address factory,\r\n        address token0,\r\n        address token1,\r\n        uint24 fee,\r\n        int24 tickSpacing\r\n    ) external returns (address pool);\r\n}\r\n"},"contracts/interfaces/IERC20Minimal.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Minimal ERC20 interface for PancakeSwap\r\n/// @notice Contains a subset of the full ERC20 interface that is used in PancakeSwap V3\r\ninterface IERC20Minimal {\r\n    /// @notice Returns the balance of a token\r\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\r\n    /// @return The number of tokens held by the account\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\r\n    /// @param recipient The account that will receive the amount transferred\r\n    /// @param amount The number of tokens to send from the sender to the recipient\r\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Returns the current allowance given to a spender by an owner\r\n    /// @param owner The account of the token owner\r\n    /// @param spender The account of the token spender\r\n    /// @return The current allowance granted by `owner` to `spender`\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\r\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\r\n    /// @param amount The amount of tokens allowed to be used by `spender`\r\n    /// @return Returns true for a successful approval, false for unsuccessful\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\r\n    /// @param sender The account from which the transfer will be initiated\r\n    /// @param recipient The recipient of the transfer\r\n    /// @param amount The amount of the transfer\r\n    /// @return Returns true for a successful transfer, false for unsuccessful\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\r\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\r\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\r\n    /// @param value The amount of tokens that were transferred\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\r\n    /// @param owner The account that approved spending of its tokens\r\n    /// @param spender The account for which the spending allowance was modified\r\n    /// @param value The new allowance from the owner to the spender\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"},"contracts/interfaces/pool/IBubblySwapPoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Permissionless pool actions\r\n/// @notice Contains pool methods that can be called by anyone\r\ninterface IBubblySwapPoolActions {\r\n    /// @notice Sets the initial price for the pool\r\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\r\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\r\n    function initialize(uint160 sqrtPriceX96) external;\r\n\r\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\r\n    /// @dev The caller of this method receives a callback in the form of IBubblySwapMintCallback#BubblySwapMintCallback\r\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\r\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\r\n    /// @param recipient The address for which the liquidity will be created\r\n    /// @param tickLower The lower tick of the position in which to add liquidity\r\n    /// @param tickUpper The upper tick of the position in which to add liquidity\r\n    /// @param amount The amount of liquidity to mint\r\n    /// @param data Any data that should be passed through to the callback\r\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\r\n    function mint(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount,\r\n        bytes calldata data\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Collects tokens owed to a position\r\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\r\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\r\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\r\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\r\n    /// @param recipient The address which should receive the fees collected\r\n    /// @param tickLower The lower tick of the position for which to collect fees\r\n    /// @param tickUpper The upper tick of the position for which to collect fees\r\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\r\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\r\n    /// @return amount0 The amount of fees collected in token0\r\n    /// @return amount1 The amount of fees collected in token1\r\n    function collect(\r\n        address recipient,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\r\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\r\n    /// @dev Fees must be collected separately via a call to #collect\r\n    /// @param tickLower The lower tick of the position for which to burn liquidity\r\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\r\n    /// @param amount How much liquidity to burn\r\n    /// @return amount0 The amount of token0 sent to the recipient\r\n    /// @return amount1 The amount of token1 sent to the recipient\r\n    function burn(\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 amount\r\n    ) external returns (uint256 amount0, uint256 amount1);\r\n\r\n    /// @notice Swap token0 for token1, or token1 for token0\r\n    /// @dev The caller of this method receives a callback in the form of IBubblySwapSwapCallback#BubblySwapSwapCallback\r\n    /// @param recipient The address to receive the output of the swap\r\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\r\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\r\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\r\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\r\n    /// @param data Any data to be passed through to the callback\r\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\r\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\r\n    function swap(\r\n        address recipient,\r\n        bool zeroForOne,\r\n        int256 amountSpecified,\r\n        uint160 sqrtPriceLimitX96,\r\n        bytes calldata data\r\n    ) external returns (int256 amount0, int256 amount1);\r\n\r\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\r\n    /// @dev The caller of this method receives a callback in the form of IBubblySwapFlashCallback#BubblySwapFlashCallback\r\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\r\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\r\n    /// @param recipient The address which will receive the token0 and token1 amounts\r\n    /// @param amount0 The amount of token0 to send\r\n    /// @param amount1 The amount of token1 to send\r\n    /// @param data Any data to be passed through to the callback\r\n    function flash(\r\n        address recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\r\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\r\n    /// the input observationCardinalityNext.\r\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\r\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\r\n}\r\n"},"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that is not stored\r\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\r\n/// blockchain. The functions here may have variable gas costs.\r\ninterface IBubblySwapPoolDerivedState {\r\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\r\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\r\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\r\n    /// you must call it with secondsAgos = [3600, 0].\r\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\r\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\r\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\r\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\r\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\r\n    /// timestamp\r\n    function observe(uint32[] calldata secondsAgos)\r\n        external\r\n        view\r\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\r\n\r\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\r\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\r\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\r\n    /// snapshot is taken and the second snapshot is taken.\r\n    /// @param tickLower The lower tick of the range\r\n    /// @param tickUpper The upper tick of the range\r\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\r\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\r\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\r\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\r\n        external\r\n        view\r\n        returns (\r\n            int56 tickCumulativeInside,\r\n            uint160 secondsPerLiquidityInsideX128,\r\n            uint32 secondsInside\r\n        );\r\n}\r\n"},"contracts/interfaces/pool/IBubblySwapPoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Events emitted by a pool\r\n/// @notice Contains all events emitted by the pool\r\ninterface IBubblySwapPoolEvents {\r\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\r\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\r\n\r\n    /// @notice Emitted when liquidity is minted for a given position\r\n    /// @param sender The address that minted the liquidity\r\n    /// @param owner The owner of the position and recipient of any minted liquidity\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity minted to the position range\r\n    /// @param amount0 How much token0 was required for the minted liquidity\r\n    /// @param amount1 How much token1 was required for the minted liquidity\r\n    event Mint(\r\n        address sender,\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted when fees are collected by the owner of a position\r\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n    /// @param owner The owner of the position for which fees are collected\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount0 The amount of token0 fees collected\r\n    /// @param amount1 The amount of token1 fees collected\r\n    event Collect(\r\n        address indexed owner,\r\n        address recipient,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount0,\r\n        uint128 amount1\r\n    );\r\n\r\n    /// @notice Emitted when a position's liquidity is removed\r\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n    /// @param owner The owner of the position for which liquidity is removed\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity to remove\r\n    /// @param amount0 The amount of token0 withdrawn\r\n    /// @param amount1 The amount of token1 withdrawn\r\n    event Burn(\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any swaps between token0 and token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the output of the swap\r\n    /// @param amount0 The delta of the token0 balance of the pool\r\n    /// @param amount1 The delta of the token1 balance of the pool\r\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\r\n    /// @param liquidity The liquidity of the pool after the swap\r\n    /// @param tick The log base 1.0001 of price of the pool after the swap\r\n    /// @param protocolFeesToken0 The protocol fee of token0 in the swap\r\n    /// @param protocolFeesToken1 The protocol fee of token1 in the swap\r\n    event Swap(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        int256 amount0,\r\n        int256 amount1,\r\n        uint160 sqrtPriceX96,\r\n        uint128 liquidity,\r\n        int24 tick,\r\n        uint128 protocolFeesToken0,\r\n        uint128 protocolFeesToken1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any flashes of token0/token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the tokens from flash\r\n    /// @param amount0 The amount of token0 that was flashed\r\n    /// @param amount1 The amount of token1 that was flashed\r\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n    event Flash(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        uint256 paid0,\r\n        uint256 paid1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\r\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\r\n    /// just before a mint/swap/burn.\r\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\r\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\r\n    event IncreaseObservationCardinalityNext(\r\n        uint16 observationCardinalityNextOld,\r\n        uint16 observationCardinalityNextNew\r\n    );\r\n\r\n    /// @notice Emitted when the protocol fee is changed by the pool\r\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\r\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\r\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\r\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\r\n    event SetFeeProtocol(\r\n        uint32 feeProtocol0Old,\r\n        uint32 feeProtocol1Old,\r\n        uint32 feeProtocol0New,\r\n        uint32 feeProtocol1New\r\n    );\r\n\r\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\r\n    /// @param sender The address that collects the protocol fees\r\n    /// @param recipient The address that receives the collected protocol fees\r\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\r\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\r\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\r\n}\r\n"},"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that never changes\r\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\r\ninterface IBubblySwapPoolImmutables {\r\n    /// @notice The contract that deployed the pool, which must adhere to the IBubblySwapFactory interface\r\n    /// @return The contract address\r\n    function factory() external view returns (address);\r\n\r\n    /// @notice The first of the two tokens of the pool, sorted by address\r\n    /// @return The token contract address\r\n    function token0() external view returns (address);\r\n\r\n    /// @notice The second of the two tokens of the pool, sorted by address\r\n    /// @return The token contract address\r\n    function token1() external view returns (address);\r\n\r\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\r\n    /// @return The fee\r\n    function fee() external view returns (uint24);\r\n\r\n    /// @notice The pool tick spacing\r\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\r\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\r\n    /// This value is an int24 to avoid casting even though it is always positive.\r\n    /// @return The tick spacing\r\n    function tickSpacing() external view returns (int24);\r\n\r\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\r\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\r\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\r\n    /// @return The max amount of liquidity per tick\r\n    function maxLiquidityPerTick() external view returns (uint128);\r\n}\r\n"},"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Permissioned pool actions\r\n/// @notice Contains pool methods that may only be called by the factory owner\r\ninterface IBubblySwapPoolOwnerActions {\r\n    /// @notice Set the denominator of the protocol's % share of the fees\r\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\r\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\r\n    function setFeeProtocol(uint32 feeProtocol0, uint32 feeProtocol1) external;\r\n\r\n    /// @notice Collect the protocol fee accrued to the pool\r\n    /// @param recipient The address to which collected protocol fees should be sent\r\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\r\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\r\n    /// @return amount0 The protocol fee collected in token0\r\n    /// @return amount1 The protocol fee collected in token1\r\n    function collectProtocol(\r\n        address recipient,\r\n        uint128 amount0Requested,\r\n        uint128 amount1Requested\r\n    ) external returns (uint128 amount0, uint128 amount1);\r\n\r\n    /// @notice Set the LM pool to enable liquidity mining\r\n    function setLmPool(address lmPool) external;\r\n}\r\n"},"contracts/interfaces/pool/IBubblySwapPoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Pool state that can change\r\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\r\n/// per transaction\r\ninterface IBubblySwapPoolState {\r\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\r\n    /// when accessed externally.\r\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\r\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\r\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\r\n    /// boundary.\r\n    /// observationIndex The index of the last oracle observation that was written,\r\n    /// observationCardinality The current maximum number of observations stored in the pool,\r\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\r\n    /// feeProtocol The protocol fee for both tokens of the pool.\r\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\r\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\r\n    /// unlocked Whether the pool is currently locked to reentrancy\r\n    function slot0()\r\n        external\r\n        view\r\n        returns (\r\n            uint160 sqrtPriceX96,\r\n            int24 tick,\r\n            uint16 observationIndex,\r\n            uint16 observationCardinality,\r\n            uint16 observationCardinalityNext,\r\n            uint32 feeProtocol,\r\n            bool unlocked\r\n        );\r\n\r\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\r\n    /// @dev This value can overflow the uint256\r\n    function feeGrowthGlobal0X128() external view returns (uint256);\r\n\r\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\r\n    /// @dev This value can overflow the uint256\r\n    function feeGrowthGlobal1X128() external view returns (uint256);\r\n\r\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\r\n    /// @dev Protocol fees will never exceed uint128 max in either token\r\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\r\n\r\n    /// @notice The currently in range liquidity available to the pool\r\n    /// @dev This value has no relationship to the total liquidity across all ticks\r\n    function liquidity() external view returns (uint128);\r\n\r\n    /// @notice Look up information about a specific tick in the pool\r\n    /// @param tick The tick to look up\r\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\r\n    /// tick upper,\r\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\r\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\r\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\r\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\r\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\r\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\r\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\r\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\r\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\r\n    /// a specific position.\r\n    function ticks(int24 tick)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 liquidityGross,\r\n            int128 liquidityNet,\r\n            uint256 feeGrowthOutside0X128,\r\n            uint256 feeGrowthOutside1X128,\r\n            int56 tickCumulativeOutside,\r\n            uint160 secondsPerLiquidityOutsideX128,\r\n            uint32 secondsOutside,\r\n            bool initialized\r\n        );\r\n\r\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\r\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\r\n\r\n    /// @notice Returns the information about a position by the position's key\r\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\r\n    /// @return _liquidity The amount of liquidity in the position,\r\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\r\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\r\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\r\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\r\n    function positions(bytes32 key)\r\n        external\r\n        view\r\n        returns (\r\n            uint128 _liquidity,\r\n            uint256 feeGrowthInside0LastX128,\r\n            uint256 feeGrowthInside1LastX128,\r\n            uint128 tokensOwed0,\r\n            uint128 tokensOwed1\r\n        );\r\n\r\n    /// @notice Returns data about a specific observation index\r\n    /// @param index The element of the observations array to fetch\r\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\r\n    /// ago, rather than at a specific index in the array.\r\n    /// @return blockTimestamp The timestamp of the observation,\r\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\r\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\r\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\r\n    function observations(uint256 index)\r\n        external\r\n        view\r\n        returns (\r\n            uint32 blockTimestamp,\r\n            int56 tickCumulative,\r\n            uint160 secondsPerLiquidityCumulativeX128,\r\n            bool initialized\r\n        );\r\n}\r\n"},"contracts/libraries/BitMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title BitMath\r\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\r\nlibrary BitMath {\r\n    /// @notice Returns the index of the most significant bit of the number,\r\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\r\n    /// @dev The function satisfies the property:\r\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\r\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\r\n    /// @return r the index of the most significant bit\r\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\r\n        require(x > 0);\r\n\r\n        if (x >= 0x100000000000000000000000000000000) {\r\n            x >>= 128;\r\n            r += 128;\r\n        }\r\n        if (x >= 0x10000000000000000) {\r\n            x >>= 64;\r\n            r += 64;\r\n        }\r\n        if (x >= 0x100000000) {\r\n            x >>= 32;\r\n            r += 32;\r\n        }\r\n        if (x >= 0x10000) {\r\n            x >>= 16;\r\n            r += 16;\r\n        }\r\n        if (x >= 0x100) {\r\n            x >>= 8;\r\n            r += 8;\r\n        }\r\n        if (x >= 0x10) {\r\n            x >>= 4;\r\n            r += 4;\r\n        }\r\n        if (x >= 0x4) {\r\n            x >>= 2;\r\n            r += 2;\r\n        }\r\n        if (x >= 0x2) r += 1;\r\n    }\r\n\r\n    /// @notice Returns the index of the least significant bit of the number,\r\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\r\n    /// @dev The function satisfies the property:\r\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\r\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\r\n    /// @return r the index of the least significant bit\r\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\r\n        require(x > 0);\r\n\r\n        r = 255;\r\n        if (x & type(uint128).max > 0) {\r\n            r -= 128;\r\n        } else {\r\n            x >>= 128;\r\n        }\r\n        if (x & type(uint64).max > 0) {\r\n            r -= 64;\r\n        } else {\r\n            x >>= 64;\r\n        }\r\n        if (x & type(uint32).max > 0) {\r\n            r -= 32;\r\n        } else {\r\n            x >>= 32;\r\n        }\r\n        if (x & type(uint16).max > 0) {\r\n            r -= 16;\r\n        } else {\r\n            x >>= 16;\r\n        }\r\n        if (x & type(uint8).max > 0) {\r\n            r -= 8;\r\n        } else {\r\n            x >>= 8;\r\n        }\r\n        if (x & 0xf > 0) {\r\n            r -= 4;\r\n        } else {\r\n            x >>= 4;\r\n        }\r\n        if (x & 0x3 > 0) {\r\n            r -= 2;\r\n        } else {\r\n            x >>= 2;\r\n        }\r\n        if (x & 0x1 > 0) r -= 1;\r\n    }\r\n}\r\n"},"contracts/libraries/FixedPoint128.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.4.0;\r\n\r\n/// @title FixedPoint128\r\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\r\nlibrary FixedPoint128 {\r\n    uint256 internal constant Q128 = 0x100000000000000000000000000000000;\r\n}\r\n"},"contracts/libraries/FixedPoint96.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.4.0;\r\n\r\n/// @title FixedPoint96\r\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\r\n/// @dev Used in SqrtPriceMath.sol\r\nlibrary FixedPoint96 {\r\n    uint8 internal constant RESOLUTION = 96;\r\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\r\n}\r\n"},"contracts/libraries/FullMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.4.0 <0.8.0;\r\n\r\n/// @title Contains 512-bit math functions\r\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\r\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\r\nlibrary FullMath {\r\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n    /// @param a The multiplicand\r\n    /// @param b The multiplier\r\n    /// @param denominator The divisor\r\n    /// @return result The 256-bit result\r\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\r\n    function mulDiv(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        // 512-bit multiply [prod1 prod0] = a * b\r\n        // Compute the product mod 2**256 and mod 2**256 - 1\r\n        // then use the Chinese Remainder Theorem to reconstruct\r\n        // the 512 bit result. The result is stored in two 256\r\n        // variables such that product = prod1 * 2**256 + prod0\r\n        uint256 prod0; // Least significant 256 bits of the product\r\n        uint256 prod1; // Most significant 256 bits of the product\r\n        assembly {\r\n            let mm := mulmod(a, b, not(0))\r\n            prod0 := mul(a, b)\r\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n        }\r\n\r\n        // Handle non-overflow cases, 256 by 256 division\r\n        if (prod1 == 0) {\r\n            require(denominator > 0);\r\n            assembly {\r\n                result := div(prod0, denominator)\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Make sure the result is less than 2**256.\r\n        // Also prevents denominator == 0\r\n        require(denominator > prod1);\r\n\r\n        ///////////////////////////////////////////////\r\n        // 512 by 256 division.\r\n        ///////////////////////////////////////////////\r\n\r\n        // Make division exact by subtracting the remainder from [prod1 prod0]\r\n        // Compute remainder using mulmod\r\n        uint256 remainder;\r\n        assembly {\r\n            remainder := mulmod(a, b, denominator)\r\n        }\r\n        // Subtract 256 bit number from 512 bit number\r\n        assembly {\r\n            prod1 := sub(prod1, gt(remainder, prod0))\r\n            prod0 := sub(prod0, remainder)\r\n        }\r\n\r\n        // Factor powers of two out of denominator\r\n        // Compute largest power of two divisor of denominator.\r\n        // Always >= 1.\r\n        uint256 twos = -denominator & denominator;\r\n        // Divide denominator by power of two\r\n        assembly {\r\n            denominator := div(denominator, twos)\r\n        }\r\n\r\n        // Divide [prod1 prod0] by the factors of two\r\n        assembly {\r\n            prod0 := div(prod0, twos)\r\n        }\r\n        // Shift in bits from prod1 into prod0. For this we need\r\n        // to flip `twos` such that it is 2**256 / twos.\r\n        // If twos is zero, then it becomes one\r\n        assembly {\r\n            twos := add(div(sub(0, twos), twos), 1)\r\n        }\r\n        prod0 |= prod1 * twos;\r\n\r\n        // Invert denominator mod 2**256\r\n        // Now that denominator is an odd number, it has an inverse\r\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\r\n        // Compute the inverse by starting with a seed that is correct\r\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\r\n        uint256 inv = (3 * denominator) ^ 2;\r\n        // Now use Newton-Raphson iteration to improve the precision.\r\n        // Thanks to Hensel's lifting lemma, this also works in modular\r\n        // arithmetic, doubling the correct bits in each step.\r\n        inv *= 2 - denominator * inv; // inverse mod 2**8\r\n        inv *= 2 - denominator * inv; // inverse mod 2**16\r\n        inv *= 2 - denominator * inv; // inverse mod 2**32\r\n        inv *= 2 - denominator * inv; // inverse mod 2**64\r\n        inv *= 2 - denominator * inv; // inverse mod 2**128\r\n        inv *= 2 - denominator * inv; // inverse mod 2**256\r\n\r\n        // Because the division is now exact we can divide by multiplying\r\n        // with the modular inverse of denominator. This will give us the\r\n        // correct result modulo 2**256. Since the precoditions guarantee\r\n        // that the outcome is less than 2**256, this is the final result.\r\n        // We don't need to compute the high bits of the result and prod1\r\n        // is no longer required.\r\n        result = prod0 * inv;\r\n        return result;\r\n    }\r\n\r\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n    /// @param a The multiplicand\r\n    /// @param b The multiplier\r\n    /// @param denominator The divisor\r\n    /// @return result The 256-bit result\r\n    function mulDivRoundingUp(\r\n        uint256 a,\r\n        uint256 b,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        result = mulDiv(a, b, denominator);\r\n        if (mulmod(a, b, denominator) > 0) {\r\n            require(result < type(uint256).max);\r\n            result++;\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/LiquidityMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Math library for liquidity\r\nlibrary LiquidityMath {\r\n    /// @notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\r\n    /// @param x The liquidity before change\r\n    /// @param y The delta by which liquidity should be changed\r\n    /// @return z The liquidity delta\r\n    function addDelta(uint128 x, int128 y) internal pure returns (uint128 z) {\r\n        if (y < 0) {\r\n            require((z = x - uint128(-y)) < x, 'LS');\r\n        } else {\r\n            require((z = x + uint128(y)) >= x, 'LA');\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/LowGasSafeMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.7.0;\r\n\r\n/// @title Optimized overflow and underflow safe math operations\r\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\r\nlibrary LowGasSafeMath {\r\n    /// @notice Returns x + y, reverts if sum overflows uint256\r\n    /// @param x The augend\r\n    /// @param y The addend\r\n    /// @return z The sum of x and y\r\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x + y) >= x);\r\n    }\r\n\r\n    /// @notice Returns x - y, reverts if underflows\r\n    /// @param x The minuend\r\n    /// @param y The subtrahend\r\n    /// @return z The difference of x and y\r\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require((z = x - y) <= x);\r\n    }\r\n\r\n    /// @notice Returns x * y, reverts if overflows\r\n    /// @param x The multiplicand\r\n    /// @param y The multiplier\r\n    /// @return z The product of x and y\r\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        require(x == 0 || (z = x * y) / x == y);\r\n    }\r\n\r\n    /// @notice Returns x + y, reverts if overflows or underflows\r\n    /// @param x The augend\r\n    /// @param y The addend\r\n    /// @return z The sum of x and y\r\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\r\n        require((z = x + y) >= x == (y >= 0));\r\n    }\r\n\r\n    /// @notice Returns x - y, reverts if overflows or underflows\r\n    /// @param x The minuend\r\n    /// @param y The subtrahend\r\n    /// @return z The difference of x and y\r\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\r\n        require((z = x - y) <= x == (y >= 0));\r\n    }\r\n}\r\n"},"contracts/libraries/Oracle.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/// @title Oracle\r\n/// @notice Provides price and liquidity data useful for a wide variety of system designs\r\n/// @dev Instances of stored oracle data, \"observations\", are collected in the oracle array\r\n/// Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the\r\n/// maximum length of the oracle array. New slots will be added when the array is fully populated.\r\n/// Observations are overwritten when the full length of the oracle array is populated.\r\n/// The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\r\nlibrary Oracle {\r\n    struct Observation {\r\n        // the block timestamp of the observation\r\n        uint32 blockTimestamp;\r\n        // the tick accumulator, i.e. tick * time elapsed since the pool was first initialized\r\n        int56 tickCumulative;\r\n        // the seconds per liquidity, i.e. seconds elapsed / max(1, liquidity) since the pool was first initialized\r\n        uint160 secondsPerLiquidityCumulativeX128;\r\n        // whether or not the observation is initialized\r\n        bool initialized;\r\n    }\r\n\r\n    /// @notice Transforms a previous observation into a new observation, given the passage of time and the current tick and liquidity values\r\n    /// @dev blockTimestamp _must_ be chronologically equal to or greater than last.blockTimestamp, safe for 0 or 1 overflows\r\n    /// @param last The specified observation to be transformed\r\n    /// @param blockTimestamp The timestamp of the new observation\r\n    /// @param tick The active tick at the time of the new observation\r\n    /// @param liquidity The total in-range liquidity at the time of the new observation\r\n    /// @return Observation The newly populated observation\r\n    function transform(\r\n        Observation memory last,\r\n        uint32 blockTimestamp,\r\n        int24 tick,\r\n        uint128 liquidity\r\n    ) private pure returns (Observation memory) {\r\n        uint32 delta = blockTimestamp - last.blockTimestamp;\r\n        return\r\n            Observation({\r\n                blockTimestamp: blockTimestamp,\r\n                tickCumulative: last.tickCumulative + int56(tick) * delta,\r\n                secondsPerLiquidityCumulativeX128: last.secondsPerLiquidityCumulativeX128 +\r\n                    ((uint160(delta) << 128) / (liquidity > 0 ? liquidity : 1)),\r\n                initialized: true\r\n            });\r\n    }\r\n\r\n    /// @notice Initialize the oracle array by writing the first slot. Called once for the lifecycle of the observations array\r\n    /// @param self The stored oracle array\r\n    /// @param time The time of the oracle initialization, via block.timestamp truncated to uint32\r\n    /// @return cardinality The number of populated elements in the oracle array\r\n    /// @return cardinalityNext The new length of the oracle array, independent of population\r\n    function initialize(Observation[65535] storage self, uint32 time)\r\n        internal\r\n        returns (uint16 cardinality, uint16 cardinalityNext)\r\n    {\r\n        self[0] = Observation({\r\n            blockTimestamp: time,\r\n            tickCumulative: 0,\r\n            secondsPerLiquidityCumulativeX128: 0,\r\n            initialized: true\r\n        });\r\n        return (1, 1);\r\n    }\r\n\r\n    /// @notice Writes an oracle observation to the array\r\n    /// @dev Writable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally.\r\n    /// If the index is at the end of the allowable array length (according to cardinality), and the next cardinality\r\n    /// is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.\r\n    /// @param self The stored oracle array\r\n    /// @param index The index of the observation that was most recently written to the observations array\r\n    /// @param blockTimestamp The timestamp of the new observation\r\n    /// @param tick The active tick at the time of the new observation\r\n    /// @param liquidity The total in-range liquidity at the time of the new observation\r\n    /// @param cardinality The number of populated elements in the oracle array\r\n    /// @param cardinalityNext The new length of the oracle array, independent of population\r\n    /// @return indexUpdated The new index of the most recently written element in the oracle array\r\n    /// @return cardinalityUpdated The new cardinality of the oracle array\r\n    function write(\r\n        Observation[65535] storage self,\r\n        uint16 index,\r\n        uint32 blockTimestamp,\r\n        int24 tick,\r\n        uint128 liquidity,\r\n        uint16 cardinality,\r\n        uint16 cardinalityNext\r\n    ) internal returns (uint16 indexUpdated, uint16 cardinalityUpdated) {\r\n        Observation memory last = self[index];\r\n\r\n        // early return if we've already written an observation this block\r\n        if (last.blockTimestamp == blockTimestamp) return (index, cardinality);\r\n\r\n        // if the conditions are right, we can bump the cardinality\r\n        if (cardinalityNext > cardinality && index == (cardinality - 1)) {\r\n            cardinalityUpdated = cardinalityNext;\r\n        } else {\r\n            cardinalityUpdated = cardinality;\r\n        }\r\n\r\n        indexUpdated = (index + 1) % cardinalityUpdated;\r\n        self[indexUpdated] = transform(last, blockTimestamp, tick, liquidity);\r\n    }\r\n\r\n    /// @notice Prepares the oracle array to store up to `next` observations\r\n    /// @param self The stored oracle array\r\n    /// @param current The current next cardinality of the oracle array\r\n    /// @param next The proposed next cardinality which will be populated in the oracle array\r\n    /// @return next The next cardinality which will be populated in the oracle array\r\n    function grow(\r\n        Observation[65535] storage self,\r\n        uint16 current,\r\n        uint16 next\r\n    ) internal returns (uint16) {\r\n        require(current > 0, 'I');\r\n        // no-op if the passed next value isn't greater than the current next value\r\n        if (next <= current) return current;\r\n        // store in each slot to prevent fresh SSTOREs in swaps\r\n        // this data will not be used because the initialized boolean is still false\r\n        for (uint16 i = current; i < next; i++) self[i].blockTimestamp = 1;\r\n        return next;\r\n    }\r\n\r\n    /// @notice comparator for 32-bit timestamps\r\n    /// @dev safe for 0 or 1 overflows, a and b _must_ be chronologically before or equal to time\r\n    /// @param time A timestamp truncated to 32 bits\r\n    /// @param a A comparison timestamp from which to determine the relative position of `time`\r\n    /// @param b From which to determine the relative position of `time`\r\n    /// @return bool Whether `a` is chronologically <= `b`\r\n    function lte(\r\n        uint32 time,\r\n        uint32 a,\r\n        uint32 b\r\n    ) private pure returns (bool) {\r\n        // if there hasn't been overflow, no need to adjust\r\n        if (a <= time && b <= time) return a <= b;\r\n\r\n        uint256 aAdjusted = a > time ? a : a + 2**32;\r\n        uint256 bAdjusted = b > time ? b : b + 2**32;\r\n\r\n        return aAdjusted <= bAdjusted;\r\n    }\r\n\r\n    /// @notice Fetches the observations beforeOrAt and atOrAfter a target, i.e. where [beforeOrAt, atOrAfter] is satisfied.\r\n    /// The result may be the same observation, or adjacent observations.\r\n    /// @dev The answer must be contained in the array, used when the target is located within the stored observation\r\n    /// boundaries: older than the most recent observation and younger, or the same age as, the oldest observation\r\n    /// @param self The stored oracle array\r\n    /// @param time The current block.timestamp\r\n    /// @param target The timestamp at which the reserved observation should be for\r\n    /// @param index The index of the observation that was most recently written to the observations array\r\n    /// @param cardinality The number of populated elements in the oracle array\r\n    /// @return beforeOrAt The observation recorded before, or at, the target\r\n    /// @return atOrAfter The observation recorded at, or after, the target\r\n    function binarySearch(\r\n        Observation[65535] storage self,\r\n        uint32 time,\r\n        uint32 target,\r\n        uint16 index,\r\n        uint16 cardinality\r\n    ) private view returns (Observation memory beforeOrAt, Observation memory atOrAfter) {\r\n        uint256 l = (index + 1) % cardinality; // oldest observation\r\n        uint256 r = l + cardinality - 1; // newest observation\r\n        uint256 i;\r\n        while (true) {\r\n            i = (l + r) / 2;\r\n\r\n            beforeOrAt = self[i % cardinality];\r\n\r\n            // we've landed on an uninitialized tick, keep searching higher (more recently)\r\n            if (!beforeOrAt.initialized) {\r\n                l = i + 1;\r\n                continue;\r\n            }\r\n\r\n            atOrAfter = self[(i + 1) % cardinality];\r\n\r\n            bool targetAtOrAfter = lte(time, beforeOrAt.blockTimestamp, target);\r\n\r\n            // check if we've found the answer!\r\n            if (targetAtOrAfter && lte(time, target, atOrAfter.blockTimestamp)) break;\r\n\r\n            if (!targetAtOrAfter) r = i - 1;\r\n            else l = i + 1;\r\n        }\r\n    }\r\n\r\n    /// @notice Fetches the observations beforeOrAt and atOrAfter a given target, i.e. where [beforeOrAt, atOrAfter] is satisfied\r\n    /// @dev Assumes there is at least 1 initialized observation.\r\n    /// Used by observeSingle() to compute the counterfactual accumulator values as of a given block timestamp.\r\n    /// @param self The stored oracle array\r\n    /// @param time The current block.timestamp\r\n    /// @param target The timestamp at which the reserved observation should be for\r\n    /// @param tick The active tick at the time of the returned or simulated observation\r\n    /// @param index The index of the observation that was most recently written to the observations array\r\n    /// @param liquidity The total pool liquidity at the time of the call\r\n    /// @param cardinality The number of populated elements in the oracle array\r\n    /// @return beforeOrAt The observation which occurred at, or before, the given timestamp\r\n    /// @return atOrAfter The observation which occurred at, or after, the given timestamp\r\n    function getSurroundingObservations(\r\n        Observation[65535] storage self,\r\n        uint32 time,\r\n        uint32 target,\r\n        int24 tick,\r\n        uint16 index,\r\n        uint128 liquidity,\r\n        uint16 cardinality\r\n    ) private view returns (Observation memory beforeOrAt, Observation memory atOrAfter) {\r\n        // optimistically set before to the newest observation\r\n        beforeOrAt = self[index];\r\n\r\n        // if the target is chronologically at or after the newest observation, we can early return\r\n        if (lte(time, beforeOrAt.blockTimestamp, target)) {\r\n            if (beforeOrAt.blockTimestamp == target) {\r\n                // if newest observation equals target, we're in the same block, so we can ignore atOrAfter\r\n                return (beforeOrAt, atOrAfter);\r\n            } else {\r\n                // otherwise, we need to transform\r\n                return (beforeOrAt, transform(beforeOrAt, target, tick, liquidity));\r\n            }\r\n        }\r\n\r\n        // now, set before to the oldest observation\r\n        beforeOrAt = self[(index + 1) % cardinality];\r\n        if (!beforeOrAt.initialized) beforeOrAt = self[0];\r\n\r\n        // ensure that the target is chronologically at or after the oldest observation\r\n        require(lte(time, beforeOrAt.blockTimestamp, target), 'OLD');\r\n\r\n        // if we've reached this point, we have to binary search\r\n        return binarySearch(self, time, target, index, cardinality);\r\n    }\r\n\r\n    /// @dev Reverts if an observation at or before the desired observation timestamp does not exist.\r\n    /// 0 may be passed as `secondsAgo' to return the current cumulative values.\r\n    /// If called with a timestamp falling between two observations, returns the counterfactual accumulator values\r\n    /// at exactly the timestamp between the two observations.\r\n    /// @param self The stored oracle array\r\n    /// @param time The current block timestamp\r\n    /// @param secondsAgo The amount of time to look back, in seconds, at which point to return an observation\r\n    /// @param tick The current tick\r\n    /// @param index The index of the observation that was most recently written to the observations array\r\n    /// @param liquidity The current in-range pool liquidity\r\n    /// @param cardinality The number of populated elements in the oracle array\r\n    /// @return tickCumulative The tick * time elapsed since the pool was first initialized, as of `secondsAgo`\r\n    /// @return secondsPerLiquidityCumulativeX128 The time elapsed / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`\r\n    function observeSingle(\r\n        Observation[65535] storage self,\r\n        uint32 time,\r\n        uint32 secondsAgo,\r\n        int24 tick,\r\n        uint16 index,\r\n        uint128 liquidity,\r\n        uint16 cardinality\r\n    ) internal view returns (int56 tickCumulative, uint160 secondsPerLiquidityCumulativeX128) {\r\n        if (secondsAgo == 0) {\r\n            Observation memory last = self[index];\r\n            if (last.blockTimestamp != time) last = transform(last, time, tick, liquidity);\r\n            return (last.tickCumulative, last.secondsPerLiquidityCumulativeX128);\r\n        }\r\n\r\n        uint32 target = time - secondsAgo;\r\n\r\n        (Observation memory beforeOrAt, Observation memory atOrAfter) = getSurroundingObservations(\r\n            self,\r\n            time,\r\n            target,\r\n            tick,\r\n            index,\r\n            liquidity,\r\n            cardinality\r\n        );\r\n\r\n        if (target == beforeOrAt.blockTimestamp) {\r\n            // we're at the left boundary\r\n            return (beforeOrAt.tickCumulative, beforeOrAt.secondsPerLiquidityCumulativeX128);\r\n        } else if (target == atOrAfter.blockTimestamp) {\r\n            // we're at the right boundary\r\n            return (atOrAfter.tickCumulative, atOrAfter.secondsPerLiquidityCumulativeX128);\r\n        } else {\r\n            // we're in the middle\r\n            uint32 observationTimeDelta = atOrAfter.blockTimestamp - beforeOrAt.blockTimestamp;\r\n            uint32 targetDelta = target - beforeOrAt.blockTimestamp;\r\n            return (\r\n                beforeOrAt.tickCumulative +\r\n                    ((atOrAfter.tickCumulative - beforeOrAt.tickCumulative) / observationTimeDelta) *\r\n                    targetDelta,\r\n                beforeOrAt.secondsPerLiquidityCumulativeX128 +\r\n                    uint160(\r\n                        (uint256(\r\n                            atOrAfter.secondsPerLiquidityCumulativeX128 - beforeOrAt.secondsPerLiquidityCumulativeX128\r\n                        ) * targetDelta) / observationTimeDelta\r\n                    )\r\n            );\r\n        }\r\n    }\r\n\r\n    /// @notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\r\n    /// @dev Reverts if `secondsAgos` > oldest observation\r\n    /// @param self The stored oracle array\r\n    /// @param time The current block.timestamp\r\n    /// @param secondsAgos Each amount of time to look back, in seconds, at which point to return an observation\r\n    /// @param tick The current tick\r\n    /// @param index The index of the observation that was most recently written to the observations array\r\n    /// @param liquidity The current in-range pool liquidity\r\n    /// @param cardinality The number of populated elements in the oracle array\r\n    /// @return tickCumulatives The tick * time elapsed since the pool was first initialized, as of each `secondsAgo`\r\n    /// @return secondsPerLiquidityCumulativeX128s The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`\r\n    function observe(\r\n        Observation[65535] storage self,\r\n        uint32 time,\r\n        uint32[] memory secondsAgos,\r\n        int24 tick,\r\n        uint16 index,\r\n        uint128 liquidity,\r\n        uint16 cardinality\r\n    ) internal view returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s) {\r\n        require(cardinality > 0, 'I');\r\n\r\n        tickCumulatives = new int56[](secondsAgos.length);\r\n        secondsPerLiquidityCumulativeX128s = new uint160[](secondsAgos.length);\r\n        for (uint256 i = 0; i < secondsAgos.length; i++) {\r\n            (tickCumulatives[i], secondsPerLiquidityCumulativeX128s[i]) = observeSingle(\r\n                self,\r\n                time,\r\n                secondsAgos[i],\r\n                tick,\r\n                index,\r\n                liquidity,\r\n                cardinality\r\n            );\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/Position.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\nimport './FullMath.sol';\r\nimport './FixedPoint128.sol';\r\nimport './LiquidityMath.sol';\r\n\r\n/// @title Position\r\n/// @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\r\n/// @dev Positions store additional state for tracking fees owed to the position\r\nlibrary Position {\r\n    // info stored for each user's position\r\n    struct Info {\r\n        // the amount of liquidity owned by this position\r\n        uint128 liquidity;\r\n        // fee growth per unit of liquidity as of the last update to liquidity or fees owed\r\n        uint256 feeGrowthInside0LastX128;\r\n        uint256 feeGrowthInside1LastX128;\r\n        // the fees owed to the position owner in token0/token1\r\n        uint128 tokensOwed0;\r\n        uint128 tokensOwed1;\r\n    }\r\n\r\n    /// @notice Returns the Info struct of a position, given an owner and position boundaries\r\n    /// @param self The mapping containing all user positions\r\n    /// @param owner The address of the position owner\r\n    /// @param tickLower The lower tick boundary of the position\r\n    /// @param tickUpper The upper tick boundary of the position\r\n    /// @return position The position info struct of the given owners' position\r\n    function get(\r\n        mapping(bytes32 => Info) storage self,\r\n        address owner,\r\n        int24 tickLower,\r\n        int24 tickUpper\r\n    ) internal view returns (Position.Info storage position) {\r\n        position = self[keccak256(abi.encodePacked(owner, tickLower, tickUpper))];\r\n    }\r\n\r\n    /// @notice Credits accumulated fees to a user's position\r\n    /// @param self The individual position to update\r\n    /// @param liquidityDelta The change in pool liquidity as a result of the position update\r\n    /// @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\r\n    /// @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\r\n    function update(\r\n        Info storage self,\r\n        int128 liquidityDelta,\r\n        uint256 feeGrowthInside0X128,\r\n        uint256 feeGrowthInside1X128\r\n    ) internal {\r\n        Info memory _self = self;\r\n\r\n        uint128 liquidityNext;\r\n        if (liquidityDelta == 0) {\r\n            require(_self.liquidity > 0, 'NP'); // disallow pokes for 0 liquidity positions\r\n            liquidityNext = _self.liquidity;\r\n        } else {\r\n            liquidityNext = LiquidityMath.addDelta(_self.liquidity, liquidityDelta);\r\n        }\r\n\r\n        // calculate accumulated fees\r\n        uint128 tokensOwed0 = uint128(\r\n            FullMath.mulDiv(feeGrowthInside0X128 - _self.feeGrowthInside0LastX128, _self.liquidity, FixedPoint128.Q128)\r\n        );\r\n        uint128 tokensOwed1 = uint128(\r\n            FullMath.mulDiv(feeGrowthInside1X128 - _self.feeGrowthInside1LastX128, _self.liquidity, FixedPoint128.Q128)\r\n        );\r\n\r\n        // update the position\r\n        if (liquidityDelta != 0) self.liquidity = liquidityNext;\r\n        self.feeGrowthInside0LastX128 = feeGrowthInside0X128;\r\n        self.feeGrowthInside1LastX128 = feeGrowthInside1X128;\r\n        if (tokensOwed0 > 0 || tokensOwed1 > 0) {\r\n            // overflow is acceptable, have to withdraw before you hit type(uint128).max fees\r\n            self.tokensOwed0 += tokensOwed0;\r\n            self.tokensOwed1 += tokensOwed1;\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/SafeCast.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Safe casting methods\r\n/// @notice Contains methods for safely casting between types\r\nlibrary SafeCast {\r\n    /// @notice Cast a uint256 to a uint160, revert on overflow\r\n    /// @param y The uint256 to be downcasted\r\n    /// @return z The downcasted integer, now type uint160\r\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\r\n        require((z = uint160(y)) == y);\r\n    }\r\n\r\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\r\n    /// @param y The int256 to be downcasted\r\n    /// @return z The downcasted integer, now type int128\r\n    function toInt128(int256 y) internal pure returns (int128 z) {\r\n        require((z = int128(y)) == y);\r\n    }\r\n\r\n    /// @notice Cast a uint256 to a int256, revert on overflow\r\n    /// @param y The uint256 to be casted\r\n    /// @return z The casted integer, now type int256\r\n    function toInt256(uint256 y) internal pure returns (int256 z) {\r\n        require(y < 2**255);\r\n        z = int256(y);\r\n    }\r\n}\r\n"},"contracts/libraries/SqrtPriceMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './LowGasSafeMath.sol';\r\nimport './SafeCast.sol';\r\n\r\nimport './FullMath.sol';\r\nimport './UnsafeMath.sol';\r\nimport './FixedPoint96.sol';\r\n\r\n/// @title Functions based on Q64.96 sqrt price and liquidity\r\n/// @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\r\nlibrary SqrtPriceMath {\r\n    using LowGasSafeMath for uint256;\r\n    using SafeCast for uint256;\r\n\r\n    /// @notice Gets the next sqrt price given a delta of token0\r\n    /// @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\r\n    /// far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\r\n    /// price less in order to not send too much output.\r\n    /// The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\r\n    /// if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\r\n    /// @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\r\n    /// @param liquidity The amount of usable liquidity\r\n    /// @param amount How much of token0 to add or remove from virtual reserves\r\n    /// @param add Whether to add or remove the amount of token0\r\n    /// @return The price after adding or removing amount, depending on add\r\n    function getNextSqrtPriceFromAmount0RoundingUp(\r\n        uint160 sqrtPX96,\r\n        uint128 liquidity,\r\n        uint256 amount,\r\n        bool add\r\n    ) internal pure returns (uint160) {\r\n        // we short circuit amount == 0 because the result is otherwise not guaranteed to equal the input price\r\n        if (amount == 0) return sqrtPX96;\r\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\r\n\r\n        if (add) {\r\n            uint256 product;\r\n            if ((product = amount * sqrtPX96) / amount == sqrtPX96) {\r\n                uint256 denominator = numerator1 + product;\r\n                if (denominator >= numerator1)\r\n                    // always fits in 160 bits\r\n                    return uint160(FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator));\r\n            }\r\n\r\n            return uint160(UnsafeMath.divRoundingUp(numerator1, (numerator1 / sqrtPX96).add(amount)));\r\n        } else {\r\n            uint256 product;\r\n            // if the product overflows, we know the denominator underflows\r\n            // in addition, we must check that the denominator does not underflow\r\n            require((product = amount * sqrtPX96) / amount == sqrtPX96 && numerator1 > product);\r\n            uint256 denominator = numerator1 - product;\r\n            return FullMath.mulDivRoundingUp(numerator1, sqrtPX96, denominator).toUint160();\r\n        }\r\n    }\r\n\r\n    /// @notice Gets the next sqrt price given a delta of token1\r\n    /// @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\r\n    /// far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\r\n    /// price less in order to not send too much output.\r\n    /// The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\r\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\r\n    /// @param liquidity The amount of usable liquidity\r\n    /// @param amount How much of token1 to add, or remove, from virtual reserves\r\n    /// @param add Whether to add, or remove, the amount of token1\r\n    /// @return The price after adding or removing `amount`\r\n    function getNextSqrtPriceFromAmount1RoundingDown(\r\n        uint160 sqrtPX96,\r\n        uint128 liquidity,\r\n        uint256 amount,\r\n        bool add\r\n    ) internal pure returns (uint160) {\r\n        // if we're adding (subtracting), rounding down requires rounding the quotient down (up)\r\n        // in both cases, avoid a mulDiv for most inputs\r\n        if (add) {\r\n            uint256 quotient = (\r\n                amount <= type(uint160).max\r\n                    ? (amount << FixedPoint96.RESOLUTION) / liquidity\r\n                    : FullMath.mulDiv(amount, FixedPoint96.Q96, liquidity)\r\n            );\r\n\r\n            return uint256(sqrtPX96).add(quotient).toUint160();\r\n        } else {\r\n            uint256 quotient = (\r\n                amount <= type(uint160).max\r\n                    ? UnsafeMath.divRoundingUp(amount << FixedPoint96.RESOLUTION, liquidity)\r\n                    : FullMath.mulDivRoundingUp(amount, FixedPoint96.Q96, liquidity)\r\n            );\r\n\r\n            require(sqrtPX96 > quotient);\r\n            // always fits 160 bits\r\n            return uint160(sqrtPX96 - quotient);\r\n        }\r\n    }\r\n\r\n    /// @notice Gets the next sqrt price given an input amount of token0 or token1\r\n    /// @dev Throws if price or liquidity are 0, or if the next price is out of bounds\r\n    /// @param sqrtPX96 The starting price, i.e., before accounting for the input amount\r\n    /// @param liquidity The amount of usable liquidity\r\n    /// @param amountIn How much of token0, or token1, is being swapped in\r\n    /// @param zeroForOne Whether the amount in is token0 or token1\r\n    /// @return sqrtQX96 The price after adding the input amount to token0 or token1\r\n    function getNextSqrtPriceFromInput(\r\n        uint160 sqrtPX96,\r\n        uint128 liquidity,\r\n        uint256 amountIn,\r\n        bool zeroForOne\r\n    ) internal pure returns (uint160 sqrtQX96) {\r\n        require(sqrtPX96 > 0);\r\n        require(liquidity > 0);\r\n\r\n        // round to make sure that we don't pass the target price\r\n        return\r\n            zeroForOne\r\n                ? getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountIn, true)\r\n                : getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountIn, true);\r\n    }\r\n\r\n    /// @notice Gets the next sqrt price given an output amount of token0 or token1\r\n    /// @dev Throws if price or liquidity are 0 or the next price is out of bounds\r\n    /// @param sqrtPX96 The starting price before accounting for the output amount\r\n    /// @param liquidity The amount of usable liquidity\r\n    /// @param amountOut How much of token0, or token1, is being swapped out\r\n    /// @param zeroForOne Whether the amount out is token0 or token1\r\n    /// @return sqrtQX96 The price after removing the output amount of token0 or token1\r\n    function getNextSqrtPriceFromOutput(\r\n        uint160 sqrtPX96,\r\n        uint128 liquidity,\r\n        uint256 amountOut,\r\n        bool zeroForOne\r\n    ) internal pure returns (uint160 sqrtQX96) {\r\n        require(sqrtPX96 > 0);\r\n        require(liquidity > 0);\r\n\r\n        // round to make sure that we pass the target price\r\n        return\r\n            zeroForOne\r\n                ? getNextSqrtPriceFromAmount1RoundingDown(sqrtPX96, liquidity, amountOut, false)\r\n                : getNextSqrtPriceFromAmount0RoundingUp(sqrtPX96, liquidity, amountOut, false);\r\n    }\r\n\r\n    /// @notice Gets the amount0 delta between two prices\r\n    /// @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\r\n    /// i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\r\n    /// @param sqrtRatioAX96 A sqrt price\r\n    /// @param sqrtRatioBX96 Another sqrt price\r\n    /// @param liquidity The amount of usable liquidity\r\n    /// @param roundUp Whether to round the amount up or down\r\n    /// @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices\r\n    function getAmount0Delta(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity,\r\n        bool roundUp\r\n    ) internal pure returns (uint256 amount0) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        uint256 numerator1 = uint256(liquidity) << FixedPoint96.RESOLUTION;\r\n        uint256 numerator2 = sqrtRatioBX96 - sqrtRatioAX96;\r\n\r\n        require(sqrtRatioAX96 > 0);\r\n\r\n        return\r\n            roundUp\r\n                ? UnsafeMath.divRoundingUp(\r\n                    FullMath.mulDivRoundingUp(numerator1, numerator2, sqrtRatioBX96),\r\n                    sqrtRatioAX96\r\n                )\r\n                : FullMath.mulDiv(numerator1, numerator2, sqrtRatioBX96) / sqrtRatioAX96;\r\n    }\r\n\r\n    /// @notice Gets the amount1 delta between two prices\r\n    /// @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\r\n    /// @param sqrtRatioAX96 A sqrt price\r\n    /// @param sqrtRatioBX96 Another sqrt price\r\n    /// @param liquidity The amount of usable liquidity\r\n    /// @param roundUp Whether to round the amount up, or down\r\n    /// @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices\r\n    function getAmount1Delta(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        uint128 liquidity,\r\n        bool roundUp\r\n    ) internal pure returns (uint256 amount1) {\r\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\r\n\r\n        return\r\n            roundUp\r\n                ? FullMath.mulDivRoundingUp(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96)\r\n                : FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\r\n    }\r\n\r\n    /// @notice Helper that gets signed token0 delta\r\n    /// @param sqrtRatioAX96 A sqrt price\r\n    /// @param sqrtRatioBX96 Another sqrt price\r\n    /// @param liquidity The change in liquidity for which to compute the amount0 delta\r\n    /// @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices\r\n    function getAmount0Delta(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        int128 liquidity\r\n    ) internal pure returns (int256 amount0) {\r\n        return\r\n            liquidity < 0\r\n                ? -getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\r\n                : getAmount0Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\r\n    }\r\n\r\n    /// @notice Helper that gets signed token1 delta\r\n    /// @param sqrtRatioAX96 A sqrt price\r\n    /// @param sqrtRatioBX96 Another sqrt price\r\n    /// @param liquidity The change in liquidity for which to compute the amount1 delta\r\n    /// @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices\r\n    function getAmount1Delta(\r\n        uint160 sqrtRatioAX96,\r\n        uint160 sqrtRatioBX96,\r\n        int128 liquidity\r\n    ) internal pure returns (int256 amount1) {\r\n        return\r\n            liquidity < 0\r\n                ? -getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(-liquidity), false).toInt256()\r\n                : getAmount1Delta(sqrtRatioAX96, sqrtRatioBX96, uint128(liquidity), true).toInt256();\r\n    }\r\n}\r\n"},"contracts/libraries/SwapMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './FullMath.sol';\r\nimport './SqrtPriceMath.sol';\r\n\r\n/// @title Computes the result of a swap within ticks\r\n/// @notice Contains methods for computing the result of a swap within a single tick price range, i.e., a single tick.\r\nlibrary SwapMath {\r\n    /// @notice Computes the result of swapping some amount in, or amount out, given the parameters of the swap\r\n    /// @dev The fee, plus the amount in, will never exceed the amount remaining if the swap's `amountSpecified` is positive\r\n    /// @param sqrtRatioCurrentX96 The current sqrt price of the pool\r\n    /// @param sqrtRatioTargetX96 The price that cannot be exceeded, from which the direction of the swap is inferred\r\n    /// @param liquidity The usable liquidity\r\n    /// @param amountRemaining How much input or output amount is remaining to be swapped in/out\r\n    /// @param feePips The fee taken from the input amount, expressed in hundredths of a bip\r\n    /// @return sqrtRatioNextX96 The price after swapping the amount in/out, not to exceed the price target\r\n    /// @return amountIn The amount to be swapped in, of either token0 or token1, based on the direction of the swap\r\n    /// @return amountOut The amount to be received, of either token0 or token1, based on the direction of the swap\r\n    /// @return feeAmount The amount of input that will be taken as a fee\r\n    function computeSwapStep(\r\n        uint160 sqrtRatioCurrentX96,\r\n        uint160 sqrtRatioTargetX96,\r\n        uint128 liquidity,\r\n        int256 amountRemaining,\r\n        uint24 feePips\r\n    )\r\n        internal\r\n        pure\r\n        returns (\r\n            uint160 sqrtRatioNextX96,\r\n            uint256 amountIn,\r\n            uint256 amountOut,\r\n            uint256 feeAmount\r\n        )\r\n    {\r\n        bool zeroForOne = sqrtRatioCurrentX96 >= sqrtRatioTargetX96;\r\n        bool exactIn = amountRemaining >= 0;\r\n\r\n        if (exactIn) {\r\n            uint256 amountRemainingLessFee = FullMath.mulDiv(uint256(amountRemaining), 1e6 - feePips, 1e6);\r\n            amountIn = zeroForOne\r\n                ? SqrtPriceMath.getAmount0Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, true)\r\n                : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, true);\r\n            if (amountRemainingLessFee >= amountIn) sqrtRatioNextX96 = sqrtRatioTargetX96;\r\n            else\r\n                sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromInput(\r\n                    sqrtRatioCurrentX96,\r\n                    liquidity,\r\n                    amountRemainingLessFee,\r\n                    zeroForOne\r\n                );\r\n        } else {\r\n            amountOut = zeroForOne\r\n                ? SqrtPriceMath.getAmount1Delta(sqrtRatioTargetX96, sqrtRatioCurrentX96, liquidity, false)\r\n                : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, sqrtRatioTargetX96, liquidity, false);\r\n            if (uint256(-amountRemaining) >= amountOut) sqrtRatioNextX96 = sqrtRatioTargetX96;\r\n            else\r\n                sqrtRatioNextX96 = SqrtPriceMath.getNextSqrtPriceFromOutput(\r\n                    sqrtRatioCurrentX96,\r\n                    liquidity,\r\n                    uint256(-amountRemaining),\r\n                    zeroForOne\r\n                );\r\n        }\r\n\r\n        bool max = sqrtRatioTargetX96 == sqrtRatioNextX96;\r\n\r\n        // get the input/output amounts\r\n        if (zeroForOne) {\r\n            amountIn = max && exactIn\r\n                ? amountIn\r\n                : SqrtPriceMath.getAmount0Delta(sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, true);\r\n            amountOut = max && !exactIn\r\n                ? amountOut\r\n                : SqrtPriceMath.getAmount1Delta(sqrtRatioNextX96, sqrtRatioCurrentX96, liquidity, false);\r\n        } else {\r\n            amountIn = max && exactIn\r\n                ? amountIn\r\n                : SqrtPriceMath.getAmount1Delta(sqrtRatioCurrentX96, sqrtRatioNextX96, liquidity, true);\r\n            amountOut = max && !exactIn\r\n                ? amountOut\r\n                : SqrtPriceMath.getAmount0Delta(sqrtRatioCurrentX96, sqrtRatioNextX96, liquidity, false);\r\n        }\r\n\r\n        // cap the output amount to not exceed the remaining output amount\r\n        if (!exactIn && amountOut > uint256(-amountRemaining)) {\r\n            amountOut = uint256(-amountRemaining);\r\n        }\r\n\r\n        if (exactIn && sqrtRatioNextX96 != sqrtRatioTargetX96) {\r\n            // we didn't reach the target, so take the remainder of the maximum input as fee\r\n            feeAmount = uint256(amountRemaining) - amountIn;\r\n        } else {\r\n            feeAmount = FullMath.mulDivRoundingUp(amountIn, feePips, 1e6 - feePips);\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/Tick.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\nimport './LowGasSafeMath.sol';\r\nimport './SafeCast.sol';\r\n\r\nimport './TickMath.sol';\r\nimport './LiquidityMath.sol';\r\n\r\n/// @title Tick\r\n/// @notice Contains functions for managing tick processes and relevant calculations\r\nlibrary Tick {\r\n    using LowGasSafeMath for int256;\r\n    using SafeCast for int256;\r\n\r\n    // info stored for each initialized individual tick\r\n    struct Info {\r\n        // the total position liquidity that references this tick\r\n        uint128 liquidityGross;\r\n        // amount of net liquidity added (subtracted) when tick is crossed from left to right (right to left),\r\n        int128 liquidityNet;\r\n        // fee growth per unit of liquidity on the _other_ side of this tick (relative to the current tick)\r\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\r\n        uint256 feeGrowthOutside0X128;\r\n        uint256 feeGrowthOutside1X128;\r\n        // the cumulative tick value on the other side of the tick\r\n        int56 tickCumulativeOutside;\r\n        // the seconds per unit of liquidity on the _other_ side of this tick (relative to the current tick)\r\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\r\n        uint160 secondsPerLiquidityOutsideX128;\r\n        // the seconds spent on the other side of the tick (relative to the current tick)\r\n        // only has relative meaning, not absolute — the value depends on when the tick is initialized\r\n        uint32 secondsOutside;\r\n        // true iff the tick is initialized, i.e. the value is exactly equivalent to the expression liquidityGross != 0\r\n        // these 8 bits are set to prevent fresh sstores when crossing newly initialized ticks\r\n        bool initialized;\r\n    }\r\n\r\n    /// @notice Derives max liquidity per tick from given tick spacing\r\n    /// @dev Executed within the pool constructor\r\n    /// @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\r\n    ///     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\r\n    /// @return The max liquidity per tick\r\n    function tickSpacingToMaxLiquidityPerTick(int24 tickSpacing) internal pure returns (uint128) {\r\n        int24 minTick = (TickMath.MIN_TICK / tickSpacing) * tickSpacing;\r\n        int24 maxTick = (TickMath.MAX_TICK / tickSpacing) * tickSpacing;\r\n        uint24 numTicks = uint24((maxTick - minTick) / tickSpacing) + 1;\r\n        return type(uint128).max / numTicks;\r\n    }\r\n\r\n    /// @notice Retrieves fee growth data\r\n    /// @param self The mapping containing all tick information for initialized ticks\r\n    /// @param tickLower The lower tick boundary of the position\r\n    /// @param tickUpper The upper tick boundary of the position\r\n    /// @param tickCurrent The current tick\r\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\r\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\r\n    /// @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\r\n    /// @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries\r\n    function getFeeGrowthInside(\r\n        mapping(int24 => Tick.Info) storage self,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        int24 tickCurrent,\r\n        uint256 feeGrowthGlobal0X128,\r\n        uint256 feeGrowthGlobal1X128\r\n    ) internal view returns (uint256 feeGrowthInside0X128, uint256 feeGrowthInside1X128) {\r\n        Info storage lower = self[tickLower];\r\n        Info storage upper = self[tickUpper];\r\n\r\n        // calculate fee growth below\r\n        uint256 feeGrowthBelow0X128;\r\n        uint256 feeGrowthBelow1X128;\r\n        if (tickCurrent >= tickLower) {\r\n            feeGrowthBelow0X128 = lower.feeGrowthOutside0X128;\r\n            feeGrowthBelow1X128 = lower.feeGrowthOutside1X128;\r\n        } else {\r\n            feeGrowthBelow0X128 = feeGrowthGlobal0X128 - lower.feeGrowthOutside0X128;\r\n            feeGrowthBelow1X128 = feeGrowthGlobal1X128 - lower.feeGrowthOutside1X128;\r\n        }\r\n\r\n        // calculate fee growth above\r\n        uint256 feeGrowthAbove0X128;\r\n        uint256 feeGrowthAbove1X128;\r\n        if (tickCurrent < tickUpper) {\r\n            feeGrowthAbove0X128 = upper.feeGrowthOutside0X128;\r\n            feeGrowthAbove1X128 = upper.feeGrowthOutside1X128;\r\n        } else {\r\n            feeGrowthAbove0X128 = feeGrowthGlobal0X128 - upper.feeGrowthOutside0X128;\r\n            feeGrowthAbove1X128 = feeGrowthGlobal1X128 - upper.feeGrowthOutside1X128;\r\n        }\r\n\r\n        feeGrowthInside0X128 = feeGrowthGlobal0X128 - feeGrowthBelow0X128 - feeGrowthAbove0X128;\r\n        feeGrowthInside1X128 = feeGrowthGlobal1X128 - feeGrowthBelow1X128 - feeGrowthAbove1X128;\r\n    }\r\n\r\n    /// @notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\r\n    /// @param self The mapping containing all tick information for initialized ticks\r\n    /// @param tick The tick that will be updated\r\n    /// @param tickCurrent The current tick\r\n    /// @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\r\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\r\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\r\n    /// @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\r\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\r\n    /// @param time The current block timestamp cast to a uint32\r\n    /// @param upper true for updating a position's upper tick, or false for updating a position's lower tick\r\n    /// @param maxLiquidity The maximum liquidity allocation for a single tick\r\n    /// @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa\r\n    function update(\r\n        mapping(int24 => Tick.Info) storage self,\r\n        int24 tick,\r\n        int24 tickCurrent,\r\n        int128 liquidityDelta,\r\n        uint256 feeGrowthGlobal0X128,\r\n        uint256 feeGrowthGlobal1X128,\r\n        uint160 secondsPerLiquidityCumulativeX128,\r\n        int56 tickCumulative,\r\n        uint32 time,\r\n        bool upper,\r\n        uint128 maxLiquidity\r\n    ) internal returns (bool flipped) {\r\n        Tick.Info storage info = self[tick];\r\n\r\n        uint128 liquidityGrossBefore = info.liquidityGross;\r\n        uint128 liquidityGrossAfter = LiquidityMath.addDelta(liquidityGrossBefore, liquidityDelta);\r\n\r\n        require(liquidityGrossAfter <= maxLiquidity, 'LO');\r\n\r\n        flipped = (liquidityGrossAfter == 0) != (liquidityGrossBefore == 0);\r\n\r\n        if (liquidityGrossBefore == 0) {\r\n            // by convention, we assume that all growth before a tick was initialized happened _below_ the tick\r\n            if (tick <= tickCurrent) {\r\n                info.feeGrowthOutside0X128 = feeGrowthGlobal0X128;\r\n                info.feeGrowthOutside1X128 = feeGrowthGlobal1X128;\r\n                info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128;\r\n                info.tickCumulativeOutside = tickCumulative;\r\n                info.secondsOutside = time;\r\n            }\r\n            info.initialized = true;\r\n        }\r\n\r\n        info.liquidityGross = liquidityGrossAfter;\r\n\r\n        // when the lower (upper) tick is crossed left to right (right to left), liquidity must be added (removed)\r\n        info.liquidityNet = upper\r\n            ? int256(info.liquidityNet).sub(liquidityDelta).toInt128()\r\n            : int256(info.liquidityNet).add(liquidityDelta).toInt128();\r\n    }\r\n\r\n    /// @notice Clears tick data\r\n    /// @param self The mapping containing all initialized tick information for initialized ticks\r\n    /// @param tick The tick that will be cleared\r\n    function clear(mapping(int24 => Tick.Info) storage self, int24 tick) internal {\r\n        delete self[tick];\r\n    }\r\n\r\n    /// @notice Transitions to next tick as needed by price movement\r\n    /// @param self The mapping containing all tick information for initialized ticks\r\n    /// @param tick The destination tick of the transition\r\n    /// @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\r\n    /// @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\r\n    /// @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\r\n    /// @param tickCumulative The tick * time elapsed since the pool was first initialized\r\n    /// @param time The current block.timestamp\r\n    /// @return liquidityNet The amount of liquidity added (subtracted) when tick is crossed from left to right (right to left)\r\n    function cross(\r\n        mapping(int24 => Tick.Info) storage self,\r\n        int24 tick,\r\n        uint256 feeGrowthGlobal0X128,\r\n        uint256 feeGrowthGlobal1X128,\r\n        uint160 secondsPerLiquidityCumulativeX128,\r\n        int56 tickCumulative,\r\n        uint32 time\r\n    ) internal returns (int128 liquidityNet) {\r\n        Tick.Info storage info = self[tick];\r\n        info.feeGrowthOutside0X128 = feeGrowthGlobal0X128 - info.feeGrowthOutside0X128;\r\n        info.feeGrowthOutside1X128 = feeGrowthGlobal1X128 - info.feeGrowthOutside1X128;\r\n        info.secondsPerLiquidityOutsideX128 = secondsPerLiquidityCumulativeX128 - info.secondsPerLiquidityOutsideX128;\r\n        info.tickCumulativeOutside = tickCumulative - info.tickCumulativeOutside;\r\n        info.secondsOutside = time - info.secondsOutside;\r\n        liquidityNet = info.liquidityNet;\r\n    }\r\n}\r\n"},"contracts/libraries/TickBitmap.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\nimport './BitMath.sol';\r\n\r\n/// @title Packed tick initialized state library\r\n/// @notice Stores a packed mapping of tick index to its initialized state\r\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\r\nlibrary TickBitmap {\r\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\r\n    /// @param tick The tick for which to compute the position\r\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\r\n    /// @return bitPos The bit position in the word where the flag is stored\r\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\r\n        wordPos = int16(tick >> 8);\r\n        bitPos = uint8(tick % 256);\r\n    }\r\n\r\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\r\n    /// @param self The mapping in which to flip the tick\r\n    /// @param tick The tick to flip\r\n    /// @param tickSpacing The spacing between usable ticks\r\n    function flipTick(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 tick,\r\n        int24 tickSpacing\r\n    ) internal {\r\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\r\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\r\n        uint256 mask = 1 << bitPos;\r\n        self[wordPos] ^= mask;\r\n    }\r\n\r\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\r\n    /// to the left (less than or equal to) or right (greater than) of the given tick\r\n    /// @param self The mapping in which to compute the next initialized tick\r\n    /// @param tick The starting tick\r\n    /// @param tickSpacing The spacing between usable ticks\r\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\r\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\r\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\r\n    function nextInitializedTickWithinOneWord(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 tick,\r\n        int24 tickSpacing,\r\n        bool lte\r\n    ) internal view returns (int24 next, bool initialized) {\r\n        int24 compressed = tick / tickSpacing;\r\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\r\n\r\n        if (lte) {\r\n            (int16 wordPos, uint8 bitPos) = position(compressed);\r\n            // all the 1s at or to the right of the current bitPos\r\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\r\n            uint256 masked = self[wordPos] & mask;\r\n\r\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\r\n            initialized = masked != 0;\r\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\r\n            next = initialized\r\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\r\n                : (compressed - int24(bitPos)) * tickSpacing;\r\n        } else {\r\n            // start from the word of the next tick, since the current tick state doesn't matter\r\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\r\n            // all the 1s at or to the left of the bitPos\r\n            uint256 mask = ~((1 << bitPos) - 1);\r\n            uint256 masked = self[wordPos] & mask;\r\n\r\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\r\n            initialized = masked != 0;\r\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\r\n            next = initialized\r\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\r\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\r\n        }\r\n    }\r\n}\r\n"},"contracts/libraries/TickMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/// @title Math library for computing sqrt prices from ticks and vice versa\r\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\r\n/// prices between 2**-128 and 2**128\r\nlibrary TickMath {\r\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\r\n    int24 internal constant MIN_TICK = -887272;\r\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\r\n    int24 internal constant MAX_TICK = -MIN_TICK;\r\n\r\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\r\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\r\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\r\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\r\n\r\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\r\n    /// @dev Throws if |tick| > max tick\r\n    /// @param tick The input tick for the above formula\r\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\r\n    /// at the given tick\r\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\r\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\r\n        require(absTick <= uint256(MAX_TICK), 'T');\r\n\r\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\r\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\r\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\r\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\r\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\r\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\r\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\r\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\r\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\r\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\r\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\r\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\r\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\r\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\r\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\r\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\r\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\r\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\r\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\r\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\r\n\r\n        if (tick > 0) ratio = type(uint256).max / ratio;\r\n\r\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\r\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\r\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\r\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\r\n    }\r\n\r\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\r\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\r\n    /// ever return.\r\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\r\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\r\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\r\n        // second inequality must be < because the price can never reach the price at the max tick\r\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\r\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\r\n\r\n        uint256 r = ratio;\r\n        uint256 msb = 0;\r\n\r\n        assembly {\r\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(5, gt(r, 0xFFFFFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(4, gt(r, 0xFFFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(3, gt(r, 0xFF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(2, gt(r, 0xF))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := shl(1, gt(r, 0x3))\r\n            msb := or(msb, f)\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            let f := gt(r, 0x1)\r\n            msb := or(msb, f)\r\n        }\r\n\r\n        if (msb >= 128) r = ratio >> (msb - 127);\r\n        else r = ratio << (127 - msb);\r\n\r\n        int256 log_2 = (int256(msb) - 128) << 64;\r\n\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(63, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(62, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(61, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(60, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(59, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(58, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(57, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(56, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(55, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(54, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(53, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(52, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(51, f))\r\n            r := shr(f, r)\r\n        }\r\n        assembly {\r\n            r := shr(127, mul(r, r))\r\n            let f := shr(128, r)\r\n            log_2 := or(log_2, shl(50, f))\r\n        }\r\n\r\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\r\n\r\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\r\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\r\n\r\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\r\n    }\r\n}\r\n"},"contracts/libraries/TransferHelper.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.6.0;\r\n\r\nimport '../interfaces/IERC20Minimal.sol';\r\n\r\n/// @title TransferHelper\r\n/// @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\r\nlibrary TransferHelper {\r\n    /// @notice Transfers tokens from msg.sender to a recipient\r\n    /// @dev Calls transfer on token contract, errors with TF if transfer fails\r\n    /// @param token The contract address of the token which will be transferred\r\n    /// @param to The recipient of the transfer\r\n    /// @param value The value of the transfer\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        (bool success, bytes memory data) = token.call(\r\n            abi.encodeWithSelector(IERC20Minimal.transfer.selector, to, value)\r\n        );\r\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TF');\r\n    }\r\n}\r\n"},"contracts/libraries/UnsafeMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Math functions that do not check inputs or outputs\r\n/// @notice Contains methods that perform common math functions but do not do any overflow or underflow checks\r\nlibrary UnsafeMath {\r\n    /// @notice Returns ceil(x / y)\r\n    /// @dev division by 0 has unspecified behavior, and must be checked externally\r\n    /// @param x The dividend\r\n    /// @param y The divisor\r\n    /// @return z The quotient, ceil(x / y)\r\n    function divRoundingUp(uint256 x, uint256 y) internal pure returns (uint256 z) {\r\n        assembly {\r\n            z := add(div(x, y), gt(mod(x, y), 0))\r\n        }\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"istanbul","optimizer":{"enabled":true,"runs":10},"metadata":{"bytecodeHash":"none"},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol":{"ast":{"absolutePath":"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol","exportedSymbols":{"IBubblySwapLmPool":[14]},"id":15,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":14,"linearizedBaseContracts":[14],"name":"IBubblySwapLmPool","nodeType":"ContractDefinition","nodes":[{"functionSelector":"214a6fe2","id":6,"implemented":false,"kind":"function","modifiers":[],"name":"accumulateReward","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3,"mutability":"mutable","name":"currTimestamp","nodeType":"VariableDeclaration","scope":6,"src":"133:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2,"name":"uint32","nodeType":"ElementaryTypeName","src":"133:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"132:22:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"163:0:0"},"scope":14,"src":"107:57:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a4984633","id":13,"implemented":false,"kind":"function","modifiers":[],"name":"crossLmTick","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":13,"src":"191:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7,"name":"int24","nodeType":"ElementaryTypeName","src":"191:5:0","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":13,"src":"203:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9,"name":"bool","nodeType":"ElementaryTypeName","src":"203:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"190:29:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"228:0:0"},"scope":14,"src":"170:59:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":15,"src":"74:158:0"}],"src":"46:188:0"},"id":0},"contracts/BubblySwapPool.sol":{"ast":{"absolutePath":"contracts/BubblySwapPool.sol","exportedSymbols":{"BitMath":[3679],"BubblySwapPool":[2630],"FixedPoint128":[3686],"FixedPoint96":[3696],"FullMath":[3869],"IBubblySwapFactory":[2801],"IBubblySwapFlashCallback":[2942],"IBubblySwapLmPool":[14],"IBubblySwapMintCallback":[2956],"IBubblySwapPool":[2823],"IBubblySwapPoolActions":[3066],"IBubblySwapPoolDeployer":[2856],"IBubblySwapPoolDerivedState":[3097],"IBubblySwapPoolEvents":[3220],"IBubblySwapPoolImmutables":[3260],"IBubblySwapPoolOwnerActions":[3292],"IBubblySwapPoolState":[3400],"IBubblySwapSwapCallback":[2970],"IERC20Minimal":[2928],"LiquidityMath":[3921],"LowGasSafeMath":[4051],"Oracle":[4786],"Position":[4959],"SafeCast":[5029],"SqrtPriceMath":[5545],"SwapMath":[5806],"Tick":[6258],"TickBitmap":[6514],"TickMath":[7049],"TransferHelper":[7100],"UnsafeMath":[7116]},"id":2631,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":16,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"46:23:1"},{"absolutePath":"contracts/interfaces/IBubblySwapPool.sol","file":"./interfaces/IBubblySwapPool.sol","id":17,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2824,"src":"73:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LowGasSafeMath.sol","file":"./libraries/LowGasSafeMath.sol","id":18,"nodeType":"ImportDirective","scope":2631,"sourceUnit":4052,"src":"119:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SafeCast.sol","file":"./libraries/SafeCast.sol","id":19,"nodeType":"ImportDirective","scope":2631,"sourceUnit":5030,"src":"161:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/Tick.sol","file":"./libraries/Tick.sol","id":20,"nodeType":"ImportDirective","scope":2631,"sourceUnit":6259,"src":"197:30:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TickBitmap.sol","file":"./libraries/TickBitmap.sol","id":21,"nodeType":"ImportDirective","scope":2631,"sourceUnit":6515,"src":"229:36:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/Position.sol","file":"./libraries/Position.sol","id":22,"nodeType":"ImportDirective","scope":2631,"sourceUnit":4960,"src":"267:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/Oracle.sol","file":"./libraries/Oracle.sol","id":23,"nodeType":"ImportDirective","scope":2631,"sourceUnit":4787,"src":"303:32:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/FullMath.sol","file":"./libraries/FullMath.sol","id":24,"nodeType":"ImportDirective","scope":2631,"sourceUnit":3870,"src":"339:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/FixedPoint128.sol","file":"./libraries/FixedPoint128.sol","id":25,"nodeType":"ImportDirective","scope":2631,"sourceUnit":3687,"src":"375:39:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TransferHelper.sol","file":"./libraries/TransferHelper.sol","id":26,"nodeType":"ImportDirective","scope":2631,"sourceUnit":7101,"src":"416:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TickMath.sol","file":"./libraries/TickMath.sol","id":27,"nodeType":"ImportDirective","scope":2631,"sourceUnit":7050,"src":"458:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LiquidityMath.sol","file":"./libraries/LiquidityMath.sol","id":28,"nodeType":"ImportDirective","scope":2631,"sourceUnit":3922,"src":"494:39:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SqrtPriceMath.sol","file":"./libraries/SqrtPriceMath.sol","id":29,"nodeType":"ImportDirective","scope":2631,"sourceUnit":5546,"src":"535:39:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SwapMath.sol","file":"./libraries/SwapMath.sol","id":30,"nodeType":"ImportDirective","scope":2631,"sourceUnit":5807,"src":"576:34:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBubblySwapPoolDeployer.sol","file":"./interfaces/IBubblySwapPoolDeployer.sol","id":31,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2857,"src":"614:50:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBubblySwapFactory.sol","file":"./interfaces/IBubblySwapFactory.sol","id":32,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2802,"src":"666:45:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IERC20Minimal.sol","file":"./interfaces/IERC20Minimal.sol","id":33,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2929,"src":"713:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/callback/IBubblySwapMintCallback.sol","file":"./interfaces/callback/IBubblySwapMintCallback.sol","id":34,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2957,"src":"755:59:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/callback/IBubblySwapSwapCallback.sol","file":"./interfaces/callback/IBubblySwapSwapCallback.sol","id":35,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2971,"src":"816:59:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/callback/IBubblySwapFlashCallback.sol","file":"./interfaces/callback/IBubblySwapFlashCallback.sol","id":36,"nodeType":"ImportDirective","scope":2631,"sourceUnit":2943,"src":"877:60:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol","file":"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol","id":37,"nodeType":"ImportDirective","scope":2631,"sourceUnit":15,"src":"941:76:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":38,"name":"IBubblySwapPool","nodeType":"UserDefinedTypeName","referencedDeclaration":2823,"src":"1048:15:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPool_$2823","typeString":"contract IBubblySwapPool"}},"id":39,"nodeType":"InheritanceSpecifier","src":"1048:15:1"}],"contractDependencies":[2823,3066,3097,3220,3260,3292,3400],"contractKind":"contract","fullyImplemented":true,"id":2630,"linearizedBaseContracts":[2630,2823,3220,3292,3066,3097,3400,3260],"name":"BubblySwapPool","nodeType":"ContractDefinition","nodes":[{"id":42,"libraryName":{"id":40,"name":"LowGasSafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":4051,"src":"1077:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_LowGasSafeMath_$4051","typeString":"library LowGasSafeMath"}},"nodeType":"UsingForDirective","src":"1071:33:1","typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":45,"libraryName":{"id":43,"name":"LowGasSafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":4051,"src":"1116:14:1","typeDescriptions":{"typeIdentifier":"t_contract$_LowGasSafeMath_$4051","typeString":"library LowGasSafeMath"}},"nodeType":"UsingForDirective","src":"1110:32:1","typeName":{"id":44,"name":"int256","nodeType":"ElementaryTypeName","src":"1135:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"id":48,"libraryName":{"id":46,"name":"SafeCast","nodeType":"UserDefinedTypeName","referencedDeclaration":5029,"src":"1154:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeCast_$5029","typeString":"library SafeCast"}},"nodeType":"UsingForDirective","src":"1148:27:1","typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":51,"libraryName":{"id":49,"name":"SafeCast","nodeType":"UserDefinedTypeName","referencedDeclaration":5029,"src":"1187:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_SafeCast_$5029","typeString":"library SafeCast"}},"nodeType":"UsingForDirective","src":"1181:26:1","typeName":{"id":50,"name":"int256","nodeType":"ElementaryTypeName","src":"1200:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"id":56,"libraryName":{"id":52,"name":"Tick","nodeType":"UserDefinedTypeName","referencedDeclaration":6258,"src":"1219:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Tick_$6258","typeString":"library Tick"}},"nodeType":"UsingForDirective","src":"1213:43:1","typeName":{"id":55,"keyType":{"id":53,"name":"int24","nodeType":"ElementaryTypeName","src":"1236:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Mapping","src":"1228:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"valueType":{"id":54,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"1245:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}}}},{"id":61,"libraryName":{"id":57,"name":"TickBitmap","nodeType":"UserDefinedTypeName","referencedDeclaration":6514,"src":"1268:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_TickBitmap_$6514","typeString":"library TickBitmap"}},"nodeType":"UsingForDirective","src":"1262:47:1","typeName":{"id":60,"keyType":{"id":58,"name":"int16","nodeType":"ElementaryTypeName","src":"1291:5:1","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Mapping","src":"1283:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"valueType":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},{"id":66,"libraryName":{"id":62,"name":"Position","nodeType":"UserDefinedTypeName","referencedDeclaration":4959,"src":"1321:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_Position_$4959","typeString":"library Position"}},"nodeType":"UsingForDirective","src":"1315:53:1","typeName":{"id":65,"keyType":{"id":63,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1342:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1334:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info)"},"valueType":{"id":64,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"1353:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}}}},{"id":69,"libraryName":{"id":67,"name":"Position","nodeType":"UserDefinedTypeName","referencedDeclaration":4959,"src":"1380:8:1","typeDescriptions":{"typeIdentifier":"t_contract$_Position_$4959","typeString":"library Position"}},"nodeType":"UsingForDirective","src":"1374:33:1","typeName":{"id":68,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"1393:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}}},{"id":74,"libraryName":{"id":70,"name":"Oracle","nodeType":"UserDefinedTypeName","referencedDeclaration":4786,"src":"1419:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_Oracle_$4786","typeString":"library Oracle"}},"nodeType":"UsingForDirective","src":"1413:43:1","typeName":{"baseType":{"id":71,"name":"Oracle.Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"1430:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":73,"length":{"hexValue":"3635353335","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:5:1","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"1430:25:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}}},{"baseFunctions":[3229],"constant":false,"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"1464:41:1","text":"@inheritdoc IBubblySwapPoolImmutables"},"functionSelector":"c45a0155","id":78,"mutability":"immutable","name":"factory","nodeType":"VariableDeclaration","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"1536:8:1"},"scope":2630,"src":"1511:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3235],"constant":false,"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"1559:41:1","text":"@inheritdoc IBubblySwapPoolImmutables"},"functionSelector":"0dfe1681","id":82,"mutability":"immutable","name":"token0","nodeType":"VariableDeclaration","overrides":{"id":81,"nodeType":"OverrideSpecifier","overrides":[],"src":"1631:8:1"},"scope":2630,"src":"1606:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3241],"constant":false,"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"1653:41:1","text":"@inheritdoc IBubblySwapPoolImmutables"},"functionSelector":"d21220a7","id":86,"mutability":"immutable","name":"token1","nodeType":"VariableDeclaration","overrides":{"id":85,"nodeType":"OverrideSpecifier","overrides":[],"src":"1725:8:1"},"scope":2630,"src":"1700:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"baseFunctions":[3247],"constant":false,"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"1747:41:1","text":"@inheritdoc IBubblySwapPoolImmutables"},"functionSelector":"ddca3f43","id":90,"mutability":"immutable","name":"fee","nodeType":"VariableDeclaration","overrides":{"id":89,"nodeType":"OverrideSpecifier","overrides":[],"src":"1818:8:1"},"scope":2630,"src":"1794:36:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":88,"name":"uint24","nodeType":"ElementaryTypeName","src":"1794:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"public"},{"baseFunctions":[3253],"constant":false,"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"1839:41:1","text":"@inheritdoc IBubblySwapPoolImmutables"},"functionSelector":"d0c93a7c","id":94,"mutability":"immutable","name":"tickSpacing","nodeType":"VariableDeclaration","overrides":{"id":93,"nodeType":"OverrideSpecifier","overrides":[],"src":"1909:8:1"},"scope":2630,"src":"1886:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":92,"name":"int24","nodeType":"ElementaryTypeName","src":"1886:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"public"},{"baseFunctions":[3259],"constant":false,"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"1938:41:1","text":"@inheritdoc IBubblySwapPoolImmutables"},"functionSelector":"70cf754a","id":98,"mutability":"immutable","name":"maxLiquidityPerTick","nodeType":"VariableDeclaration","overrides":{"id":97,"nodeType":"OverrideSpecifier","overrides":[],"src":"2010:8:1"},"scope":2630,"src":"1985:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":96,"name":"uint128","nodeType":"ElementaryTypeName","src":"1985:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"public"},{"constant":true,"id":101,"mutability":"constant","name":"PROTOCOL_FEE_SP","nodeType":"VariableDeclaration","scope":2630,"src":"2047:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":99,"name":"uint32","nodeType":"ElementaryTypeName","src":"2047:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"3635353336","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2091:5:1","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"65536"},"visibility":"internal"},{"constant":true,"id":104,"mutability":"constant","name":"PROTOCOL_FEE_DENOMINATOR","nodeType":"VariableDeclaration","scope":2630,"src":"2105:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2158:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"internal"},{"canonicalName":"BubblySwapPool.Slot0","id":119,"members":[{"constant":false,"id":106,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":119,"src":"2226:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":105,"name":"uint160","nodeType":"ElementaryTypeName","src":"2226:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":119,"src":"2286:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":107,"name":"int24","nodeType":"ElementaryTypeName","src":"2286:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"observationIndex","nodeType":"VariableDeclaration","scope":119,"src":"2377:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":109,"name":"uint16","nodeType":"ElementaryTypeName","src":"2377:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"observationCardinality","nodeType":"VariableDeclaration","scope":119,"src":"2488:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":111,"name":"uint16","nodeType":"ElementaryTypeName","src":"2488:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"observationCardinalityNext","nodeType":"VariableDeclaration","scope":119,"src":"2622:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":113,"name":"uint16","nodeType":"ElementaryTypeName","src":"2622:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"feeProtocol","nodeType":"VariableDeclaration","scope":119,"src":"2812:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":115,"name":"uint32","nodeType":"ElementaryTypeName","src":"2812:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"unlocked","nodeType":"VariableDeclaration","scope":119,"src":"2880:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":117,"name":"bool","nodeType":"ElementaryTypeName","src":"2880:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Slot0","nodeType":"StructDefinition","scope":2630,"src":"2172:729:1","visibility":"public"},{"baseFunctions":[3313],"constant":false,"documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"2907:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"3850c7bd","id":123,"mutability":"mutable","name":"slot0","nodeType":"VariableDeclaration","overrides":{"id":122,"nodeType":"OverrideSpecifier","overrides":[],"src":"2962:8:1"},"scope":2630,"src":"2949:27:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0"},"typeName":{"id":121,"name":"Slot0","nodeType":"UserDefinedTypeName","referencedDeclaration":119,"src":"2949:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage_ptr","typeString":"struct BubblySwapPool.Slot0"}},"visibility":"public"},{"baseFunctions":[3319],"constant":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"2985:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"f3058399","id":127,"mutability":"mutable","name":"feeGrowthGlobal0X128","nodeType":"VariableDeclaration","overrides":{"id":126,"nodeType":"OverrideSpecifier","overrides":[],"src":"3042:8:1"},"scope":2630,"src":"3027:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3027:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[3325],"constant":false,"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"3078:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"46141319","id":131,"mutability":"mutable","name":"feeGrowthGlobal1X128","nodeType":"VariableDeclaration","overrides":{"id":130,"nodeType":"OverrideSpecifier","overrides":[],"src":"3135:8:1"},"scope":2630,"src":"3120:44:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3120:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"BubblySwapPool.ProtocolFees","id":136,"members":[{"constant":false,"id":133,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":136,"src":"3261:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":132,"name":"uint128","nodeType":"ElementaryTypeName","src":"3261:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":135,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":136,"src":"3286:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":134,"name":"uint128","nodeType":"ElementaryTypeName","src":"3286:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"ProtocolFees","nodeType":"StructDefinition","scope":2630,"src":"3230:78:1","visibility":"public"},{"baseFunctions":[3333],"constant":false,"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3314:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"1ad8b03b","id":140,"mutability":"mutable","name":"protocolFees","nodeType":"VariableDeclaration","overrides":{"id":139,"nodeType":"OverrideSpecifier","overrides":[],"src":"3376:8:1"},"scope":2630,"src":"3356:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees"},"typeName":{"id":138,"name":"ProtocolFees","nodeType":"UserDefinedTypeName","referencedDeclaration":136,"src":"3356:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage_ptr","typeString":"struct BubblySwapPool.ProtocolFees"}},"visibility":"public"},{"baseFunctions":[3339],"constant":false,"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"3406:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"1a686502","id":144,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","overrides":{"id":143,"nodeType":"OverrideSpecifier","overrides":[],"src":"3463:8:1"},"scope":2630,"src":"3448:33:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":142,"name":"uint128","nodeType":"ElementaryTypeName","src":"3448:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"public"},{"baseFunctions":[3361],"constant":false,"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"3490:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"f30dba93","id":150,"mutability":"mutable","name":"ticks","nodeType":"VariableDeclaration","overrides":{"id":149,"nodeType":"OverrideSpecifier","overrides":[],"src":"3567:8:1"},"scope":2630,"src":"3532:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"typeName":{"id":148,"keyType":{"id":146,"name":"int24","nodeType":"ElementaryTypeName","src":"3540:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Mapping","src":"3532:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"valueType":{"id":147,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"3549:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}}},"visibility":"public"},{"baseFunctions":[3369],"constant":false,"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"3588:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"5339c296","id":156,"mutability":"mutable","name":"tickBitmap","nodeType":"VariableDeclaration","overrides":{"id":155,"nodeType":"OverrideSpecifier","overrides":[],"src":"3663:8:1"},"scope":2630,"src":"3630:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"typeName":{"id":154,"keyType":{"id":152,"name":"int16","nodeType":"ElementaryTypeName","src":"3638:5:1","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Mapping","src":"3630:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"valueType":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[3385],"constant":false,"documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"3689:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"514ea4bf","id":162,"mutability":"mutable","name":"positions","nodeType":"VariableDeclaration","overrides":{"id":161,"nodeType":"OverrideSpecifier","overrides":[],"src":"3772:8:1"},"scope":2630,"src":"3731:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info)"},"typeName":{"id":160,"keyType":{"id":158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3731:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info)"},"valueType":{"id":159,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"3750:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}}},"visibility":"public"},{"baseFunctions":[3399],"constant":false,"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"3797:36:1","text":"@inheritdoc IBubblySwapPoolState"},"functionSelector":"252c09d7","id":168,"mutability":"mutable","name":"observations","nodeType":"VariableDeclaration","overrides":{"id":167,"nodeType":"OverrideSpecifier","overrides":[],"src":"3872:8:1"},"scope":2630,"src":"3839:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":164,"name":"Oracle.Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"3839:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":166,"length":{"hexValue":"3635353335","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3858:5:1","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"3839:25:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"public"},{"constant":false,"functionSelector":"540d4918","id":170,"mutability":"mutable","name":"lmPool","nodeType":"VariableDeclaration","scope":2630,"src":"3927:31:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"},"typeName":{"id":169,"name":"IBubblySwapLmPool","nodeType":"UserDefinedTypeName","referencedDeclaration":14,"src":"3927:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}},"visibility":"public"},{"anonymous":false,"id":174,"name":"SetLmPoolEvent","nodeType":"EventDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":174,"src":"3988:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"3988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3987:14:1"},"src":"3967:35:1"},{"body":{"id":196,"nodeType":"Block","src":"4377:126:1","statements":[{"expression":{"arguments":[{"expression":{"id":178,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"4396:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":118,"src":"4396:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c4f4b","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4412:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e01ebc6b01bbf458b3d355b6e649efe64599751670c5d19175619893ecf97529","typeString":"literal_string \"LOK\""},"value":"LOK"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e01ebc6b01bbf458b3d355b6e649efe64599751670c5d19175619893ecf97529","typeString":"literal_string \"LOK\""}],"id":177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4388:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4388:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"4388:30:1"},{"expression":{"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":183,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"4429:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":118,"src":"4429:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4446:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4429:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"4429:22:1"},{"id":189,"nodeType":"PlaceholderStatement","src":"4462:1:1"},{"expression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":190,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"4474:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":118,"src":"4474:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4491:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4474:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":195,"nodeType":"ExpressionStatement","src":"4474:21:1"}]},"documentation":{"id":175,"nodeType":"StructuredDocumentation","src":"4010:345:1","text":"@dev Mutually exclusive reentrancy protection into the pool to/from a method. This method also prevents entrance\n to a function before the pool is initialized. The reentrancy guard is required throughout the contract because\n we use balance checks to determine the payment status of interactions such as mint, swap and flash."},"id":197,"name":"lock","nodeType":"ModifierDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[],"src":"4374:2:1"},"src":"4361:142:1","virtual":false,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"4643:114:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4662:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4662:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":203,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"4676:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4662:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":205,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4687:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4687:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":208,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"4720:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":207,"name":"IBubblySwapFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"4701:18:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapFactory_$2801_$","typeString":"type(contract IBubblySwapFactory)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapFactory_$2801","typeString":"contract IBubblySwapFactory"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2690,"src":"4701:33:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4701:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4687:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4662:74:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4654:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4654:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"ExpressionStatement","src":"4654:83:1"},{"id":216,"nodeType":"PlaceholderStatement","src":"4748:1:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"4511:89:1","text":"@dev Prevents calling a function from anyone except the factory or its\n owner"},"id":218,"name":"onlyFactoryOrFactoryOwner","nodeType":"ModifierDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"4640:2:1"},"src":"4606:151:1","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"4779:266:1","statements":[{"assignments":[222],"declarations":[{"constant":false,"id":222,"mutability":"mutable","name":"_tickSpacing","nodeType":"VariableDeclaration","scope":249,"src":"4790:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":221,"name":"int24","nodeType":"ElementaryTypeName","src":"4790:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":223,"nodeType":"VariableDeclarationStatement","src":"4790:18:1"},{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":224,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"4820:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":225,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"4829:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":226,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"4837:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":227,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"4845:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":228,"name":"_tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"4850:12:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":229,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4819:44:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$","typeString":"tuple(address,address,address,uint24,int24)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"expression":{"id":231,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4890:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4890:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":230,"name":"IBubblySwapPoolDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"4866:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapPoolDeployer_$2856_$","typeString":"type(contract IBubblySwapPoolDeployer)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4866:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolDeployer_$2856","typeString":"contract IBubblySwapPoolDeployer"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"parameters","nodeType":"MemberAccess","referencedDeclaration":2840,"src":"4866:46:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$","typeString":"function () view external returns (address,address,address,uint24,int24)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4866:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$","typeString":"tuple(address,address,address,uint24,int24)"}},"src":"4819:95:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":237,"nodeType":"ExpressionStatement","src":"4819:95:1"},{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":238,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4925:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":239,"name":"_tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"4939:12:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"4925:26:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":241,"nodeType":"ExpressionStatement","src":"4925:26:1"},{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":242,"name":"maxLiquidityPerTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"4964:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":245,"name":"_tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"5024:12:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":243,"name":"Tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"4986:4:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Tick_$6258_$","typeString":"type(library Tick)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tickSpacingToMaxLiquidityPerTick","nodeType":"MemberAccess","referencedDeclaration":5887,"src":"4986:37:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint128_$","typeString":"function (int24) pure returns (uint128)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4986:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4964:73:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":248,"nodeType":"ExpressionStatement","src":"4964:73:1"}]},"id":250,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"4776:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"4779:0:1"},"scope":2630,"src":"4765:280:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":281,"nodeType":"Block","src":"5171:170:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":259,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"5190:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":260,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"5202:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"5190:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"544c55","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5213:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_06776ee9cbc7ad0c1c06e0539ee449ea9f1cfe5ae7f3eda3c33aaa56fb586d6b","typeString":"literal_string \"TLU\""},"value":"TLU"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06776ee9cbc7ad0c1c06e0539ee449ea9f1cfe5ae7f3eda3c33aaa56fb586d6b","typeString":"literal_string \"TLU\""}],"id":258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5182:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5182:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"5182:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":266,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"5238:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":267,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"5251:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TICK","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"5251:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"5238:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"544c4d","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5270:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f9b85a186c017db58134196c73d3823c64ac15bc5fdab86c88cfc6bb064f2e5","typeString":"literal_string \"TLM\""},"value":"TLM"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f9b85a186c017db58134196c73d3823c64ac15bc5fdab86c88cfc6bb064f2e5","typeString":"literal_string \"TLM\""}],"id":265,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5230:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5230:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"ExpressionStatement","src":"5230:46:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":274,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"5295:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":275,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"5308:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TICK","nodeType":"MemberAccess","referencedDeclaration":6527,"src":"5308:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"5295:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54554d","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5327:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_95f36cdfdff7cff798fd6265395ae5b2ff6ffb0b1fac3580c0e5d24a0519f359","typeString":"literal_string \"TUM\""},"value":"TUM"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95f36cdfdff7cff798fd6265395ae5b2ff6ffb0b1fac3580c0e5d24a0519f359","typeString":"literal_string \"TUM\""}],"id":273,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5287:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5287:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"5287:46:1"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"5053:45:1","text":"@dev Common checks for valid tick inputs."},"id":282,"implemented":true,"kind":"function","modifiers":[],"name":"checkTicks","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":282,"src":"5124:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":252,"name":"int24","nodeType":"ElementaryTypeName","src":"5124:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":282,"src":"5141:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":254,"name":"int24","nodeType":"ElementaryTypeName","src":"5141:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"5123:34:1"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"5171:0:1"},"scope":2630,"src":"5104:237:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":294,"nodeType":"Block","src":"5531:74:1","statements":[{"expression":{"arguments":[{"expression":{"id":290,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5556:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5556:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5549:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":288,"name":"uint32","nodeType":"ElementaryTypeName","src":"5549:6:1","typeDescriptions":{}}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5549:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":287,"id":293,"nodeType":"Return","src":"5542:30:1"}]},"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"5349:110:1","text":"@dev Returns the block timestamp truncated to 32 bits, i.e. mod 2**32. This method is overridden in tests."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_blockTimestamp","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"5489:2:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":295,"src":"5523:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":285,"name":"uint32","nodeType":"ElementaryTypeName","src":"5523:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5522:8:1"},"scope":2630,"src":"5465:140:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":336,"nodeType":"Block","src":"5844:262:1","statements":[{"assignments":[302,304],"declarations":[{"constant":false,"id":302,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":336,"src":"5856:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":301,"name":"bool","nodeType":"ElementaryTypeName","src":"5856:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":336,"src":"5870:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":303,"name":"bytes","nodeType":"ElementaryTypeName","src":"5870:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":309,"name":"IERC20Minimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"5946:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Minimal_$2928_$","typeString":"type(contract IERC20Minimal)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"5946:23:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_uint256_$","typeString":"function IERC20Minimal.balanceOf(address) view returns (uint256)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"5946:32:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"id":314,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5988:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_BubblySwapPool_$2630","typeString":"contract BubblySwapPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BubblySwapPool_$2630","typeString":"contract BubblySwapPool"}],"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5980:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:1","typeDescriptions":{}}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5980:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":307,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5923:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"5923:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5923:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":305,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"5891:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"5891:17:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5891:114:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5855:150:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6024:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":321,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6035:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6035:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6050:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"6035:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6024:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6016:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6016:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"6016:37:1"},{"expression":{"arguments":[{"id":330,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6089:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"6089:7:1","typeDescriptions":{}}}],"id":333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6088:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":328,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6071:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6071:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6071:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":300,"id":335,"nodeType":"Return","src":"6064:34:1"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"5613:174:1","text":"@dev Get the pool's balance of token0\n @dev This function is gas optimized to avoid a redundant extcodesize check in addition to the returndatasize\n check"},"id":337,"implemented":true,"kind":"function","modifiers":[],"name":"balance0","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"5810:2:1"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":337,"src":"5835:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"5835:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5834:9:1"},"scope":2630,"src":"5793:313:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":378,"nodeType":"Block","src":"6345:262:1","statements":[{"assignments":[344,346],"declarations":[{"constant":false,"id":344,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":378,"src":"6357:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"6357:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":378,"src":"6371:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":345,"name":"bytes","nodeType":"ElementaryTypeName","src":"6371:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":360,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":351,"name":"IERC20Minimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"6447:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Minimal_$2928_$","typeString":"type(contract IERC20Minimal)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"6447:23:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_uint256_$","typeString":"function IERC20Minimal.balanceOf(address) view returns (uint256)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"6447:32:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"id":356,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6489:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_BubblySwapPool_$2630","typeString":"contract BubblySwapPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BubblySwapPool_$2630","typeString":"contract BubblySwapPool"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6481:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"6481:7:1","typeDescriptions":{}}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6481:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":349,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6424:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"6424:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6424:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":347,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"6392:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6392:17:1","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6392:114:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6356:150:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6525:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":363,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6536:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6536:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6551:2:1","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"6536:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6525:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6517:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6517:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6517:37:1"},{"expression":{"arguments":[{"id":372,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6583:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6590:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"6590:7:1","typeDescriptions":{}}}],"id":375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6589:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":370,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6572:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"6572:10:1","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6572:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":342,"id":377,"nodeType":"Return","src":"6565:34:1"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"6114:174:1","text":"@dev Get the pool's balance of token1\n @dev This function is gas optimized to avoid a redundant extcodesize check in addition to the returndatasize\n check"},"id":379,"implemented":true,"kind":"function","modifiers":[],"name":"balance1","nodeType":"FunctionDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"6311:2:1"},"returnParameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":379,"src":"6336:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"6336:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6335:9:1"},"scope":2630,"src":"6294:313:1","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[3096],"body":{"id":558,"nodeType":"Block","src":"6945:2579:1","statements":[{"expression":{"arguments":[{"id":395,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"6967:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":396,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6978:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"id":394,"name":"checkTicks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"6956:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$_t_int24_$returns$__$","typeString":"function (int24,int24) pure"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6956:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"6956:32:1"},{"assignments":[400],"declarations":[{"constant":false,"id":400,"mutability":"mutable","name":"tickCumulativeLower","nodeType":"VariableDeclaration","scope":558,"src":"7001:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":399,"name":"int56","nodeType":"ElementaryTypeName","src":"7001:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"id":401,"nodeType":"VariableDeclarationStatement","src":"7001:25:1"},{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"tickCumulativeUpper","nodeType":"VariableDeclaration","scope":558,"src":"7037:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":402,"name":"int56","nodeType":"ElementaryTypeName","src":"7037:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"id":404,"nodeType":"VariableDeclarationStatement","src":"7037:25:1"},{"assignments":[406],"declarations":[{"constant":false,"id":406,"mutability":"mutable","name":"secondsPerLiquidityOutsideLowerX128","nodeType":"VariableDeclaration","scope":558,"src":"7073:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":405,"name":"uint160","nodeType":"ElementaryTypeName","src":"7073:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":407,"nodeType":"VariableDeclarationStatement","src":"7073:43:1"},{"assignments":[409],"declarations":[{"constant":false,"id":409,"mutability":"mutable","name":"secondsPerLiquidityOutsideUpperX128","nodeType":"VariableDeclaration","scope":558,"src":"7127:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":408,"name":"uint160","nodeType":"ElementaryTypeName","src":"7127:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":410,"nodeType":"VariableDeclarationStatement","src":"7127:43:1"},{"assignments":[412],"declarations":[{"constant":false,"id":412,"mutability":"mutable","name":"secondsOutsideLower","nodeType":"VariableDeclaration","scope":558,"src":"7181:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":411,"name":"uint32","nodeType":"ElementaryTypeName","src":"7181:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":413,"nodeType":"VariableDeclarationStatement","src":"7181:26:1"},{"assignments":[415],"declarations":[{"constant":false,"id":415,"mutability":"mutable","name":"secondsOutsideUpper","nodeType":"VariableDeclaration","scope":558,"src":"7218:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":414,"name":"uint32","nodeType":"ElementaryTypeName","src":"7218:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":416,"nodeType":"VariableDeclarationStatement","src":"7218:26:1"},{"id":479,"nodeType":"Block","src":"7257:892:1","statements":[{"assignments":[420],"declarations":[{"constant":false,"id":420,"mutability":"mutable","name":"lower","nodeType":"VariableDeclaration","scope":479,"src":"7272:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"},"typeName":{"id":419,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"7272:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}},"visibility":"internal"}],"id":424,"initialValue":{"baseExpression":{"id":421,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"7298:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":423,"indexExpression":{"id":422,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"7304:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7298:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7272:42:1"},{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"upper","nodeType":"VariableDeclaration","scope":479,"src":"7329:23:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"},"typeName":{"id":427,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"7329:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}},"visibility":"internal"}],"id":432,"initialValue":{"baseExpression":{"id":429,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"7355:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":431,"indexExpression":{"id":430,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7361:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7355:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7329:42:1"},{"assignments":[434],"declarations":[{"constant":false,"id":434,"mutability":"mutable","name":"initializedLower","nodeType":"VariableDeclaration","scope":479,"src":"7386:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"7386:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":435,"nodeType":"VariableDeclarationStatement","src":"7386:21:1"},{"expression":{"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":436,"name":"tickCumulativeLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"7423:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"id":437,"name":"secondsPerLiquidityOutsideLowerX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"7444:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":438,"name":"secondsOutsideLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"7481:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":439,"name":"initializedLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7502:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":440,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"7422:97:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$","typeString":"tuple(int56,uint160,uint32,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"expression":{"id":441,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7541:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulativeOutside","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"7541:27:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":443,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7587:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityOutsideX128","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"7587:36:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":445,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7642:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsOutside","nodeType":"MemberAccess","referencedDeclaration":5833,"src":"7642:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":447,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"7681:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":5835,"src":"7681:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7522:191:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$","typeString":"tuple(int56,uint160,uint32,bool)"}},"src":"7422:291:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"7422:291:1"},{"expression":{"arguments":[{"id":453,"name":"initializedLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"7736:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7728:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7728:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"7728:25:1"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"initializedUpper","nodeType":"VariableDeclaration","scope":479,"src":"7770:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"7770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":458,"nodeType":"VariableDeclarationStatement","src":"7770:21:1"},{"expression":{"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":459,"name":"tickCumulativeUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"7807:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"id":460,"name":"secondsPerLiquidityOutsideUpperX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"7828:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":461,"name":"secondsOutsideUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"7865:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":462,"name":"initializedUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"7886:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":463,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"7806:97:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$","typeString":"tuple(int56,uint160,uint32,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"expression":{"id":464,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"7925:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulativeOutside","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"7925:27:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":466,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"7971:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityOutsideX128","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"7971:36:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":468,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"8026:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsOutside","nodeType":"MemberAccess","referencedDeclaration":5833,"src":"8026:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":470,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"8065:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":5835,"src":"8065:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7906:191:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$_t_bool_$","typeString":"tuple(int56,uint160,uint32,bool)"}},"src":"7806:291:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"7806:291:1"},{"expression":{"arguments":[{"id":476,"name":"initializedUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"8120:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8112:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8112:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"8112:25:1"}]},{"assignments":[481],"declarations":[{"constant":false,"id":481,"mutability":"mutable","name":"_slot0","nodeType":"VariableDeclaration","scope":558,"src":"8161:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0"},"typeName":{"id":480,"name":"Slot0","nodeType":"UserDefinedTypeName","referencedDeclaration":119,"src":"8161:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage_ptr","typeString":"struct BubblySwapPool.Slot0"}},"visibility":"internal"}],"id":483,"initialValue":{"id":482,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"8183:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8161:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":484,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8205:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"8205:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":486,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"8219:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8205:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":500,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8501:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":501,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"8501:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":502,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"8515:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8501:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":555,"nodeType":"Block","src":"9256:261:1","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":544,"name":"tickCumulativeUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"9297:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":545,"name":"tickCumulativeLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"9319:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"9297:41:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"secondsPerLiquidityOutsideUpperX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9357:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":548,"name":"secondsPerLiquidityOutsideLowerX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9395:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9357:73:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"secondsOutsideUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"9449:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":551,"name":"secondsOutsideLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"9471:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9449:41:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9278:227:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$","typeString":"tuple(int56,uint160,uint32)"}},"functionReturnParameters":393,"id":554,"nodeType":"Return","src":"9271:234:1"}]},"id":556,"nodeType":"IfStatement","src":"8497:1020:1","trueBody":{"id":543,"nodeType":"Block","src":"8526:724:1","statements":[{"assignments":[505],"declarations":[{"constant":false,"id":505,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":543,"src":"8541:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":504,"name":"uint32","nodeType":"ElementaryTypeName","src":"8541:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":508,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":506,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"8555:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8555:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"8541:31:1"},{"assignments":[510,512],"declarations":[{"constant":false,"id":510,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":543,"src":"8588:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":509,"name":"int56","nodeType":"ElementaryTypeName","src":"8588:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":543,"src":"8610:41:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":511,"name":"uint160","nodeType":"ElementaryTypeName","src":"8610:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[{"id":515,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"8700:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8723:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":517,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8743:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"8743:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":519,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8773:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"8773:23:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":521,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"8815:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":522,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"8843:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"8843:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":513,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"8655:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"observeSingle","nodeType":"MemberAccess","referencedDeclaration":4699,"src":"8655:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_int56_$_t_uint160_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (int56,uint160)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8655:232:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"nodeType":"VariableDeclarationStatement","src":"8587:300:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"tickCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"8928:14:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":527,"name":"tickCumulativeLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"8945:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"8928:36:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":529,"name":"tickCumulativeUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"8967:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"8928:58:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":531,"name":"secondsPerLiquidityCumulativeX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"9005:33:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":532,"name":"secondsPerLiquidityOutsideLowerX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"9062:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9005:92:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":534,"name":"secondsPerLiquidityOutsideUpperX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9121:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9005:151:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":536,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"9175:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":537,"name":"secondsOutsideLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"9182:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9175:26:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":539,"name":"secondsOutsideUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"9204:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9175:48:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8909:329:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$","typeString":"tuple(int56,uint160,uint32)"}},"functionReturnParameters":393,"id":542,"nodeType":"Return","src":"8902:336:1"}]}},"id":557,"nodeType":"IfStatement","src":"8201:1316:1","trueBody":{"id":499,"nodeType":"Block","src":"8230:261:1","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":488,"name":"tickCumulativeLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"8271:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":489,"name":"tickCumulativeUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"8293:19:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"8271:41:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":491,"name":"secondsPerLiquidityOutsideLowerX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"8331:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":492,"name":"secondsPerLiquidityOutsideUpperX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"8369:35:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"8331:73:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"secondsOutsideLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"8423:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":495,"name":"secondsOutsideUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"8445:19:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"8423:41:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8252:227:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$_t_uint32_$","typeString":"tuple(int56,uint160,uint32)"}},"functionReturnParameters":393,"id":498,"nodeType":"Return","src":"8245:234:1"}]}}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"6615:43:1","text":"@inheritdoc IBubblySwapPoolDerivedState"},"functionSelector":"a38807f2","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nodeType":"FunctionDefinition","overrides":{"id":386,"nodeType":"OverrideSpecifier","overrides":[],"src":"6774:8:1"},"parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":559,"src":"6699:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":381,"name":"int24","nodeType":"ElementaryTypeName","src":"6699:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":559,"src":"6716:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":383,"name":"int24","nodeType":"ElementaryTypeName","src":"6716:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"6698:34:1"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"tickCumulativeInside","nodeType":"VariableDeclaration","scope":559,"src":"6815:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":387,"name":"int56","nodeType":"ElementaryTypeName","src":"6815:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nodeType":"VariableDeclaration","scope":559,"src":"6856:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":389,"name":"uint160","nodeType":"ElementaryTypeName","src":"6856:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"secondsInside","nodeType":"VariableDeclaration","scope":559,"src":"6908:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":391,"name":"uint32","nodeType":"ElementaryTypeName","src":"6908:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6800:139:1"},"scope":2630,"src":"6664:2860:1","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3082],"body":{"id":587,"nodeType":"Block","src":"9787:285:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":575,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"9857:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9857:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":577,"name":"secondsAgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"9893:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[] calldata"}},{"expression":{"id":578,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"9923:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":579,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"9923:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":580,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"9952:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"9952:22:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":582,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"9993:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":583,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"10021:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"10021:28:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[] calldata"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":573,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"9818:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"observe","nodeType":"MemberAccess","referencedDeclaration":4785,"src":"9818:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32[] memory,int24,uint16,uint128,uint16) view returns (int56[] memory,uint160[] memory)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9818:246:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$","typeString":"tuple(int56[] memory,uint160[] memory)"}},"functionReturnParameters":572,"id":586,"nodeType":"Return","src":"9798:266:1"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"9532:43:1","text":"@inheritdoc IBubblySwapPoolDerivedState"},"functionSelector":"883bdbfd","id":588,"implemented":true,"kind":"function","modifiers":[],"name":"observe","nodeType":"FunctionDefinition","overrides":{"id":565,"nodeType":"OverrideSpecifier","overrides":[],"src":"9670:8:1"},"parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"secondsAgos","nodeType":"VariableDeclaration","scope":588,"src":"9598:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":561,"name":"uint32","nodeType":"ElementaryTypeName","src":"9598:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":562,"nodeType":"ArrayTypeName","src":"9598:8:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"9597:31:1"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"tickCumulatives","nodeType":"VariableDeclaration","scope":588,"src":"9697:30:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":566,"name":"int56","nodeType":"ElementaryTypeName","src":"9697:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":567,"nodeType":"ArrayTypeName","src":"9697:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nodeType":"VariableDeclaration","scope":588,"src":"9729:51:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":569,"name":"uint160","nodeType":"ElementaryTypeName","src":"9729:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":570,"nodeType":"ArrayTypeName","src":"9729:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"9696:85:1"},"scope":2630,"src":"9581:491:1","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[3065],"body":{"id":625,"nodeType":"Block","src":"10258:538:1","statements":[{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"observationCardinalityNextOld","nodeType":"VariableDeclaration","scope":625,"src":"10269:36:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":597,"name":"uint16","nodeType":"ElementaryTypeName","src":"10269:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":601,"initialValue":{"expression":{"id":599,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"10308:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinalityNext","nodeType":"MemberAccess","referencedDeclaration":114,"src":"10308:32:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"10269:71:1"},{"assignments":[603],"declarations":[{"constant":false,"id":603,"mutability":"mutable","name":"observationCardinalityNextNew","nodeType":"VariableDeclaration","scope":625,"src":"10368:36:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":602,"name":"uint16","nodeType":"ElementaryTypeName","src":"10368:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":609,"initialValue":{"arguments":[{"id":606,"name":"observationCardinalityNextOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10439:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":607,"name":"observationCardinalityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10483:26:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":604,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"10407:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"grow","nodeType":"MemberAccess","referencedDeclaration":4277,"src":"10407:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint16_$_t_uint16_$returns$_t_uint16_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint16) returns (uint16)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10407:113:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"10368:152:1"},{"expression":{"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":610,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"10531:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":612,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"observationCardinalityNext","nodeType":"MemberAccess","referencedDeclaration":114,"src":"10531:32:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":613,"name":"observationCardinalityNextNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10566:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"10531:64:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":615,"nodeType":"ExpressionStatement","src":"10531:64:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":616,"name":"observationCardinalityNextOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10610:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":617,"name":"observationCardinalityNextNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10643:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"10610:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"10606:182:1","trueBody":{"eventCall":{"arguments":[{"id":620,"name":"observationCardinalityNextOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10727:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":621,"name":"observationCardinalityNextNew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10758:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":619,"name":"IncreaseObservationCardinalityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"10692:34:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint16_$returns$__$","typeString":"function (uint16,uint16)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10692:96:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"EmitStatement","src":"10687:101:1"}}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10080:38:1","text":"@inheritdoc IBubblySwapPoolActions"},"functionSelector":"32148f67","id":626,"implemented":true,"kind":"function","modifiers":[{"id":595,"modifierName":{"id":594,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"10248:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"10248:4:1"}],"name":"increaseObservationCardinalityNext","nodeType":"FunctionDefinition","overrides":{"id":593,"nodeType":"OverrideSpecifier","overrides":[],"src":"10230:8:1"},"parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"observationCardinalityNext","nodeType":"VariableDeclaration","scope":626,"src":"10168:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":590,"name":"uint16","nodeType":"ElementaryTypeName","src":"10168:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"10167:35:1"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"10258:0:1"},"scope":2630,"src":"10124:672:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2979],"body":{"id":719,"nodeType":"Block","src":"10965:1157:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":634,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"10984:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"10984:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11006:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10984:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4149","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11009:4:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_78dda996de494b599fdb66c8365826df9b80d101d1cea931b5fa3753fca7ab85","typeString":"literal_string \"AI\""},"value":"AI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_78dda996de494b599fdb66c8365826df9b80d101d1cea931b5fa3753fca7ab85","typeString":"literal_string \"AI\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10976:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10976:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":640,"nodeType":"ExpressionStatement","src":"10976:38:1"},{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":719,"src":"11027:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":641,"name":"int24","nodeType":"ElementaryTypeName","src":"11027:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"11068:12:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":643,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"11040:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTickAtSqrtRatio","nodeType":"MemberAccess","referencedDeclaration":7048,"src":"11040:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$returns$_t_int24_$","typeString":"function (uint160) pure returns (int24)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11040:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"11027:54:1"},{"assignments":[649,651],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":719,"src":"11095:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":648,"name":"uint16","nodeType":"ElementaryTypeName","src":"11095:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"cardinalityNext","nodeType":"VariableDeclaration","scope":719,"src":"11115:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":650,"name":"uint16","nodeType":"ElementaryTypeName","src":"11115:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":657,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":654,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"11165:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11165:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":652,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"11141:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4148,"src":"11141:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$returns$_t_uint16_$_t_uint16_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32) returns (uint16,uint16)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11141:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$","typeString":"tuple(uint16,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"11094:89:1"},{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":658,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"11196:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":660,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"11239:12:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":661,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"11272:4:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":663,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"11349:11:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":664,"name":"cardinalityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"11403:15:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"323039373138343030","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11446:9:1","typeDescriptions":{"typeIdentifier":"t_rational_209718400_by_1","typeString":"int_const 209718400"},"value":"209718400"},{"hexValue":"74727565","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11545:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_rational_209718400_by_1","typeString":"int_const 209718400"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":659,"name":"Slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"11204:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Slot0_$119_storage_ptr_$","typeString":"type(struct BubblySwapPool.Slot0 storage pointer)"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["sqrtPriceX96","tick","observationIndex","observationCardinality","observationCardinalityNext","feeProtocol","unlocked"],"nodeType":"FunctionCall","src":"11204:357:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"src":"11196:365:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":669,"nodeType":"ExpressionStatement","src":"11196:365:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":670,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"11578:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313030","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11585:3:1","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"11578:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"11702:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"353030","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11709:3:1","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"src":"11702:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":690,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"11826:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32353030","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11833:4:1","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"},"src":"11826:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":700,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"11951:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11958:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"11951:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":710,"nodeType":"IfStatement","src":"11947:120:1","trueBody":{"id":709,"nodeType":"Block","src":"11965:102:1","statements":[{"expression":{"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":703,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"11980:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"11980:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323039373138343030","id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12000:9:1","typeDescriptions":{"typeIdentifier":"t_rational_209718400_by_1","typeString":"int_const 209718400"},"value":"209718400"},"src":"11980:29:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":708,"nodeType":"ExpressionStatement","src":"11980:29:1"}]}},"id":711,"nodeType":"IfStatement","src":"11822:245:1","trueBody":{"id":699,"nodeType":"Block","src":"11839:102:1","statements":[{"expression":{"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":693,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"11854:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"11854:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323039373138343030","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11874:9:1","typeDescriptions":{"typeIdentifier":"t_rational_209718400_by_1","typeString":"int_const 209718400"},"value":"209718400"},"src":"11854:29:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":698,"nodeType":"ExpressionStatement","src":"11854:29:1"}]}},"id":712,"nodeType":"IfStatement","src":"11698:369:1","trueBody":{"id":689,"nodeType":"Block","src":"11714:102:1","statements":[{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":683,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"11729:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"11729:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323232383235383030","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:9:1","typeDescriptions":{"typeIdentifier":"t_rational_222825800_by_1","typeString":"int_const 222825800"},"value":"222825800"},"src":"11729:29:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":688,"nodeType":"ExpressionStatement","src":"11729:29:1"}]}},"id":713,"nodeType":"IfStatement","src":"11574:493:1","trueBody":{"id":679,"nodeType":"Block","src":"11590:102:1","statements":[{"expression":{"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":673,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"11605:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"11605:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323136323732313030","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11625:9:1","typeDescriptions":{"typeIdentifier":"t_rational_216272100_by_1","typeString":"int_const 216272100"},"value":"216272100"},"src":"11605:29:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":678,"nodeType":"ExpressionStatement","src":"11605:29:1"}]}},{"eventCall":{"arguments":[{"id":715,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"12095:12:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":716,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"12109:4:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int24","typeString":"int24"}],"id":714,"name":"Initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"12084:10:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint160_$_t_int24_$returns$__$","typeString":"function (uint160,int24)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12084:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"EmitStatement","src":"12079:35:1"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"10804:95:1","text":"@inheritdoc IBubblySwapPoolActions\n @dev not locked because it initializes unlocked"},"functionSelector":"f637731d","id":720,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","overrides":{"id":631,"nodeType":"OverrideSpecifier","overrides":[],"src":"10956:8:1"},"parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":720,"src":"10925:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":628,"name":"uint160","nodeType":"ElementaryTypeName","src":"10925:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"10924:22:1"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"10965:0:1"},"scope":2630,"src":"10905:1217:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"BubblySwapPool.ModifyPositionParams","id":729,"members":[{"constant":false,"id":722,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":729,"src":"12216:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"12216:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":729,"src":"12293:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":723,"name":"int24","nodeType":"ElementaryTypeName","src":"12293:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":729,"src":"12319:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":725,"name":"int24","nodeType":"ElementaryTypeName","src":"12319:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"liquidityDelta","nodeType":"VariableDeclaration","scope":729,"src":"12381:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":727,"name":"int128","nodeType":"ElementaryTypeName","src":"12381:6:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"name":"ModifyPositionParams","nodeType":"StructDefinition","scope":2630,"src":"12130:280:1","visibility":"public"},{"body":{"id":889,"nodeType":"Block","src":"13103:2640:1","statements":[{"expression":{"arguments":[{"expression":{"id":742,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13125:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":724,"src":"13125:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":744,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13143:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":726,"src":"13143:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"id":741,"name":"checkTicks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"13114:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$_t_int24_$returns$__$","typeString":"function (int24,int24) pure"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13114:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"13114:46:1"},{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"_slot0","nodeType":"VariableDeclaration","scope":889,"src":"13173:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0"},"typeName":{"id":748,"name":"Slot0","nodeType":"UserDefinedTypeName","referencedDeclaration":119,"src":"13173:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage_ptr","typeString":"struct BubblySwapPool.Slot0"}},"visibility":"internal"}],"id":751,"initialValue":{"id":750,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"13195:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13173:27:1"},{"expression":{"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":752,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"13243:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":754,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13284:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":722,"src":"13284:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":756,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13311:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":724,"src":"13311:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":758,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13342:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":726,"src":"13342:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":760,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13373:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"13373:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"expression":{"id":762,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"13409:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"13409:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_int24","typeString":"int24"}],"id":753,"name":"_updatePosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"13254:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_int128_$_t_int24_$returns$_t_struct$_Info_$4803_storage_ptr_$","typeString":"function (address,int24,int24,int128,int24) returns (struct Position.Info storage pointer)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13254:177:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"src":"13243:188:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":766,"nodeType":"ExpressionStatement","src":"13243:188:1"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":767,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13448:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"13448:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13473:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13448:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":888,"nodeType":"IfStatement","src":"13444:2292:1","trueBody":{"id":887,"nodeType":"Block","src":"13476:2260:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":771,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"13495:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"13495:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":773,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13509:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":724,"src":"13509:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"13495:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":795,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"14041:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"14041:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":797,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"14055:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":726,"src":"14055:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"14041:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":884,"nodeType":"Block","src":"15221:504:1","statements":[{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":866,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"15471:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":871,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"15561:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":724,"src":"15561:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":869,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"15533:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"15533:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15533:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"expression":{"id":876,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"15629:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":726,"src":"15629:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":874,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"15601:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"15601:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15601:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":879,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"15669:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"15669:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":867,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"15481:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount1Delta","nodeType":"MemberAccess","referencedDeclaration":5544,"src":"15481:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_int128_$returns$_t_int256_$","typeString":"function (uint160,uint160,int128) pure returns (int256)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15481:228:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"15471:238:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":883,"nodeType":"ExpressionStatement","src":"15471:238:1"}]},"id":885,"nodeType":"IfStatement","src":"14037:1688:1","trueBody":{"id":865,"nodeType":"Block","src":"14073:1142:1","statements":[{"assignments":[801],"declarations":[{"constant":false,"id":801,"mutability":"mutable","name":"liquidityBefore","nodeType":"VariableDeclaration","scope":865,"src":"14152:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":800,"name":"uint128","nodeType":"ElementaryTypeName","src":"14152:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":803,"initialValue":{"id":802,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"14178:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"14152:35:1"},{"expression":{"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":804,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"14281:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"14281:22:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":807,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"14305:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"14305:28:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":809,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14280:54:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$","typeString":"tuple(uint16,uint16)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":812,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"14378:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":813,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"14378:23:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"arguments":[],"expression":{"argumentTypes":[],"id":814,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"14424:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14424:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":816,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"14464:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"14464:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":818,"name":"liquidityBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"14498:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":819,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"14536:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"14536:29:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":821,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"14588:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinalityNext","nodeType":"MemberAccess","referencedDeclaration":114,"src":"14588:33:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":810,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"14337:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"write","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"14337:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint16_$_t_uint32_$_t_int24_$_t_uint128_$_t_uint16_$_t_uint16_$returns$_t_uint16_$_t_uint16_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint32,int24,uint128,uint16,uint16) returns (uint16,uint16)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14337:303:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$","typeString":"tuple(uint16,uint16)"}},"src":"14280:360:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"14280:360:1"},{"expression":{"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":826,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"14661:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":829,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"14723:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":830,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"14723:19:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"expression":{"id":833,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"14793:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":726,"src":"14793:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":831,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"14765:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"14765:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14765:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":836,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"14833:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"14833:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":827,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"14671:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount0Delta","nodeType":"MemberAccess","referencedDeclaration":5502,"src":"14671:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_int128_$returns$_t_int256_$","typeString":"function (uint160,uint160,int128) pure returns (int256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14671:202:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14661:212:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":840,"nodeType":"ExpressionStatement","src":"14661:212:1"},{"expression":{"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":841,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"14892:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":846,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"14982:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":724,"src":"14982:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":844,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"14954:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"14954:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14954:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":849,"name":"_slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"15022:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"15022:19:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":851,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"15064:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"15064:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":842,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"14902:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount1Delta","nodeType":"MemberAccess","referencedDeclaration":5544,"src":"14902:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_int128_$returns$_t_int256_$","typeString":"function (uint160,uint160,int128) pure returns (int256)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14902:202:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14892:212:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":855,"nodeType":"ExpressionStatement","src":"14892:212:1"},{"expression":{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":856,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"15125:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":859,"name":"liquidityBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"15160:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":860,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"15177:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"15177:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":857,"name":"LiquidityMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"15137:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LiquidityMath_$3921_$","typeString":"type(library LiquidityMath)"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addDelta","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"15137:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$","typeString":"function (uint128,int128) pure returns (uint128)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15137:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15125:74:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":864,"nodeType":"ExpressionStatement","src":"15125:74:1"}]}},"id":886,"nodeType":"IfStatement","src":"13491:2234:1","trueBody":{"id":794,"nodeType":"Block","src":"13527:504:1","statements":[{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":776,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"13777:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":781,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13867:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":724,"src":"13867:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":779,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"13839:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"13839:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13839:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"expression":{"id":786,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13935:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":726,"src":"13935:16:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":784,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"13907:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"13907:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13907:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":789,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"13975:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}},"id":790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityDelta","nodeType":"MemberAccess","referencedDeclaration":728,"src":"13975:21:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":777,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"13787:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount0Delta","nodeType":"MemberAccess","referencedDeclaration":5502,"src":"13787:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_int128_$returns$_t_int256_$","typeString":"function (uint160,uint160,int128) pure returns (int256)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13787:228:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"13777:238:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":793,"nodeType":"ExpressionStatement","src":"13777:238:1"}]}}]}}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"12418:464:1","text":"@dev Effect some changes to a position\n @param params the position details and the change to the position's liquidity to effect\n @return position a storage pointer referencing the position with the given owner and tick range\n @return amount0 the amount of token0 owed to the pool, negative if the pool should pay the recipient\n @return amount1 the amount of token1 owed to the pool, negative if the pool should pay the recipient"},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"_modifyPosition","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":890,"src":"12913:34:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams"},"typeName":{"id":731,"name":"ModifyPositionParams","nodeType":"UserDefinedTypeName","referencedDeclaration":729,"src":"12913:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_storage_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams"}},"visibility":"internal"}],"src":"12912:36:1"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"position","nodeType":"VariableDeclaration","scope":890,"src":"12998:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"},"typeName":{"id":734,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"12998:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":890,"src":"13043:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":736,"name":"int256","nodeType":"ElementaryTypeName","src":"13043:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":890,"src":"13072:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":738,"name":"int256","nodeType":"ElementaryTypeName","src":"13072:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12983:114:1"},"scope":2630,"src":"12888:2855:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1052,"nodeType":"Block","src":"16284:2399:1","statements":[{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":906,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"16295:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":909,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"16320:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16327:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":911,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"16338:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":907,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"16306:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info storage ref)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":4833,"src":"16306:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$_$_t_address_$_t_int24_$_t_int24_$returns$_t_struct$_Info_$4803_storage_ptr_$bound_to$_t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$_$","typeString":"function (mapping(bytes32 => struct Position.Info storage ref),address,int24,int24) view returns (struct Position.Info storage pointer)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16306:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"src":"16295:53:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":914,"nodeType":"ExpressionStatement","src":"16295:53:1"},{"assignments":[916],"declarations":[{"constant":false,"id":916,"mutability":"mutable","name":"_feeGrowthGlobal0X128","nodeType":"VariableDeclaration","scope":1052,"src":"16361:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"16361:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":918,"initialValue":{"id":917,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"16393:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16361:52:1"},{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"_feeGrowthGlobal1X128","nodeType":"VariableDeclaration","scope":1052,"src":"16454:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"16454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":922,"initialValue":{"id":921,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"16486:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16454:52:1"},{"assignments":[924],"declarations":[{"constant":false,"id":924,"mutability":"mutable","name":"flippedLower","nodeType":"VariableDeclaration","scope":1052,"src":"16599:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":923,"name":"bool","nodeType":"ElementaryTypeName","src":"16599:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":925,"nodeType":"VariableDeclarationStatement","src":"16599:17:1"},{"assignments":[927],"declarations":[{"constant":false,"id":927,"mutability":"mutable","name":"flippedUpper","nodeType":"VariableDeclaration","scope":1052,"src":"16627:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":926,"name":"bool","nodeType":"ElementaryTypeName","src":"16627:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":928,"nodeType":"VariableDeclarationStatement","src":"16627:17:1"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"16659:14:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16677:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16659:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1007,"nodeType":"IfStatement","src":"16655:1400:1","trueBody":{"id":1006,"nodeType":"Block","src":"16680:1375:1","statements":[{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":1006,"src":"16695:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":932,"name":"uint32","nodeType":"ElementaryTypeName","src":"16695:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":936,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":934,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"16709:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16709:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"16695:31:1"},{"assignments":[938,940],"declarations":[{"constant":false,"id":938,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":1006,"src":"16742:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":937,"name":"int56","nodeType":"ElementaryTypeName","src":"16742:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":940,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":1006,"src":"16764:41:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":939,"name":"uint160","nodeType":"ElementaryTypeName","src":"16764:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":953,"initialValue":{"arguments":[{"id":943,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"16854:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16877:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":945,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16897:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"16897:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":947,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16926:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"16926:22:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":949,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"16967:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":950,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"16995:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"16995:28:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":941,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"16809:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"observeSingle","nodeType":"MemberAccess","referencedDeclaration":4699,"src":"16809:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_int56_$_t_uint160_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (int56,uint160)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16809:229:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"nodeType":"VariableDeclarationStatement","src":"16741:297:1"},{"expression":{"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":954,"name":"flippedLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"17055:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":957,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"17101:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":958,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"17129:4:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":959,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"17152:14:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":960,"name":"_feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"17185:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":961,"name":"_feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"17225:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":962,"name":"secondsPerLiquidityCumulativeX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"17265:33:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":963,"name":"tickCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"17317:14:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"id":964,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"17350:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"66616c7365","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17373:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":966,"name":"maxLiquidityPerTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"17397:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int56","typeString":"int56"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":955,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"17070:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"update","nodeType":"MemberAccess","referencedDeclaration":6160,"src":"17070:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$_t_int24_$_t_int24_$_t_int128_$_t_uint256_$_t_uint256_$_t_uint160_$_t_int56_$_t_uint32_$_t_bool_$_t_uint128_$returns$_t_bool_$bound_to$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$","typeString":"function (mapping(int24 => struct Tick.Info storage ref),int24,int24,int128,uint256,uint256,uint160,int56,uint32,bool,uint128) returns (bool)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17070:361:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17055:376:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":969,"nodeType":"ExpressionStatement","src":"17055:376:1"},{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":970,"name":"flippedUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"17446:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":973,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"17492:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":974,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"17520:4:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":975,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"17543:14:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":976,"name":"_feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"17576:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":977,"name":"_feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"17616:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":978,"name":"secondsPerLiquidityCumulativeX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":940,"src":"17656:33:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":979,"name":"tickCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"17708:14:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"id":980,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"17741:4:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"74727565","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17764:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":982,"name":"maxLiquidityPerTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"17787:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int56","typeString":"int56"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":971,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"17461:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"update","nodeType":"MemberAccess","referencedDeclaration":6160,"src":"17461:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$_t_int24_$_t_int24_$_t_int128_$_t_uint256_$_t_uint256_$_t_uint160_$_t_int56_$_t_uint32_$_t_bool_$_t_uint128_$returns$_t_bool_$bound_to$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$","typeString":"function (mapping(int24 => struct Tick.Info storage ref),int24,int24,int128,uint256,uint256,uint160,int56,uint32,bool,uint128) returns (bool)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17461:360:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17446:375:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":985,"nodeType":"ExpressionStatement","src":"17446:375:1"},{"condition":{"id":986,"name":"flippedLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"17842:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"IfStatement","src":"17838:96:1","trueBody":{"id":994,"nodeType":"Block","src":"17856:78:1","statements":[{"expression":{"arguments":[{"id":990,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"17895:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":991,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"17906:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":987,"name":"tickBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"17875:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"flipTick","nodeType":"MemberAccess","referencedDeclaration":6334,"src":"17875:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$bound_to$_t_mapping$_t_int16_$_t_uint256_$_$","typeString":"function (mapping(int16 => uint256),int24,int24)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17875:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"17875:43:1"}]}},{"condition":{"id":996,"name":"flippedUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"17952:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"17948:96:1","trueBody":{"id":1004,"nodeType":"Block","src":"17966:78:1","statements":[{"expression":{"arguments":[{"id":1000,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"18005:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1001,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"18016:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":997,"name":"tickBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"17985:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"flipTick","nodeType":"MemberAccess","referencedDeclaration":6334,"src":"17985:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$bound_to$_t_mapping$_t_int16_$_t_uint256_$_$","typeString":"function (mapping(int16 => uint256),int24,int24)"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17985:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1003,"nodeType":"ExpressionStatement","src":"17985:43:1"}]}}]}},{"assignments":[1009,1011],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"feeGrowthInside0X128","nodeType":"VariableDeclaration","scope":1052,"src":"18068:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"18068:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"feeGrowthInside1X128","nodeType":"VariableDeclaration","scope":1052,"src":"18098:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"18098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1020,"initialValue":{"arguments":[{"id":1014,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"18169:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1015,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"18193:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1016,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"18217:4:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1017,"name":"_feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"18236:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1018,"name":"_feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"18272:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1012,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"18130:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getFeeGrowthInside","nodeType":"MemberAccess","referencedDeclaration":6010,"src":"18130:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$_t_int24_$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$bound_to$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$","typeString":"function (mapping(int24 => struct Tick.Info storage ref),int24,int24,int24,uint256,uint256) view returns (uint256,uint256)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18130:174:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"18067:237:1"},{"expression":{"arguments":[{"id":1024,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"18333:14:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},{"id":1025,"name":"feeGrowthInside0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"18349:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1026,"name":"feeGrowthInside1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"18371:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1021,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"18317:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"update","nodeType":"MemberAccess","referencedDeclaration":4958,"src":"18317:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Info_$4803_storage_ptr_$_t_int128_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Info_$4803_storage_ptr_$","typeString":"function (struct Position.Info storage pointer,int128,uint256,uint256)"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18317:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"ExpressionStatement","src":"18317:75:1"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"18466:14:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18483:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18466:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1051,"nodeType":"IfStatement","src":"18462:214:1","trueBody":{"id":1050,"nodeType":"Block","src":"18486:190:1","statements":[{"condition":{"id":1032,"name":"flippedLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"18505:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1040,"nodeType":"IfStatement","src":"18501:75:1","trueBody":{"id":1039,"nodeType":"Block","src":"18519:57:1","statements":[{"expression":{"arguments":[{"id":1036,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"18550:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":1033,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"18538:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clear","nodeType":"MemberAccess","referencedDeclaration":6176,"src":"18538:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$_t_int24_$returns$__$bound_to$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$","typeString":"function (mapping(int24 => struct Tick.Info storage ref),int24)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18538:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"ExpressionStatement","src":"18538:22:1"}]}},{"condition":{"id":1041,"name":"flippedUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":927,"src":"18594:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"18590:75:1","trueBody":{"id":1048,"nodeType":"Block","src":"18608:57:1","statements":[{"expression":{"arguments":[{"id":1045,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"18639:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":1042,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"18627:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clear","nodeType":"MemberAccess","referencedDeclaration":6176,"src":"18627:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$_t_int24_$returns$__$bound_to$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$","typeString":"function (mapping(int24 => struct Tick.Info storage ref),int24)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18627:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"ExpressionStatement","src":"18627:22:1"}]}}]}}]},"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"15751:317:1","text":"@dev Gets and updates a position with the given liquidity delta\n @param owner the owner of the position\n @param tickLower the lower tick of the position's tick range\n @param tickUpper the upper tick of the position's tick range\n @param tick the current tick, passed to avoid sloads"},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_updatePosition","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1053,"src":"16109:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"16109:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1053,"src":"16133:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":894,"name":"int24","nodeType":"ElementaryTypeName","src":"16133:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1053,"src":"16159:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":896,"name":"int24","nodeType":"ElementaryTypeName","src":"16159:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"liquidityDelta","nodeType":"VariableDeclaration","scope":1053,"src":"16185:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":898,"name":"int128","nodeType":"ElementaryTypeName","src":"16185:6:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":1053,"src":"16217:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":900,"name":"int24","nodeType":"ElementaryTypeName","src":"16217:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"16098:136:1"},"returnParameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"position","nodeType":"VariableDeclaration","scope":1053,"src":"16252:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"},"typeName":{"id":903,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"16252:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"}],"src":"16251:32:1"},"scope":2630,"src":"16074:2609:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[2997],"body":{"id":1187,"nodeType":"Block","src":"19028:957:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"19047:6:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19056:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19047:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19039:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19039:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"ExpressionStatement","src":"19039:19:1"},{"assignments":[null,1081,1083],"declarations":[null,{"constant":false,"id":1081,"mutability":"mutable","name":"amount0Int","nodeType":"VariableDeclaration","scope":1187,"src":"19072:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1080,"name":"int256","nodeType":"ElementaryTypeName","src":"19072:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"amount1Int","nodeType":"VariableDeclaration","scope":1187,"src":"19091:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1082,"name":"int256","nodeType":"ElementaryTypeName","src":"19091:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1097,"initialValue":{"arguments":[{"arguments":[{"id":1086,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"19189:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1087,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"19228:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1088,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"19267:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1091,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"19318:6:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19311:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1089,"name":"int256","nodeType":"ElementaryTypeName","src":"19311:6:1","typeDescriptions":{}}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19311:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":5004,"src":"19311:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$","typeString":"function (int256) pure returns (int128)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19311:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int128","typeString":"int128"}],"id":1085,"name":"ModifyPositionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"19142:20:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ModifyPositionParams_$729_storage_ptr_$","typeString":"type(struct BubblySwapPool.ModifyPositionParams storage pointer)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","tickLower","tickUpper","liquidityDelta"],"nodeType":"FunctionCall","src":"19142:210:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}],"id":1084,"name":"_modifyPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"19112:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ModifyPositionParams_$729_memory_ptr_$returns$_t_struct$_Info_$4803_storage_ptr_$_t_int256_$_t_int256_$","typeString":"function (struct BubblySwapPool.ModifyPositionParams memory) returns (struct Position.Info storage pointer,int256,int256)"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19112:251:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Info_$4803_storage_ptr_$_t_int256_$_t_int256_$","typeString":"tuple(struct Position.Info storage pointer,int256,int256)"}},"nodeType":"VariableDeclarationStatement","src":"19069:294:1"},{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1098,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19376:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1101,"name":"amount0Int","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"19394:10:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19386:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"19386:7:1","typeDescriptions":{}}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19386:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19376:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1104,"nodeType":"ExpressionStatement","src":"19376:29:1"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1105,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1108,"name":"amount1Int","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"19434:10:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19426:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"19426:7:1","typeDescriptions":{}}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19426:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19416:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"19416:29:1"},{"assignments":[1113],"declarations":[{"constant":false,"id":1113,"mutability":"mutable","name":"balance0Before","nodeType":"VariableDeclaration","scope":1187,"src":"19458:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"19458:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1114,"nodeType":"VariableDeclarationStatement","src":"19458:22:1"},{"assignments":[1116],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"balance1Before","nodeType":"VariableDeclaration","scope":1187,"src":"19491:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"19491:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1117,"nodeType":"VariableDeclarationStatement","src":"19491:22:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19538:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19528:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1126,"nodeType":"IfStatement","src":"19524:44:1","trueBody":{"expression":{"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1121,"name":"balance0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"19541:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1122,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"19558:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19541:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1125,"nodeType":"ExpressionStatement","src":"19541:27:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1127,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19583:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19593:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19583:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"nodeType":"IfStatement","src":"19579:44:1","trueBody":{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1130,"name":"balance1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"19596:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1131,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"19613:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19613:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19596:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1134,"nodeType":"ExpressionStatement","src":"19596:27:1"}},{"expression":{"arguments":[{"id":1141,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19693:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1142,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19702:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1143,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"19711:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":1137,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19658:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"19658:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":1136,"name":"IBubblySwapMintCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"19634:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapMintCallback_$2956_$","typeString":"type(contract IBubblySwapMintCallback)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19634:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapMintCallback_$2956","typeString":"contract IBubblySwapMintCallback"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BubblySwapMintCallback","nodeType":"MemberAccess","referencedDeclaration":2955,"src":"19634:58:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,bytes memory) external"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19634:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"19634:82:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19731:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19731:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"nodeType":"IfStatement","src":"19727:73:1","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1152,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19771:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1150,"name":"balance0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"19752:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"19752:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19752:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1154,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"19783:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19783:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19752:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19795:4:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dd967dd89b196c3d39f30180cbfe6d91b2a16dc0c0a05c39a100e33eea78be7","typeString":"literal_string \"M0\""},"value":"M0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dd967dd89b196c3d39f30180cbfe6d91b2a16dc0c0a05c39a100e33eea78be7","typeString":"literal_string \"M0\""}],"id":1149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19744:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19744:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1159,"nodeType":"ExpressionStatement","src":"19744:56:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19815:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19825:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19815:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1175,"nodeType":"IfStatement","src":"19811:73:1","trueBody":{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1167,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1165,"name":"balance1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"19836:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"19836:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19836:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1169,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"19867:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19867:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19836:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d31","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19879:4:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b12041addd3285c2b6d2a98e6dc83b6f7dc08f5942fa2296e6ce355782d133de","typeString":"literal_string \"M1\""},"value":"M1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b12041addd3285c2b6d2a98e6dc83b6f7dc08f5942fa2296e6ce355782d133de","typeString":"literal_string \"M1\""}],"id":1164,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19828:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1174,"nodeType":"ExpressionStatement","src":"19828:56:1"}},{"eventCall":{"arguments":[{"expression":{"id":1177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19907:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"19907:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1179,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"19919:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"19930:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1181,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"19941:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1182,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"19952:6:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":1183,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"19960:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1184,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"19969:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"19902:4:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,int24,int24,uint128,uint256,uint256)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19902:75:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"EmitStatement","src":"19897:80:1"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"18691:109:1","text":"@inheritdoc IBubblySwapPoolActions\n @dev noDelegateCall is applied indirectly via _modifyPosition"},"functionSelector":"3c8a7d8d","id":1188,"implemented":true,"kind":"function","modifiers":[{"id":1068,"modifierName":{"id":1067,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"18980:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"18980:4:1"}],"name":"mint","nodeType":"FunctionDefinition","overrides":{"id":1066,"nodeType":"OverrideSpecifier","overrides":[],"src":"18971:8:1"},"parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1188,"src":"18830:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"18830:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1188,"src":"18858:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1057,"name":"int24","nodeType":"ElementaryTypeName","src":"18858:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1188,"src":"18884:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1059,"name":"int24","nodeType":"ElementaryTypeName","src":"18884:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1188,"src":"18910:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1061,"name":"uint128","nodeType":"ElementaryTypeName","src":"18910:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1188,"src":"18935:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1063,"name":"bytes","nodeType":"ElementaryTypeName","src":"18935:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18819:142:1"},"returnParameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1188,"src":"18994:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"18994:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1188,"src":"19011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"19011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18993:34:1"},"scope":2630,"src":"18806:1179:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3015],"body":{"id":1291,"nodeType":"Block","src":"20277:818:1","statements":[{"assignments":[1212],"declarations":[{"constant":false,"id":1212,"mutability":"mutable","name":"position","nodeType":"VariableDeclaration","scope":1291,"src":"20401:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"},"typeName":{"id":1211,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"20401:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"}],"id":1220,"initialValue":{"arguments":[{"expression":{"id":1215,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20448:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"20448:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1217,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"20460:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1218,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"20471:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":1213,"name":"positions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"20434:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info storage ref)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":4833,"src":"20434:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$_$_t_address_$_t_int24_$_t_int24_$returns$_t_struct$_Info_$4803_storage_ptr_$bound_to$_t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$_$","typeString":"function (mapping(bytes32 => struct Position.Info storage ref),address,int24,int24) view returns (struct Position.Info storage pointer)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20434:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"20401:80:1"},{"expression":{"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1221,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"20494:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"amount0Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20504:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1223,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20523:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensOwed0","nodeType":"MemberAccess","referencedDeclaration":4800,"src":"20523:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"20504:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1228,"name":"amount0Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"20569:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20504:81:1","trueExpression":{"expression":{"id":1226,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20546:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensOwed0","nodeType":"MemberAccess","referencedDeclaration":4800,"src":"20546:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"20494:91:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1231,"nodeType":"ExpressionStatement","src":"20494:91:1"},{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1232,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20596:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"amount1Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"20606:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1234,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20625:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensOwed1","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"20625:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"20606:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1239,"name":"amount1Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"20671:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20606:81:1","trueExpression":{"expression":{"id":1237,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20648:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensOwed1","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"20648:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"20596:91:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1242,"nodeType":"ExpressionStatement","src":"20596:91:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1243,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"20704:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20714:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20704:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1261,"nodeType":"IfStatement","src":"20700:145:1","trueBody":{"id":1260,"nodeType":"Block","src":"20717:128:1","statements":[{"expression":{"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1246,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20732:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensOwed0","nodeType":"MemberAccess","referencedDeclaration":4800,"src":"20732:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1249,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"20756:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"20732:31:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1251,"nodeType":"ExpressionStatement","src":"20732:31:1"},{"expression":{"arguments":[{"id":1255,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"20806:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1256,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"20814:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"20825:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1252,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"20778:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"20778:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20778:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"ExpressionStatement","src":"20778:55:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20859:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20869:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20859:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1280,"nodeType":"IfStatement","src":"20855:145:1","trueBody":{"id":1279,"nodeType":"Block","src":"20872:128:1","statements":[{"expression":{"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1265,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"20887:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensOwed1","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"20887:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1268,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20911:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"20887:31:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1270,"nodeType":"ExpressionStatement","src":"20887:31:1"},{"expression":{"arguments":[{"id":1274,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"20961:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"20969:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1276,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"20980:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1271,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"20933:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"20933:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20933:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1278,"nodeType":"ExpressionStatement","src":"20933:55:1"}]}},{"eventCall":{"arguments":[{"expression":{"id":1282,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21025:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"21025:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1284,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"21037:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1285,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"21048:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1286,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"21059:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1287,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"21070:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":1288,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"21079:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1281,"name":"Collect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"21017:7:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (address,address,int24,int24,uint128,uint128)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21017:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"EmitStatement","src":"21012:75:1"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"19993:38:1","text":"@inheritdoc IBubblySwapPoolActions"},"functionSelector":"4f1eb3d8","id":1292,"implemented":true,"kind":"function","modifiers":[{"id":1203,"modifierName":{"id":1202,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"20229:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20229:4:1"}],"name":"collect","nodeType":"FunctionDefinition","overrides":{"id":1201,"nodeType":"OverrideSpecifier","overrides":[],"src":"20220:8:1"},"parameters":{"id":1200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1292,"src":"20064:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"20064:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1292,"src":"20092:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1192,"name":"int24","nodeType":"ElementaryTypeName","src":"20092:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1292,"src":"20118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1194,"name":"int24","nodeType":"ElementaryTypeName","src":"20118:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":1292,"src":"20144:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1196,"name":"uint128","nodeType":"ElementaryTypeName","src":"20144:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":1292,"src":"20179:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1198,"name":"uint128","nodeType":"ElementaryTypeName","src":"20179:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"20053:157:1"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1292,"src":"20243:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1204,"name":"uint128","nodeType":"ElementaryTypeName","src":"20243:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1292,"src":"20260:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1206,"name":"uint128","nodeType":"ElementaryTypeName","src":"20260:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"20242:34:1"},"scope":2630,"src":"20037:1058:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3029],"body":{"id":1391,"nodeType":"Block","src":"21382:760:1","statements":[{"assignments":[1312,1314,1316],"declarations":[{"constant":false,"id":1312,"mutability":"mutable","name":"position","nodeType":"VariableDeclaration","scope":1391,"src":"21394:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"},"typeName":{"id":1311,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"21394:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"amount0Int","nodeType":"VariableDeclaration","scope":1391,"src":"21426:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1313,"name":"int256","nodeType":"ElementaryTypeName","src":"21426:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"amount1Int","nodeType":"VariableDeclaration","scope":1391,"src":"21445:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1315,"name":"int256","nodeType":"ElementaryTypeName","src":"21445:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1332,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1319,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21543:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"21543:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1321,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"21583:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1322,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"21622:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"21666:26:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1325,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"21674:6:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21667:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1323,"name":"int256","nodeType":"ElementaryTypeName","src":"21667:6:1","typeDescriptions":{}}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21667:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":5004,"src":"21667:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$","typeString":"function (int256) pure returns (int128)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21667:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int128","typeString":"int128"}],"id":1318,"name":"ModifyPositionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"21496:20:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ModifyPositionParams_$729_storage_ptr_$","typeString":"type(struct BubblySwapPool.ModifyPositionParams storage pointer)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","tickLower","tickUpper","liquidityDelta"],"nodeType":"FunctionCall","src":"21496:212:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ModifyPositionParams_$729_memory_ptr","typeString":"struct BubblySwapPool.ModifyPositionParams memory"}],"id":1317,"name":"_modifyPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"21466:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ModifyPositionParams_$729_memory_ptr_$returns$_t_struct$_Info_$4803_storage_ptr_$_t_int256_$_t_int256_$","typeString":"function (struct BubblySwapPool.ModifyPositionParams memory) returns (struct Position.Info storage pointer,int256,int256)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21466:253:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Info_$4803_storage_ptr_$_t_int256_$_t_int256_$","typeString":"tuple(struct Position.Info storage pointer,int256,int256)"}},"nodeType":"VariableDeclarationStatement","src":"21393:326:1"},{"expression":{"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1333,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"21732:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"21750:11:1","subExpression":{"id":1336,"name":"amount0Int","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"21751:10:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21742:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"21742:7:1","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21742:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21732:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1340,"nodeType":"ExpressionStatement","src":"21732:30:1"},{"expression":{"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1341,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"21773:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"21791:11:1","subExpression":{"id":1344,"name":"amount1Int","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"21792:10:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21783:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"21783:7:1","typeDescriptions":{}}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21783:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21773:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1348,"nodeType":"ExpressionStatement","src":"21773:30:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"21820:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21830:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21820:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"21835:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21845:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21835:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21820:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"21816:237:1","trueBody":{"id":1379,"nodeType":"Block","src":"21848:205:1","statements":[{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1356,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"21864:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensOwed0","nodeType":"MemberAccess","referencedDeclaration":4800,"src":"21864:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":1359,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"21886:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1360,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensOwed1","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"21886:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":1361,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"21863:44:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1362,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"21929:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensOwed0","nodeType":"MemberAccess","referencedDeclaration":4800,"src":"21929:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1366,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"21960:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21952:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1364,"name":"uint128","nodeType":"ElementaryTypeName","src":"21952:7:1","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21952:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"21929:39:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1369,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"21987:8:1","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":1370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokensOwed1","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"21987:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1373,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"22018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22010:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1371,"name":"uint128","nodeType":"ElementaryTypeName","src":"22010:7:1","typeDescriptions":{}}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22010:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"21987:39:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":1376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21910:131:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"src":"21863:178:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"ExpressionStatement","src":"21863:178:1"}]}},{"eventCall":{"arguments":[{"expression":{"id":1382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22075:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"22075:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":1384,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"22087:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1385,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"22098:9:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1386,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"22109:6:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":1387,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"22117:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1388,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"22126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1381,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"22070:4:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,int24,int24,uint128,uint256,uint256)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22070:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"EmitStatement","src":"22065:69:1"}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"21103:109:1","text":"@inheritdoc IBubblySwapPoolActions\n @dev noDelegateCall is applied indirectly via _modifyPosition"},"functionSelector":"a34123a7","id":1392,"implemented":true,"kind":"function","modifiers":[{"id":1303,"modifierName":{"id":1302,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"21334:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21334:4:1"}],"name":"burn","nodeType":"FunctionDefinition","overrides":{"id":1301,"nodeType":"OverrideSpecifier","overrides":[],"src":"21325:8:1"},"parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1392,"src":"21242:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1294,"name":"int24","nodeType":"ElementaryTypeName","src":"21242:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1392,"src":"21268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1296,"name":"int24","nodeType":"ElementaryTypeName","src":"21268:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1392,"src":"21294:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1298,"name":"uint128","nodeType":"ElementaryTypeName","src":"21294:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"21231:84:1"},"returnParameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1392,"src":"21348:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"21348:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1392,"src":"21365:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"21365:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21347:34:1"},"scope":2630,"src":"21218:924:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"BubblySwapPool.SwapCache","id":1405,"members":[{"constant":false,"id":1394,"mutability":"mutable","name":"feeProtocol","nodeType":"VariableDeclaration","scope":1405,"src":"22227:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1393,"name":"uint32","nodeType":"ElementaryTypeName","src":"22227:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"liquidityStart","nodeType":"VariableDeclaration","scope":1405,"src":"22307:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1395,"name":"uint128","nodeType":"ElementaryTypeName","src":"22307:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"blockTimestamp","nodeType":"VariableDeclaration","scope":1405,"src":"22387:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1397,"name":"uint32","nodeType":"ElementaryTypeName","src":"22387:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":1405,"src":"22520:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1399,"name":"int56","nodeType":"ElementaryTypeName","src":"22520:5:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":1405,"src":"22665:41:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1401,"name":"uint160","nodeType":"ElementaryTypeName","src":"22665:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1404,"mutability":"mutable","name":"computedLatestObservation","nodeType":"VariableDeclaration","scope":1405,"src":"22790:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1403,"name":"bool","nodeType":"ElementaryTypeName","src":"22790:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SwapCache","nodeType":"StructDefinition","scope":2630,"src":"22150:678:1","visibility":"public"},{"canonicalName":"BubblySwapPool.SwapState","id":1420,"members":[{"constant":false,"id":1407,"mutability":"mutable","name":"amountSpecifiedRemaining","nodeType":"VariableDeclaration","scope":1420,"src":"23041:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1406,"name":"int256","nodeType":"ElementaryTypeName","src":"23041:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"amountCalculated","nodeType":"VariableDeclaration","scope":1420,"src":"23155:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1408,"name":"int256","nodeType":"ElementaryTypeName","src":"23155:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":1420,"src":"23221:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1410,"name":"uint160","nodeType":"ElementaryTypeName","src":"23221:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":1420,"src":"23307:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1412,"name":"int24","nodeType":"ElementaryTypeName","src":"23307:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"feeGrowthGlobalX128","nodeType":"VariableDeclaration","scope":1420,"src":"23381:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"23381:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"protocolFee","nodeType":"VariableDeclaration","scope":1420,"src":"23474:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1416,"name":"uint128","nodeType":"ElementaryTypeName","src":"23474:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":1420,"src":"23547:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1418,"name":"uint128","nodeType":"ElementaryTypeName","src":"23547:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"SwapState","nodeType":"StructDefinition","scope":2630,"src":"22933:639:1","visibility":"public"},{"canonicalName":"BubblySwapPool.StepComputations","id":1435,"members":[{"constant":false,"id":1422,"mutability":"mutable","name":"sqrtPriceStartX96","nodeType":"VariableDeclaration","scope":1435,"src":"23666:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1421,"name":"uint160","nodeType":"ElementaryTypeName","src":"23666:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"tickNext","nodeType":"VariableDeclaration","scope":1435,"src":"23783:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1423,"name":"int24","nodeType":"ElementaryTypeName","src":"23783:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":1435,"src":"23859:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1425,"name":"bool","nodeType":"ElementaryTypeName","src":"23859:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"sqrtPriceNextX96","nodeType":"VariableDeclaration","scope":1435,"src":"23934:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1427,"name":"uint160","nodeType":"ElementaryTypeName","src":"23934:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":1435,"src":"24023:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"24023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":1435,"src":"24092:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1431,"name":"uint256","nodeType":"ElementaryTypeName","src":"24092:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"feeAmount","nodeType":"VariableDeclaration","scope":1435,"src":"24162:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"24162:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StepComputations","nodeType":"StructDefinition","scope":2630,"src":"23580:607:1","visibility":"public"},{"baseFunctions":[3047],"body":{"id":2182,"nodeType":"Block","src":"24472:9314:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1455,"name":"amountSpecified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"24491:15:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24510:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24491:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4153","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24513:4:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5","typeString":"literal_string \"AS\""},"value":"AS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_327b9f048a93c937a955c6a689ad68cff8daabdfc5fb8cf29fcae1bac2ddb4d5","typeString":"literal_string \"AS\""}],"id":1454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24483:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24483:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1460,"nodeType":"ExpressionStatement","src":"24483:35:1"},{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"slot0Start","nodeType":"VariableDeclaration","scope":2182,"src":"24531:23:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0"},"typeName":{"id":1461,"name":"Slot0","nodeType":"UserDefinedTypeName","referencedDeclaration":119,"src":"24531:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage_ptr","typeString":"struct BubblySwapPool.Slot0"}},"visibility":"internal"}],"id":1464,"initialValue":{"id":1463,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"24557:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24531:31:1"},{"expression":{"arguments":[{"expression":{"id":1466,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"24583:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":118,"src":"24583:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c4f4b","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24604:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e01ebc6b01bbf458b3d355b6e649efe64599751670c5d19175619893ecf97529","typeString":"literal_string \"LOK\""},"value":"LOK"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e01ebc6b01bbf458b3d355b6e649efe64599751670c5d19175619893ecf97529","typeString":"literal_string \"LOK\""}],"id":1465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24575:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24575:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"24575:35:1"},{"expression":{"arguments":[{"condition":{"id":1472,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"24643:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"24783:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1483,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"24803:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"24803:23:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"24783:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"24830:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1487,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"24850:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_SQRT_RATIO","nodeType":"MemberAccess","referencedDeclaration":6535,"src":"24850:23:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"24830:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24783:90:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24643:230:1","trueExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1473,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"24673:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1474,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"24693:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"24693:23:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"24673:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1477,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"24720:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1478,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"24740:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_SQRT_RATIO","nodeType":"MemberAccess","referencedDeclaration":6531,"src":"24740:23:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"24720:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24673:90:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53504c","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24888:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6cefa06f60ee34e0c8820e8870f7587ccd717d8768771226759d789a9582094","typeString":"literal_string \"SPL\""},"value":"SPL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6cefa06f60ee34e0c8820e8870f7587ccd717d8768771226759d789a9582094","typeString":"literal_string \"SPL\""}],"id":1471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24621:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24621:283:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"ExpressionStatement","src":"24621:283:1"},{"expression":{"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1495,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"24917:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":1497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":118,"src":"24917:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24934:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"24917:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1500,"nodeType":"ExpressionStatement","src":"24917:22:1"},{"assignments":[1502],"declarations":[{"constant":false,"id":1502,"mutability":"mutable","name":"cache","nodeType":"VariableDeclaration","scope":2182,"src":"24952:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache"},"typeName":{"id":1501,"name":"SwapCache","nodeType":"UserDefinedTypeName","referencedDeclaration":1405,"src":"24952:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_storage_ptr","typeString":"struct BubblySwapPool.SwapCache"}},"visibility":"internal"}],"id":1523,"initialValue":{"arguments":[{"id":1504,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"25018:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1505,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"25058:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25058:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"condition":{"id":1507,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"25103:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1513,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"25162:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"25162:22:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25188:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25162:28:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":1517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25161:30:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25103:88:1","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1508,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"25117:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"25117:22:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1510,"name":"PROTOCOL_FEE_SP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"25142:15:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"25117:40:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":1512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25116:42:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25241:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25273:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25316:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1503,"name":"SwapCache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"24977:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapCache_$1405_storage_ptr_$","typeString":"type(struct BubblySwapPool.SwapCache storage pointer)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["liquidityStart","blockTimestamp","feeProtocol","secondsPerLiquidityCumulativeX128","tickCumulative","computedLatestObservation"],"nodeType":"FunctionCall","src":"24977:356:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"nodeType":"VariableDeclarationStatement","src":"24952:381:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1526,"name":"lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"25358:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25350:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"25350:7:1","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25350:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25377:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25369:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"25369:7:1","typeDescriptions":{}}},"id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25369:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"25350:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1541,"nodeType":"IfStatement","src":"25346:105:1","trueBody":{"id":1540,"nodeType":"Block","src":"25381:70:1","statements":[{"expression":{"arguments":[{"expression":{"id":1536,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"25418:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1537,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"25418:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":1533,"name":"lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"25394:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"accumulateReward","nodeType":"MemberAccess","referencedDeclaration":6,"src":"25394:23:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$returns$__$","typeString":"function (uint32) external"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25394:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"25394:45:1"}]}},{"assignments":[1543],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"exactInput","nodeType":"VariableDeclaration","scope":2182,"src":"25463:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1542,"name":"bool","nodeType":"ElementaryTypeName","src":"25463:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1547,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"amountSpecified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"25481:15:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25499:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25481:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"25463:37:1"},{"assignments":[1549],"declarations":[{"constant":false,"id":1549,"mutability":"mutable","name":"state","nodeType":"VariableDeclaration","scope":2182,"src":"25513:22:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState"},"typeName":{"id":1548,"name":"SwapState","nodeType":"UserDefinedTypeName","referencedDeclaration":1420,"src":"25513:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_storage_ptr","typeString":"struct BubblySwapPool.SwapState"}},"visibility":"internal"}],"id":1565,"initialValue":{"arguments":[{"id":1551,"name":"amountSpecified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"25589:15:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25637:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1553,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"25667:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1554,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"25667:23:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":1555,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"25711:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"25711:15:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"condition":{"id":1557,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"25762:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1559,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"25798:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"25762:56:1","trueExpression":{"id":1558,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"25775:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25846:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1562,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"25873:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityStart","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"25873:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1550,"name":"SwapState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"25538:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SwapState_$1420_storage_ptr_$","typeString":"type(struct BubblySwapPool.SwapState storage pointer)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["amountSpecifiedRemaining","amountCalculated","sqrtPriceX96","tick","feeGrowthGlobalX128","protocolFee","liquidity"],"nodeType":"FunctionCall","src":"25538:367:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"nodeType":"VariableDeclarationStatement","src":"25513:392:1"},{"body":{"id":1920,"nodeType":"Block","src":"26122:4757:1","statements":[{"assignments":[1576],"declarations":[{"constant":false,"id":1576,"mutability":"mutable","name":"step","nodeType":"VariableDeclaration","scope":1920,"src":"26137:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations"},"typeName":{"id":1575,"name":"StepComputations","nodeType":"UserDefinedTypeName","referencedDeclaration":1435,"src":"26137:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_storage_ptr","typeString":"struct BubblySwapPool.StepComputations"}},"visibility":"internal"}],"id":1577,"nodeType":"VariableDeclarationStatement","src":"26137:28:1"},{"expression":{"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1578,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26182:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sqrtPriceStartX96","nodeType":"MemberAccess","referencedDeclaration":1422,"src":"26182:22:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1581,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"26207:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"26207:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"26182:43:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":1584,"nodeType":"ExpressionStatement","src":"26182:43:1"},{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1585,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26243:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"26243:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":1588,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26258:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"26258:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1590,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"26242:33:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int24_$_t_bool_$","typeString":"tuple(int24,bool)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1593,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"26340:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"26340:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1595,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"26369:11:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1596,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"26399:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1591,"name":"tickBitmap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":156,"src":"26278:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"nextInitializedTickWithinOneWord","nodeType":"MemberAccess","referencedDeclaration":6513,"src":"26278:43:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$_t_bool_$returns$_t_int24_$_t_bool_$bound_to$_t_mapping$_t_int16_$_t_uint256_$_$","typeString":"function (mapping(int16 => uint256),int24,int24,bool) view returns (int24,bool)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26278:146:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int24_$_t_bool_$","typeString":"tuple(int24,bool)"}},"src":"26242:182:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1599,"nodeType":"ExpressionStatement","src":"26242:182:1"},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1600,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26559:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"26559:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1602,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"26575:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TICK","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"26575:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"26559:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1613,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26672:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"26672:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1615,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"26688:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TICK","nodeType":"MemberAccess","referencedDeclaration":6527,"src":"26688:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"26672:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1626,"nodeType":"IfStatement","src":"26668:107:1","trueBody":{"id":1625,"nodeType":"Block","src":"26707:68:1","statements":[{"expression":{"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1618,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26726:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"26726:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1621,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"26742:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TICK","nodeType":"MemberAccess","referencedDeclaration":6527,"src":"26742:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"26726:33:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":1624,"nodeType":"ExpressionStatement","src":"26726:33:1"}]}},"id":1627,"nodeType":"IfStatement","src":"26555:220:1","trueBody":{"id":1612,"nodeType":"Block","src":"26594:68:1","statements":[{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1605,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26613:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"26613:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1608,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"26629:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TICK","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"26629:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"26613:33:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":1611,"nodeType":"ExpressionStatement","src":"26613:33:1"}]}},{"expression":{"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1628,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26839:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sqrtPriceNextX96","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"26839:21:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1633,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"26891:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"26891:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":1631,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"26863:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getSqrtRatioAtTick","nodeType":"MemberAccess","referencedDeclaration":6909,"src":"26863:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26863:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"26839:66:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":1637,"nodeType":"ExpressionStatement","src":"26839:66:1"},{"expression":{"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1638,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27043:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"27043:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":1641,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27063:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"27063:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1643,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27078:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"27078:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1645,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27094:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"27094:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1647,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"27042:67:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint160,uint256,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1650,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27155:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"27155:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"condition":{"components":[{"condition":{"id":1652,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"27193:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1657,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27250:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceNextX96","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"27250:21:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1659,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"27274:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"27250:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27193:98:1","trueExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1653,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27206:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceNextX96","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"27206:21:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1655,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"27230:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"27206:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27192:100:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1664,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27357:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceNextX96","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"27357:21:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"27192:186:1","trueExpression":{"id":1663,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"27316:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":1667,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27397:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"27397:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":1669,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27431:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountSpecifiedRemaining","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"27431:30:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1671,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"27480:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":1648,"name":"SwapMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"27112:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SwapMath_$5806_$","typeString":"type(library SwapMath)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"computeSwapStep","nodeType":"MemberAccess","referencedDeclaration":5805,"src":"27112:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_int256_$_t_uint24_$returns$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint160,uint160,uint128,int256,uint24) pure returns (uint160,uint256,uint256,uint256)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27112:386:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint160,uint256,uint256,uint256)"}},"src":"27042:456:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1674,"nodeType":"ExpressionStatement","src":"27042:456:1"},{"condition":{"id":1675,"name":"exactInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"27519:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1729,"nodeType":"Block","src":"27746:209:1","statements":[{"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1703,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27765:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountSpecifiedRemaining","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"27765:30:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1706,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27799:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"27799:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"27799:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27799:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27765:59:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1711,"nodeType":"ExpressionStatement","src":"27765:59:1"},{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1712,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27843:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountCalculated","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"27843:22:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1718,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27896:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"27896:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1720,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27912:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"27912:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27896:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27895:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"27895:41:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27895:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":1715,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27868:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountCalculated","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"27868:22:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"27868:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27868:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27843:96:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1728,"nodeType":"ExpressionStatement","src":"27843:96:1"}]},"id":1730,"nodeType":"IfStatement","src":"27515:440:1","trueBody":{"id":1702,"nodeType":"Block","src":"27531:209:1","statements":[{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1676,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27550:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountSpecifiedRemaining","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"27550:30:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1679,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27585:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"27585:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1681,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27601:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"27601:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27585:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27584:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"27584:41:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27584:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27550:77:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1688,"nodeType":"ExpressionStatement","src":"27550:77:1"},{"expression":{"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1689,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27646:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"amountCalculated","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"27646:22:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1695,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"27698:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountOut","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"27698:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"27698:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27698:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"expression":{"id":1692,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"27671:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountCalculated","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"27671:22:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4050,"src":"27671:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27671:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27646:78:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1701,"nodeType":"ExpressionStatement","src":"27646:78:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1731,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"28093:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"28093:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28093:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"IfStatement","src":"28089:240:1","trueBody":{"id":1762,"nodeType":"Block","src":"28116:213:1","statements":[{"assignments":[1736],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"delta","nodeType":"VariableDeclaration","scope":1762,"src":"28135:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"28135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"arguments":[{"expression":{"id":1740,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"28171:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"28171:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"expression":{"id":1737,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"28152:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"28152:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":3996,"src":"28152:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28152:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28151:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1744,"name":"PROTOCOL_FEE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"28193:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28151:66:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28135:82:1"},{"expression":{"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1747,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"28236:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"28236:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1750,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"28254:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28236:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1752,"nodeType":"ExpressionStatement","src":"28236:23:1"},{"expression":{"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1753,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"28278:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"28278:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":1758,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"28307:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28299:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":1756,"name":"uint128","nodeType":"ElementaryTypeName","src":"28299:7:1","typeDescriptions":{}}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28299:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"28278:35:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1761,"nodeType":"ExpressionStatement","src":"28278:35:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1764,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"28391:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"28391:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28409:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28391:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1782,"nodeType":"IfStatement","src":"28387:139:1","trueBody":{"expression":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1768,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"28429:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthGlobalX128","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"28429:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"expression":{"id":1773,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"28474:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeAmount","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"28474:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1775,"name":"FixedPoint128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"28490:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint128_$3686_$","typeString":"type(library FixedPoint128)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q128","nodeType":"MemberAccess","referencedDeclaration":3685,"src":"28490:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1777,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"28510:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"28510:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":1771,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"28458:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"28458:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28458:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28429:97:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1781,"nodeType":"ExpressionStatement","src":"28429:97:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1783,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"28603:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"28603:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1785,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"28625:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceNextX96","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"28625:21:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"28603:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1902,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30606:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"30606:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1904,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"30628:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceStartX96","nodeType":"MemberAccess","referencedDeclaration":1422,"src":"30628:22:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"30606:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1918,"nodeType":"IfStatement","src":"30602:266:1","trueBody":{"id":1917,"nodeType":"Block","src":"30652:216:1","statements":[{"expression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1907,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30792:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"30792:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1912,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30833:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"30833:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":1910,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"30805:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTickAtSqrtRatio","nodeType":"MemberAccess","referencedDeclaration":7048,"src":"30805:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$returns$_t_int24_$","typeString":"function (uint160) pure returns (int24)"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30805:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"30792:60:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":1916,"nodeType":"ExpressionStatement","src":"30792:60:1"}]}},"id":1919,"nodeType":"IfStatement","src":"28599:2269:1","trueBody":{"id":1901,"nodeType":"Block","src":"28648:1948:1","statements":[{"condition":{"expression":{"id":1788,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"28743:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":1426,"src":"28743:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1887,"nodeType":"IfStatement","src":"28739:1762:1","trueBody":{"id":1886,"nodeType":"Block","src":"28761:1740:1","statements":[{"condition":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"28960:32:1","subExpression":{"expression":{"id":1790,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"28961:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"computedLatestObservation","nodeType":"MemberAccess","referencedDeclaration":1404,"src":"28961:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"28956:575:1","trueBody":{"id":1821,"nodeType":"Block","src":"28994:537:1","statements":[{"expression":{"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1793,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"29022:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"29022:20:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":1796,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"29044:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":1402,"src":"29044:39:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":1798,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"29021:63:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1801,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"29144:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"29144:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29195:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1804,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"29227:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"29227:15:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":1806,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"29273:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"29273:27:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":1808,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"29331:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityStart","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"29331:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":1810,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"29382:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1811,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"29382:33:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":1799,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"29087:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"observeSingle","nodeType":"MemberAccess","referencedDeclaration":4699,"src":"29087:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_int56_$_t_uint160_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (int56,uint160)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29087:355:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"src":"29021:421:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"29021:421:1"},{"expression":{"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1815,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"29469:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"computedLatestObservation","nodeType":"MemberAccess","referencedDeclaration":1404,"src":"29469:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29503:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"29469:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1820,"nodeType":"ExpressionStatement","src":"29469:38:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1825,"name":"lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"29567:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29559:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"29559:7:1","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29559:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29586:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29578:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"29578:7:1","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29578:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"29559:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"29555:129:1","trueBody":{"id":1840,"nodeType":"Block","src":"29590:94:1","statements":[{"expression":{"arguments":[{"expression":{"id":1835,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"29634:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"29634:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1837,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"29649:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1832,"name":"lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"29615:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"crossLmTick","nodeType":"MemberAccess","referencedDeclaration":13,"src":"29615:18:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_int24_$_t_bool_$returns$__$","typeString":"function (int24,bool) external"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29615:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1839,"nodeType":"ExpressionStatement","src":"29615:45:1"}]}},{"assignments":[1843],"declarations":[{"constant":false,"id":1843,"mutability":"mutable","name":"liquidityNet","nodeType":"VariableDeclaration","scope":1886,"src":"29708:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1842,"name":"int128","nodeType":"ElementaryTypeName","src":"29708:6:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"expression":{"id":1846,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"29768:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"29768:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"components":[{"condition":{"id":1848,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"29809:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1851,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"29850:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"29809:61:1","trueExpression":{"expression":{"id":1849,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"29822:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthGlobalX128","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"29822:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29808:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"condition":{"id":1854,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"29899:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1856,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"29935:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthGlobalX128","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"29935:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"29899:61:1","trueExpression":{"id":1855,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"29912:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29898:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1860,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"29988:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":1402,"src":"29988:39:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":1862,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"30054:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":1400,"src":"30054:20:1","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":1864,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"30101:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"30101:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_int56","typeString":"int56"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":1844,"name":"ticks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"29730:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"cross","nodeType":"MemberAccess","referencedDeclaration":6257,"src":"29730:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$_t_int24_$_t_uint256_$_t_uint256_$_t_uint160_$_t_int56_$_t_uint32_$returns$_t_int128_$bound_to$_t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$_$","typeString":"function (mapping(int24 => struct Tick.Info storage ref),int24,uint256,uint256,uint160,int56,uint32) returns (int128)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29730:414:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"VariableDeclarationStatement","src":"29708:436:1"},{"condition":{"id":1868,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"30345:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1874,"nodeType":"IfStatement","src":"30341:44:1","trueBody":{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"liquidityNet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"30357:12:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"30372:13:1","subExpression":{"id":1870,"name":"liquidityNet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"30373:12:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"30357:28:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":1873,"nodeType":"ExpressionStatement","src":"30357:28:1"}},{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1875,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30410:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"30410:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1880,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30451:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"30451:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":1882,"name":"liquidityNet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"30468:12:1","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":1878,"name":"LiquidityMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"30428:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LiquidityMath_$3921_$","typeString":"type(library LiquidityMath)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addDelta","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"30428:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$","typeString":"function (uint128,int128) pure returns (uint128)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30428:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"30410:71:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1885,"nodeType":"ExpressionStatement","src":"30410:71:1"}]}},{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1888,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30521:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"30521:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":1891,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"30534:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1896,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"30567:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"30567:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"30534:46:1","trueExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1892,"name":"step","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"30547:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_StepComputations_$1435_memory_ptr","typeString":"struct BubblySwapPool.StepComputations memory"}},"id":1893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickNext","nodeType":"MemberAccess","referencedDeclaration":1424,"src":"30547:13:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30563:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30547:17:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"30521:59:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":1900,"nodeType":"ExpressionStatement","src":"30521:59:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1566,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"26042:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountSpecifiedRemaining","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"26042:30:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26076:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26042:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1570,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"26081:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"26081:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1572,"name":"sqrtPriceLimitX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"26103:17:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"26081:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26042:78:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1921,"nodeType":"WhileStatement","src":"26035:4844:1"},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1922,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"30964:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"30964:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1924,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"30978:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"30978:15:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"30964:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1974,"nodeType":"Block","src":"31647:114:1","statements":[{"expression":{"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1967,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"31710:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":1969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"31710:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1970,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"31731:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"31731:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"31710:39:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":1973,"nodeType":"ExpressionStatement","src":"31710:39:1"}]},"id":1975,"nodeType":"IfStatement","src":"30960:801:1","trueBody":{"id":1966,"nodeType":"Block","src":"30995:646:1","statements":[{"assignments":[1928,1930],"declarations":[{"constant":false,"id":1928,"mutability":"mutable","name":"observationIndex","nodeType":"VariableDeclaration","scope":1966,"src":"31011:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1927,"name":"uint16","nodeType":"ElementaryTypeName","src":"31011:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"observationCardinality","nodeType":"VariableDeclaration","scope":1966,"src":"31036:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1929,"name":"uint16","nodeType":"ElementaryTypeName","src":"31036:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":1946,"initialValue":{"arguments":[{"expression":{"id":1933,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"31106:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"31106:27:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":1935,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"31152:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"31152:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":1937,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"31191:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"31191:15:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":1939,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"31225:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityStart","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"31225:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":1941,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"31264:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"31264:33:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":1943,"name":"slot0Start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"31316:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_memory_ptr","typeString":"struct BubblySwapPool.Slot0 memory"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"observationCardinalityNext","nodeType":"MemberAccess","referencedDeclaration":114,"src":"31316:37:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":1931,"name":"observations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"31069:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage","typeString":"struct Oracle.Observation storage ref[65535] storage ref"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"write","nodeType":"MemberAccess","referencedDeclaration":4229,"src":"31069:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint16_$_t_uint32_$_t_int24_$_t_uint128_$_t_uint16_$_t_uint16_$returns$_t_uint16_$_t_uint16_$bound_to$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint16,uint32,int24,uint128,uint16,uint16) returns (uint16,uint16)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31069:299:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$","typeString":"tuple(uint16,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"31010:358:1"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":1947,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"31384:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":1949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":106,"src":"31384:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":1950,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"31404:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":1951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":108,"src":"31404:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":1952,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"31416:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":1953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"observationIndex","nodeType":"MemberAccess","referencedDeclaration":110,"src":"31416:22:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":1954,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"31440:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":1955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"observationCardinality","nodeType":"MemberAccess","referencedDeclaration":112,"src":"31440:28:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1956,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"31383:86:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$","typeString":"tuple(uint160,int24,uint16,uint16)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"expression":{"id":1957,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"31491:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"31491:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":1959,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"31528:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"31528:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":1961,"name":"observationIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"31557:16:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":1962,"name":"observationCardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"31592:22:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31472:157:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$","typeString":"tuple(uint160,int24,uint16,uint16)"}},"src":"31383:246:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"31383:246:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1976,"name":"cache","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"31820:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapCache_$1405_memory_ptr","typeString":"struct BubblySwapPool.SwapCache memory"}},"id":1977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityStart","nodeType":"MemberAccess","referencedDeclaration":1396,"src":"31820:20:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1978,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"31844:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"31844:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"31820:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1986,"nodeType":"IfStatement","src":"31816:72:1","trueBody":{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"31861:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1982,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"31873:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"31873:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"31861:27:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":1985,"nodeType":"ExpressionStatement","src":"31861:27:1"}},{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"protocolFeesToken0","nodeType":"VariableDeclaration","scope":2182,"src":"31901:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1987,"name":"uint128","nodeType":"ElementaryTypeName","src":"31901:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":1990,"initialValue":{"hexValue":"30","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"31901:30:1"},{"assignments":[1992],"declarations":[{"constant":false,"id":1992,"mutability":"mutable","name":"protocolFeesToken1","nodeType":"VariableDeclaration","scope":2182,"src":"31942:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1991,"name":"uint128","nodeType":"ElementaryTypeName","src":"31942:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":1994,"initialValue":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31971:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"31942:30:1"},{"condition":{"id":1995,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"32158:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2041,"nodeType":"Block","src":"32386:210:1","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"32401:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2020,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32424:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthGlobalX128","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"32424:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32401:48:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"32401:48:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2024,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32468:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2025,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"32468:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32488:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32468:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2035,"nodeType":"IfStatement","src":"32464:67:1","trueBody":{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2028,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"32491:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":135,"src":"32491:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2031,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32514:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"32514:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"32491:40:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2034,"nodeType":"ExpressionStatement","src":"32491:40:1"}},{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2036,"name":"protocolFeesToken1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"32546:18:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2037,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32567:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"32567:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"32546:38:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2040,"nodeType":"ExpressionStatement","src":"32546:38:1"}]},"id":2042,"nodeType":"IfStatement","src":"32154:442:1","trueBody":{"id":2018,"nodeType":"Block","src":"32170:210:1","statements":[{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1996,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"32185:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1997,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32208:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":1998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthGlobalX128","nodeType":"MemberAccess","referencedDeclaration":1415,"src":"32208:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32185:48:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"32185:48:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2001,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32252:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"32252:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32272:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32252:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2012,"nodeType":"IfStatement","src":"32248:67:1","trueBody":{"expression":{"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2005,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"32275:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":133,"src":"32275:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":2008,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32298:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"32298:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"32275:40:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2011,"nodeType":"ExpressionStatement","src":"32275:40:1"}},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"protocolFeesToken0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"32330:18:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2014,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32351:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"protocolFee","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"32351:17:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"32330:38:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2017,"nodeType":"ExpressionStatement","src":"32330:38:1"}]}},{"expression":{"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2043,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"32609:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2044,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"32618:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"32608:18:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"32629:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2047,"name":"exactInput","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"32643:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32629:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"components":[{"expression":{"id":2056,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32760:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountCalculated","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"32760:22:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"amountSpecified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"32784:15:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2059,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32802:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountSpecifiedRemaining","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"32802:30:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32784:48:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32759:74:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"32629:204:1","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2049,"name":"amountSpecified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"32670:15:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2050,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32688:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountSpecifiedRemaining","nodeType":"MemberAccess","referencedDeclaration":1407,"src":"32688:30:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32670:48:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"expression":{"id":2053,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"32720:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"amountCalculated","nodeType":"MemberAccess","referencedDeclaration":1409,"src":"32720:22:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32669:74:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"32608:225:1","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"32608:225:1"},{"condition":{"id":2066,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"32899:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2158,"nodeType":"Block","src":"33256:339:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2113,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"33275:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33285:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"33275:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2128,"nodeType":"IfStatement","src":"33271:82:1","trueBody":{"expression":{"arguments":[{"id":2119,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"33316:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2120,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"33324:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"33343:8:1","subExpression":{"id":2123,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"33344:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33335:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2121,"name":"uint256","nodeType":"ElementaryTypeName","src":"33335:7:1","typeDescriptions":{}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33335:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2116,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"33288:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"33288:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33288:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2127,"nodeType":"ExpressionStatement","src":"33288:65:1"}},{"assignments":[2130],"declarations":[{"constant":false,"id":2130,"mutability":"mutable","name":"balance1Before","nodeType":"VariableDeclaration","scope":2158,"src":"33370:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"33370:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2133,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2131,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"33395:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33395:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33370:35:1"},{"expression":{"arguments":[{"id":2139,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"33479:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2140,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"33488:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"33497:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":2135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33444:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"33444:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2134,"name":"IBubblySwapSwapCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"33420:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapSwapCallback_$2970_$","typeString":"type(contract IBubblySwapSwapCallback)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33420:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapSwapCallback_$2970","typeString":"contract IBubblySwapSwapCallback"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BubblySwapSwapCallback","nodeType":"MemberAccess","referencedDeclaration":2969,"src":"33420:58:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_int256_$_t_int256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (int256,int256,bytes memory) external"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33420:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"ExpressionStatement","src":"33420:82:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2149,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"33552:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33544:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2147,"name":"uint256","nodeType":"ElementaryTypeName","src":"33544:7:1","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33544:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2145,"name":"balance1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"33525:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"33525:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33525:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2152,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"33565:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33565:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33525:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494941","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33577:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ead9ba8f24b0c9c3e87a0076a48a0a166e1d5cd0bd355971195d20d966e145fc","typeString":"literal_string \"IIA\""},"value":"IIA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ead9ba8f24b0c9c3e87a0076a48a0a166e1d5cd0bd355971195d20d966e145fc","typeString":"literal_string \"IIA\""}],"id":2144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33517:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33517:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2157,"nodeType":"ExpressionStatement","src":"33517:66:1"}]},"id":2159,"nodeType":"IfStatement","src":"32895:700:1","trueBody":{"id":2112,"nodeType":"Block","src":"32911:339:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"32930:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32940:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32930:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2082,"nodeType":"IfStatement","src":"32926:82:1","trueBody":{"expression":{"arguments":[{"id":2073,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"32971:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"32979:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"32998:8:1","subExpression":{"id":2077,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"32999:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32990:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"32990:7:1","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32990:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2070,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"32943:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"32943:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32943:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2081,"nodeType":"ExpressionStatement","src":"32943:65:1"}},{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"balance0Before","nodeType":"VariableDeclaration","scope":2112,"src":"33025:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"33025:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2087,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2085,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"33050:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33050:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33025:35:1"},{"expression":{"arguments":[{"id":2093,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"33134:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2094,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"33143:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2095,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"33152:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":2089,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33099:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"33099:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2088,"name":"IBubblySwapSwapCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"33075:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapSwapCallback_$2970_$","typeString":"type(contract IBubblySwapSwapCallback)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33075:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapSwapCallback_$2970","typeString":"contract IBubblySwapSwapCallback"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BubblySwapSwapCallback","nodeType":"MemberAccess","referencedDeclaration":2969,"src":"33075:58:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_int256_$_t_int256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (int256,int256,bytes memory) external"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33075:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"ExpressionStatement","src":"33075:82:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2103,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"33207:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33199:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2101,"name":"uint256","nodeType":"ElementaryTypeName","src":"33199:7:1","typeDescriptions":{}}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33199:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2099,"name":"balance0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"33180:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"33180:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33180:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2106,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"33220:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33220:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33180:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"494941","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33232:5:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ead9ba8f24b0c9c3e87a0076a48a0a166e1d5cd0bd355971195d20d966e145fc","typeString":"literal_string \"IIA\""},"value":"IIA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ead9ba8f24b0c9c3e87a0076a48a0a166e1d5cd0bd355971195d20d966e145fc","typeString":"literal_string \"IIA\""}],"id":2098,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33172:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33172:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"ExpressionStatement","src":"33172:66:1"}]}},{"eventCall":{"arguments":[{"expression":{"id":2161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"33617:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"33617:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2163,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"33629:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2164,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"33640:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2165,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"33649:7:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"expression":{"id":2166,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"33658:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceX96","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"33658:18:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":2168,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"33678:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"33678:15:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":2170,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"33695:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_SwapState_$1420_memory_ptr","typeString":"struct BubblySwapPool.SwapState memory"}},"id":2171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tick","nodeType":"MemberAccess","referencedDeclaration":1413,"src":"33695:10:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":2172,"name":"protocolFeesToken0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"33707:18:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":2173,"name":"protocolFeesToken1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"33727:18:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":2160,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"33612:4:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_int256_$_t_int256_$_t_uint160_$_t_uint128_$_t_int24_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (address,address,int256,int256,uint160,uint128,int24,uint128,uint128)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33612:134:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2175,"nodeType":"EmitStatement","src":"33607:139:1"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2176,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"33757:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":2178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"unlocked","nodeType":"MemberAccess","referencedDeclaration":118,"src":"33757:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33774:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"33757:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2181,"nodeType":"ExpressionStatement","src":"33757:21:1"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"24195:38:1","text":"@inheritdoc IBubblySwapPoolActions"},"functionSelector":"128acb08","id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nodeType":"FunctionDefinition","overrides":{"id":1448,"nodeType":"OverrideSpecifier","overrides":[],"src":"24422:8:1"},"parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2183,"src":"24263:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"24263:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":2183,"src":"24291:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"24291:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"amountSpecified","nodeType":"VariableDeclaration","scope":2183,"src":"24317:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1441,"name":"int256","nodeType":"ElementaryTypeName","src":"24317:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":2183,"src":"24350:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1443,"name":"uint160","nodeType":"ElementaryTypeName","src":"24350:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2183,"src":"24386:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1445,"name":"bytes","nodeType":"ElementaryTypeName","src":"24386:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24252:160:1"},"returnParameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2183,"src":"24440:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1449,"name":"int256","nodeType":"ElementaryTypeName","src":"24440:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2183,"src":"24456:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1451,"name":"int256","nodeType":"ElementaryTypeName","src":"24456:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24439:32:1"},"scope":2630,"src":"24239:9547:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3059],"body":{"id":2431,"nodeType":"Block","src":"33993:1862:1","statements":[{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"_liquidity","nodeType":"VariableDeclaration","scope":2431,"src":"34004:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2198,"name":"uint128","nodeType":"ElementaryTypeName","src":"34004:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":2201,"initialValue":{"id":2200,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"34025:9:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"34004:30:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"34053:10:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34066:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"34053:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34069:3:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8","typeString":"literal_string \"L\""},"value":"L"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8","typeString":"literal_string \"L\""}],"id":2202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34045:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34045:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"34045:28:1"},{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"fee0","nodeType":"VariableDeclaration","scope":2431,"src":"34086:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"34086:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2217,"initialValue":{"arguments":[{"id":2213,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"34127:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2214,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"34136:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"316536","id":2215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34141:3:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"expression":{"id":2211,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"34101:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"34101:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34101:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34086:59:1"},{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"fee1","nodeType":"VariableDeclaration","scope":2431,"src":"34156:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"34156:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2226,"initialValue":{"arguments":[{"id":2222,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"34197:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2223,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"34206:3:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"316536","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34211:3:1","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"expression":{"id":2220,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"34171:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"34171:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34171:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34156:59:1"},{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"balance0Before","nodeType":"VariableDeclaration","scope":2431,"src":"34226:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"34226:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2231,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2229,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"34251:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34251:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34226:35:1"},{"assignments":[2233],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"balance1Before","nodeType":"VariableDeclaration","scope":2431,"src":"34272:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"34272:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2236,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2234,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"34297:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34297:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34272:35:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"34324:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34334:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"34324:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2248,"nodeType":"IfStatement","src":"34320:72:1","trueBody":{"expression":{"arguments":[{"id":2243,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"34365:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2244,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"34373:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2245,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"34384:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2240,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"34337:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"34337:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34337:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2247,"nodeType":"ExpressionStatement","src":"34337:55:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"34407:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34417:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"34407:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2260,"nodeType":"IfStatement","src":"34403:72:1","trueBody":{"expression":{"arguments":[{"id":2255,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"34448:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2256,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"34456:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2257,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"34467:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2252,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"34420:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"34420:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34420:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2259,"nodeType":"ExpressionStatement","src":"34420:55:1"}},{"expression":{"arguments":[{"id":2266,"name":"fee0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"34549:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2267,"name":"fee1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"34555:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2268,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"34561:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":2262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"34513:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"34513:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":2261,"name":"IBubblySwapFlashCallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"34488:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapFlashCallback_$2942_$","typeString":"type(contract IBubblySwapFlashCallback)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34488:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapFlashCallback_$2942","typeString":"contract IBubblySwapFlashCallback"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"BubblySwapFlashCallback","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"34488:60:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,bytes memory) external"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34488:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2270,"nodeType":"ExpressionStatement","src":"34488:78:1"},{"assignments":[2272],"declarations":[{"constant":false,"id":2272,"mutability":"mutable","name":"balance0After","nodeType":"VariableDeclaration","scope":2431,"src":"34579:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"34579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2273,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"34603:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34603:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34579:34:1"},{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"balance1After","nodeType":"VariableDeclaration","scope":2431,"src":"34624:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"34624:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2280,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2278,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"34648:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34648:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34624:34:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2284,"name":"fee0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"34698:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2282,"name":"balance0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"34679:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"34679:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34679:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2286,"name":"balance0After","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"34707:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34679:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4630","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34722:4:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_03a44893a6f04a1de143742ff3f2d3f895f4c0834e5d5ed116313011722d95d5","typeString":"literal_string \"F0\""},"value":"F0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03a44893a6f04a1de143742ff3f2d3f895f4c0834e5d5ed116313011722d95d5","typeString":"literal_string \"F0\""}],"id":2281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34671:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34671:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2290,"nodeType":"ExpressionStatement","src":"34671:56:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2294,"name":"fee1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"34765:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2292,"name":"balance1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"34746:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"34746:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34746:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2296,"name":"balance1After","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"34774:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34746:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4631","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34789:4:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_61f8f8560327748d3d32b99138645b9511e5310a7109d5ec11cbfb1b408602cf","typeString":"literal_string \"F1\""},"value":"F1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61f8f8560327748d3d32b99138645b9511e5310a7109d5ec11cbfb1b408602cf","typeString":"literal_string \"F1\""}],"id":2291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34738:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34738:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"ExpressionStatement","src":"34738:56:1"},{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"paid0","nodeType":"VariableDeclaration","scope":2431,"src":"34896:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"34896:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"balance0After","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"34912:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2304,"name":"balance0Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"34928:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34912:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34896:46:1"},{"assignments":[2308],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"paid1","nodeType":"VariableDeclaration","scope":2431,"src":"34953:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"34953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2312,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2309,"name":"balance1After","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"34969:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2310,"name":"balance1Before","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"34985:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34969:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34953:46:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"paid0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"35016:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35024:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35016:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2366,"nodeType":"IfStatement","src":"35012:380:1","trueBody":{"id":2365,"nodeType":"Block","src":"35027:365:1","statements":[{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"feeProtocol0","nodeType":"VariableDeclaration","scope":2365,"src":"35042:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2316,"name":"uint32","nodeType":"ElementaryTypeName","src":"35042:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2322,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2318,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"35064:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":2319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"35064:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2320,"name":"PROTOCOL_FEE_SP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"35084:15:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"35064:35:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"35042:57:1"},{"assignments":[2324],"declarations":[{"constant":false,"id":2324,"mutability":"mutable","name":"fees0","nodeType":"VariableDeclaration","scope":2365,"src":"35114:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"35114:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2336,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"35130:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35146:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35130:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"paid0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"35155:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2330,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"35163:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"35155:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"35154:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2333,"name":"PROTOCOL_FEE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"35179:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35154:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"35130:73:1","trueExpression":{"hexValue":"30","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35150:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"35114:89:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2339,"name":"fees0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"35230:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35222:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2337,"name":"uint128","nodeType":"ElementaryTypeName","src":"35222:7:1","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35222:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35239:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35222:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2352,"nodeType":"IfStatement","src":"35218:61:1","trueBody":{"expression":{"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2343,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"35242:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":133,"src":"35242:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":2348,"name":"fees0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"35273:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35265:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2346,"name":"uint128","nodeType":"ElementaryTypeName","src":"35265:7:1","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35265:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"35242:37:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2351,"nodeType":"ExpressionStatement","src":"35242:37:1"}},{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2353,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"35294:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"paid0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"35334:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2357,"name":"fees0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"35342:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35334:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2359,"name":"FixedPoint128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"35349:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint128_$3686_$","typeString":"type(library FixedPoint128)"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q128","nodeType":"MemberAccess","referencedDeclaration":3685,"src":"35349:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2361,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"35369:10:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2354,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"35318:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"35318:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35318:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35294:86:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ExpressionStatement","src":"35294:86:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"paid1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"35406:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35414:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35406:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2420,"nodeType":"IfStatement","src":"35402:368:1","trueBody":{"id":2419,"nodeType":"Block","src":"35417:353:1","statements":[{"assignments":[2371],"declarations":[{"constant":false,"id":2371,"mutability":"mutable","name":"feeProtocol1","nodeType":"VariableDeclaration","scope":2419,"src":"35432:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2370,"name":"uint32","nodeType":"ElementaryTypeName","src":"35432:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2376,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2372,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"35454:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":2373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"35454:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35475:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"35454:23:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"35432:45:1"},{"assignments":[2378],"declarations":[{"constant":false,"id":2378,"mutability":"mutable","name":"fees1","nodeType":"VariableDeclaration","scope":2419,"src":"35492:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"35492:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2390,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"35508:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35524:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35508:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"paid1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"35533:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2384,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"35541:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"35533:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"35532:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2387,"name":"PROTOCOL_FEE_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"35557:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35532:49:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"35508:73:1","trueExpression":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35528:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"35492:89:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2393,"name":"fees1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"35608:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35600:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2391,"name":"uint128","nodeType":"ElementaryTypeName","src":"35600:7:1","typeDescriptions":{}}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35600:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35617:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35600:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2406,"nodeType":"IfStatement","src":"35596:61:1","trueBody":{"expression":{"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2397,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"35620:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":135,"src":"35620:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":2402,"name":"fees1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"35651:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35643:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2400,"name":"uint128","nodeType":"ElementaryTypeName","src":"35643:7:1","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35643:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"35620:37:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2405,"nodeType":"ExpressionStatement","src":"35620:37:1"}},{"expression":{"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2407,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"35672:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2410,"name":"paid1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"35712:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2411,"name":"fees1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"35720:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35712:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2413,"name":"FixedPoint128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"35727:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint128_$3686_$","typeString":"type(library FixedPoint128)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q128","nodeType":"MemberAccess","referencedDeclaration":3685,"src":"35727:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2415,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"35747:10:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2408,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"35696:8:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"35696:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35696:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35672:86:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2418,"nodeType":"ExpressionStatement","src":"35672:86:1"}]}},{"eventCall":{"arguments":[{"expression":{"id":2422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"35793:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"35793:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2424,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"35805:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"35816:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2426,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"35825:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2427,"name":"paid0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"35834:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2428,"name":"paid1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"35841:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2421,"name":"Flash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"35787:5:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256,uint256,uint256)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35787:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"EmitStatement","src":"35782:65:1"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"33794:38:1","text":"@inheritdoc IBubblySwapPoolActions"},"functionSelector":"490e6cbc","id":2432,"implemented":true,"kind":"function","modifiers":[{"id":2196,"modifierName":{"id":2195,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"33988:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"33988:4:1"}],"name":"flash","nodeType":"FunctionDefinition","overrides":{"id":2194,"nodeType":"OverrideSpecifier","overrides":[],"src":"33979:8:1"},"parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2432,"src":"33863:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"33863:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2432,"src":"33891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"33891:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2432,"src":"33917:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"33917:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2432,"src":"33943:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2191,"name":"bytes","nodeType":"ElementaryTypeName","src":"33943:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33852:117:1"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[],"src":"33993:0:1"},"scope":2630,"src":"33838:2017:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3271],"body":{"id":2502,"nodeType":"Block","src":"36027:441:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"36061:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36077:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36061:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"36083:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31303030","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36099:4:1","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"36083:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"36107:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"34303030","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36123:4:1","typeDescriptions":{"typeIdentifier":"t_rational_4000_by_1","typeString":"int_const 4000"},"value":"4000"},"src":"36107:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36083:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36082:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36061:67:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36060:69:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"36147:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36163:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36147:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"36169:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31303030","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36185:4:1","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"36169:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"36193:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"34303030","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36209:4:1","typeDescriptions":{"typeIdentifier":"t_rational_4000_by_1","typeString":"int_const 4000"},"value":"4000"},"src":"36193:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36169:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36168:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36147:67:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36146:69:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"36060:155:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"36038:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36038:188:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"ExpressionStatement","src":"36038:188:1"},{"assignments":[2476],"declarations":[{"constant":false,"id":2476,"mutability":"mutable","name":"feeProtocolOld","nodeType":"VariableDeclaration","scope":2502,"src":"36239:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2475,"name":"uint32","nodeType":"ElementaryTypeName","src":"36239:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":2479,"initialValue":{"expression":{"id":2477,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"36263:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":2478,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"36263:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"36239:41:1"},{"expression":{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2480,"name":"slot0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"36291:5:1","typeDescriptions":{"typeIdentifier":"t_struct$_Slot0_$119_storage","typeString":"struct BubblySwapPool.Slot0 storage ref"}},"id":2482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeProtocol","nodeType":"MemberAccess","referencedDeclaration":116,"src":"36291:17:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"36311:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"36327:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36343:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"36327:18:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":2487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"36326:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36311:35:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36291:55:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2490,"nodeType":"ExpressionStatement","src":"36291:55:1"},{"eventCall":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"feeProtocolOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"36377:14:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2493,"name":"PROTOCOL_FEE_SP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"36394:15:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"36377:32:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2495,"name":"feeProtocolOld","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"36411:14:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36429:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"36411:20:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2498,"name":"feeProtocol0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"36433:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2499,"name":"feeProtocol1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"36447:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2491,"name":"SetFeeProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"36362:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32,uint32,uint32)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36362:98:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2501,"nodeType":"EmitStatement","src":"36357:103:1"}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"35863:43:1","text":"@inheritdoc IBubblySwapPoolOwnerActions"},"functionSelector":"b0d0d211","id":2503,"implemented":true,"kind":"function","modifiers":[{"id":2441,"modifierName":{"id":2440,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"35996:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"35996:4:1"},{"id":2443,"modifierName":{"id":2442,"name":"onlyFactoryOrFactoryOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"36001:25:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"36001:25:1"}],"name":"setFeeProtocol","nodeType":"FunctionDefinition","overrides":{"id":2439,"nodeType":"OverrideSpecifier","overrides":[],"src":"35987:8:1"},"parameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"feeProtocol0","nodeType":"VariableDeclaration","scope":2503,"src":"35936:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2434,"name":"uint32","nodeType":"ElementaryTypeName","src":"35936:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"feeProtocol1","nodeType":"VariableDeclaration","scope":2503,"src":"35957:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2436,"name":"uint32","nodeType":"ElementaryTypeName","src":"35957:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"35935:42:1"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"36027:0:1"},"scope":2630,"src":"35912:556:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3285],"body":{"id":2606,"nodeType":"Block","src":"36747:824:1","statements":[{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2522,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"36758:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"amount0Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"36768:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2524,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"36787:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":133,"src":"36787:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"36768:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2529,"name":"amount0Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"36831:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"36768:79:1","trueExpression":{"expression":{"id":2527,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"36809:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":133,"src":"36809:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"36758:89:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2532,"nodeType":"ExpressionStatement","src":"36758:89:1"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"36858:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2534,"name":"amount1Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"36868:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2535,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"36887:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":135,"src":"36887:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"36868:38:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2540,"name":"amount1Requested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"36931:16:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"36868:79:1","trueExpression":{"expression":{"id":2538,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"36909:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":135,"src":"36909:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"36858:89:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2543,"nodeType":"ExpressionStatement","src":"36858:89:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"36964:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36974:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36964:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2570,"nodeType":"IfStatement","src":"36960:260:1","trueBody":{"id":2569,"nodeType":"Block","src":"36977:243:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2547,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"36996:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2548,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"37007:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":133,"src":"37007:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"36996:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2554,"nodeType":"IfStatement","src":"36992:45:1","trueBody":{"expression":{"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"37028:9:1","subExpression":{"id":2551,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"37028:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2553,"nodeType":"ExpressionStatement","src":"37028:9:1"}},{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2555,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"37108:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":133,"src":"37108:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2558,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"37131:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"37108:30:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2560,"nodeType":"ExpressionStatement","src":"37108:30:1"},{"expression":{"arguments":[{"id":2564,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"37181:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2565,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"37189:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2566,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"37200:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2561,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"37153:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"37153:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37153:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2568,"nodeType":"ExpressionStatement","src":"37153:55:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"37234:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37244:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"37234:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"37230:260:1","trueBody":{"id":2596,"nodeType":"Block","src":"37247:243:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"37266:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2575,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"37277:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":135,"src":"37277:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"37266:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2581,"nodeType":"IfStatement","src":"37262:45:1","trueBody":{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"37298:9:1","subExpression":{"id":2578,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"37298:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2580,"nodeType":"ExpressionStatement","src":"37298:9:1"}},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2582,"name":"protocolFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"37378:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ProtocolFees_$136_storage","typeString":"struct BubblySwapPool.ProtocolFees storage ref"}},"id":2584,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":135,"src":"37378:19:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2585,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"37401:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"37378:30:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":2587,"nodeType":"ExpressionStatement","src":"37378:30:1"},{"expression":{"arguments":[{"id":2591,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"37451:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2592,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"37459:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2593,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"37470:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2588,"name":"TransferHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"37423:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TransferHelper_$7100_$","typeString":"type(library TransferHelper)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"37423:27:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37423:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2595,"nodeType":"ExpressionStatement","src":"37423:55:1"}]}},{"eventCall":{"arguments":[{"expression":{"id":2599,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"37523:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"37523:10:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":2601,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"37535:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2602,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"37546:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":2603,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"37555:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":2598,"name":"CollectProtocol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"37507:15:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint128_$_t_uint128_$returns$__$","typeString":"function (address,address,uint128,uint128)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37507:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2605,"nodeType":"EmitStatement","src":"37502:61:1"}]},"documentation":{"id":2504,"nodeType":"StructuredDocumentation","src":"36476:43:1","text":"@inheritdoc IBubblySwapPoolOwnerActions"},"functionSelector":"85b66729","id":2607,"implemented":true,"kind":"function","modifiers":[{"id":2514,"modifierName":{"id":2513,"name":"lock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"36673:4:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"36673:4:1"},{"id":2516,"modifierName":{"id":2515,"name":"onlyFactoryOrFactoryOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"36678:25:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"36678:25:1"}],"name":"collectProtocol","nodeType":"FunctionDefinition","overrides":{"id":2512,"nodeType":"OverrideSpecifier","overrides":[],"src":"36664:8:1"},"parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2607,"src":"36560:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"36560:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":2607,"src":"36588:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2507,"name":"uint128","nodeType":"ElementaryTypeName","src":"36588:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":2607,"src":"36623:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2509,"name":"uint128","nodeType":"ElementaryTypeName","src":"36623:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"36549:105:1"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2518,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2607,"src":"36713:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2517,"name":"uint128","nodeType":"ElementaryTypeName","src":"36713:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2607,"src":"36730:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2519,"name":"uint128","nodeType":"ElementaryTypeName","src":"36730:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"36712:34:1"},"scope":2630,"src":"36525:1046:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[3291],"body":{"id":2628,"nodeType":"Block","src":"37659:98:1","statements":[{"expression":{"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2615,"name":"lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"37668:6:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2617,"name":"_lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"37695:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2616,"name":"IBubblySwapLmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"37677:17:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBubblySwapLmPool_$14_$","typeString":"type(contract IBubblySwapLmPool)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37677:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}},"src":"37668:35:1","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapLmPool_$14","typeString":"contract IBubblySwapLmPool"}},"id":2620,"nodeType":"ExpressionStatement","src":"37668:35:1"},{"eventCall":{"arguments":[{"arguments":[{"id":2624,"name":"_lmPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"37740:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37732:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"37732:7:1","typeDescriptions":{}}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37732:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2621,"name":"SetLmPoolEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"37717:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37717:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2627,"nodeType":"EmitStatement","src":"37712:37:1"}]},"functionSelector":"cc7e7fa2","id":2629,"implemented":true,"kind":"function","modifiers":[{"id":2613,"modifierName":{"id":2612,"name":"onlyFactoryOrFactoryOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"37633:25:1","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"37633:25:1"}],"name":"setLmPool","nodeType":"FunctionDefinition","overrides":{"id":2611,"nodeType":"OverrideSpecifier","overrides":[],"src":"37624:8:1"},"parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"_lmPool","nodeType":"VariableDeclaration","scope":2629,"src":"37598:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"37598:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37597:17:1"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"37659:0:1"},"scope":2630,"src":"37579:178:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2631,"src":"1021:36739:1"}],"src":"46:37716:1"},"id":1},"contracts/interfaces/IBubblySwapFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBubblySwapFactory.sol","exportedSymbols":{"IBubblySwapFactory":[2801]},"id":2802,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2632,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"74:177:2","text":"@title The interface for the PancakeSwap V3 Factory\n @notice The PancakeSwap V3 Factory facilitates creation of PancakeSwap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":2801,"linearizedBaseContracts":[2801],"name":"IBubblySwapFactory","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBubblySwapFactory.TickSpacingExtraInfo","id":2638,"members":[{"constant":false,"id":2635,"mutability":"mutable","name":"whitelistRequested","nodeType":"VariableDeclaration","scope":2638,"src":"326:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2634,"name":"bool","nodeType":"ElementaryTypeName","src":"326:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2638,"src":"360:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2636,"name":"bool","nodeType":"ElementaryTypeName","src":"360:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TickSpacingExtraInfo","nodeType":"StructDefinition","scope":2801,"src":"287:93:2","visibility":"public"},{"anonymous":false,"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"388:187:2","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"id":2645,"name":"OwnerChanged","nodeType":"EventDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"indexed":true,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":2645,"src":"600:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2643,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":2645,"src":"626:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"626:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"599:52:2"},"src":"581:71:2"},{"anonymous":false,"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"660:426:2","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"id":2658,"name":"PoolCreated","nodeType":"EventDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"indexed":true,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2658,"src":"1120:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"indexed":true,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2658,"src":"1153:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"1153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"indexed":true,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2658,"src":"1186:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2651,"name":"uint24","nodeType":"ElementaryTypeName","src":"1186:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2654,"indexed":false,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":2658,"src":"1215:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2653,"name":"int24","nodeType":"ElementaryTypeName","src":"1215:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2656,"indexed":false,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2658,"src":"1243:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1109:153:2"},"src":"1092:171:2"},{"anonymous":false,"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"1271:277:2","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"id":2665,"name":"FeeAmountEnabled","nodeType":"EventDefinition","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"indexed":true,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2665,"src":"1577:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2660,"name":"uint24","nodeType":"ElementaryTypeName","src":"1577:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2663,"indexed":true,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":2665,"src":"1597:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2662,"name":"int24","nodeType":"ElementaryTypeName","src":"1597:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1576:47:2"},"src":"1554:70:2"},{"anonymous":false,"id":2673,"name":"FeeAmountExtraInfoUpdated","nodeType":"EventDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"indexed":true,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2673,"src":"1664:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2666,"name":"uint24","nodeType":"ElementaryTypeName","src":"1664:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2669,"indexed":false,"mutability":"mutable","name":"whitelistRequested","nodeType":"VariableDeclaration","scope":2673,"src":"1684:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2668,"name":"bool","nodeType":"ElementaryTypeName","src":"1684:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2671,"indexed":false,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2673,"src":"1709:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2670,"name":"bool","nodeType":"ElementaryTypeName","src":"1709:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1663:59:2"},"src":"1632:91:2"},{"anonymous":false,"id":2679,"name":"WhiteListAdded","nodeType":"EventDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2675,"indexed":true,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2679,"src":"1752:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2677,"indexed":false,"mutability":"mutable","name":"verified","nodeType":"VariableDeclaration","scope":2679,"src":"1774:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2676,"name":"bool","nodeType":"ElementaryTypeName","src":"1774:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1751:37:2"},"src":"1731:58:2"},{"anonymous":false,"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"1797:48:2","text":"@notice Emitted when LM pool deployer is set"},"id":2684,"name":"SetLmPoolDeployer","nodeType":"EventDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"indexed":true,"mutability":"mutable","name":"lmPoolDeployer","nodeType":"VariableDeclaration","scope":2684,"src":"1875:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2681,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1874:32:2"},"src":"1851:56:2"},{"documentation":{"id":2685,"nodeType":"StructuredDocumentation","src":"1915:165:2","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":2690,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[],"src":"2100:2:2"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2688,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2690,"src":"2126:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2125:9:2"},"scope":2801,"src":"2086:49:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"2143:351:2","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":2698,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nodeType":"FunctionDefinition","parameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2698,"src":"2530:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2692,"name":"uint24","nodeType":"ElementaryTypeName","src":"2530:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2529:12:2"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2698,"src":"2565:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2695,"name":"int24","nodeType":"ElementaryTypeName","src":"2565:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2564:7:2"},"scope":2801,"src":"2500:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2699,"nodeType":"StructuredDocumentation","src":"2580:368:2","text":"@notice Returns the tick spacing extra info\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return whitelistRequested The flag whether should be created by white list users only"},"functionSelector":"88e8006d","id":2708,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacingExtraInfo","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2708,"src":"2993:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2700,"name":"uint24","nodeType":"ElementaryTypeName","src":"2993:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2992:12:2"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"whitelistRequested","nodeType":"VariableDeclaration","scope":2708,"src":"3028:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2703,"name":"bool","nodeType":"ElementaryTypeName","src":"3028:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2708,"src":"3053:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2705,"name":"bool","nodeType":"ElementaryTypeName","src":"3053:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3027:39:2"},"scope":2801,"src":"2954:113:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"3075:476:2","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":2720,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":2720,"src":"3584:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"3584:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":2720,"src":"3609:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2712,"name":"address","nodeType":"ElementaryTypeName","src":"3609:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2720,"src":"3634:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2714,"name":"uint24","nodeType":"ElementaryTypeName","src":"3634:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3573:78:2"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2720,"src":"3675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3674:14:2"},"scope":2801,"src":"3557:132:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2721,"nodeType":"StructuredDocumentation","src":"3697:561:2","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":2732,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":2732,"src":"4294:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"4294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":2732,"src":"4319:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"4319:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2732,"src":"4344:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2726,"name":"uint24","nodeType":"ElementaryTypeName","src":"4344:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"4283:78:2"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2732,"src":"4380:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"4380:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4379:14:2"},"scope":2801,"src":"4264:130:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"4402:146:2","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":2738,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":2738,"src":"4572:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"4572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4571:16:2"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"4596:0:2"},"scope":2801,"src":"4554:43:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"4605:329:2","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":2746,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2746,"src":"4965:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2740,"name":"uint24","nodeType":"ElementaryTypeName","src":"4965:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2743,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":2746,"src":"4977:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2742,"name":"int24","nodeType":"ElementaryTypeName","src":"4977:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"4964:31:2"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[],"src":"5004:0:2"},"scope":2801,"src":"4940:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"5013:176:2","text":"@notice Set an address into white list\n @dev Address can be updated by owner with boolean value false\n @param user The user address that add into white list"},"functionSelector":"e4a86a99","id":2754,"implemented":false,"kind":"function","modifiers":[],"name":"setWhiteListAddress","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"user","nodeType":"VariableDeclaration","scope":2754,"src":"5224:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"5224:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"verified","nodeType":"VariableDeclaration","scope":2754,"src":"5238:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2750,"name":"bool","nodeType":"ElementaryTypeName","src":"5238:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5223:29:2"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[],"src":"5261:0:2"},"scope":2801,"src":"5195:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"5270:251:2","text":"@notice Set a fee amount extra info\n @dev Fee amounts can be updated by owner with extra info\n @param whitelistRequested The flag whether should be created by owner only\n @param enabled The flag is the fee is enabled or not"},"functionSelector":"8ff38e80","id":2764,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeAmountExtraInfo","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2764,"src":"5568:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2756,"name":"uint24","nodeType":"ElementaryTypeName","src":"5568:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"whitelistRequested","nodeType":"VariableDeclaration","scope":2764,"src":"5589:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2758,"name":"bool","nodeType":"ElementaryTypeName","src":"5589:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"enabled","nodeType":"VariableDeclaration","scope":2764,"src":"5623:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2760,"name":"bool","nodeType":"ElementaryTypeName","src":"5623:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5557:85:2"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[],"src":"5651:0:2"},"scope":2801,"src":"5527:125:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"80d6a792","id":2769,"implemented":false,"kind":"function","modifiers":[],"name":"setLmPoolDeployer","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"_lmPoolDeployer","nodeType":"VariableDeclaration","scope":2769,"src":"5687:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5686:25:2"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[],"src":"5720:0:2"},"scope":2801,"src":"5660:61:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"7e8435e6","id":2778,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nodeType":"FunctionDefinition","parameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2778,"src":"5753:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"5753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"feeProtocol0","nodeType":"VariableDeclaration","scope":2778,"src":"5767:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2772,"name":"uint32","nodeType":"ElementaryTypeName","src":"5767:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"feeProtocol1","nodeType":"VariableDeclaration","scope":2778,"src":"5788:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2774,"name":"uint32","nodeType":"ElementaryTypeName","src":"5788:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5752:56:2"},"returnParameters":{"id":2777,"nodeType":"ParameterList","parameters":[],"src":"5817:0:2"},"scope":2801,"src":"5729:89:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"43db87da","id":2793,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nodeType":"FunctionDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2793,"src":"5861:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2779,"name":"address","nodeType":"ElementaryTypeName","src":"5861:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2793,"src":"5884:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"5884:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":2793,"src":"5912:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2783,"name":"uint128","nodeType":"ElementaryTypeName","src":"5912:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":2793,"src":"5947:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2785,"name":"uint128","nodeType":"ElementaryTypeName","src":"5947:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5850:128:2"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2793,"src":"5997:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2788,"name":"uint128","nodeType":"ElementaryTypeName","src":"5997:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2793,"src":"6014:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2790,"name":"uint128","nodeType":"ElementaryTypeName","src":"6014:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5996:34:2"},"scope":2801,"src":"5826:205:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"11ff5e8d","id":2800,"implemented":false,"kind":"function","modifiers":[],"name":"setLmPool","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2800,"src":"6058:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"6058:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"lmPool","nodeType":"VariableDeclaration","scope":2800,"src":"6072:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"6072:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6057:30:2"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[],"src":"6096:0:2"},"scope":2801,"src":"6039:58:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2802,"src":"251:5849:2"}],"src":"46:6056:2"},"id":2},"contracts/interfaces/IBubblySwapPool.sol":{"ast":{"absolutePath":"contracts/interfaces/IBubblySwapPool.sol","exportedSymbols":{"IBubblySwapPool":[2823],"IBubblySwapPoolActions":[3066],"IBubblySwapPoolDerivedState":[3097],"IBubblySwapPoolEvents":[3220],"IBubblySwapPoolImmutables":[3260],"IBubblySwapPoolOwnerActions":[3292],"IBubblySwapPoolState":[3400]},"id":2824,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2803,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:3"},{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol","file":"./pool/IBubblySwapPoolImmutables.sol","id":2804,"nodeType":"ImportDirective","scope":2824,"sourceUnit":3261,"src":"74:46:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolState.sol","file":"./pool/IBubblySwapPoolState.sol","id":2805,"nodeType":"ImportDirective","scope":2824,"sourceUnit":3401,"src":"122:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol","file":"./pool/IBubblySwapPoolDerivedState.sol","id":2806,"nodeType":"ImportDirective","scope":2824,"sourceUnit":3098,"src":"165:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolActions.sol","file":"./pool/IBubblySwapPoolActions.sol","id":2807,"nodeType":"ImportDirective","scope":2824,"sourceUnit":3067,"src":"215:43:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol","file":"./pool/IBubblySwapPoolOwnerActions.sol","id":2808,"nodeType":"ImportDirective","scope":2824,"sourceUnit":3293,"src":"260:48:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolEvents.sol","file":"./pool/IBubblySwapPoolEvents.sol","id":2809,"nodeType":"ImportDirective","scope":2824,"sourceUnit":3221,"src":"310:42:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2811,"name":"IBubblySwapPoolImmutables","nodeType":"UserDefinedTypeName","referencedDeclaration":3260,"src":"667:25:3","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolImmutables_$3260","typeString":"contract IBubblySwapPoolImmutables"}},"id":2812,"nodeType":"InheritanceSpecifier","src":"667:25:3"},{"baseName":{"id":2813,"name":"IBubblySwapPoolState","nodeType":"UserDefinedTypeName","referencedDeclaration":3400,"src":"699:20:3","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolState_$3400","typeString":"contract IBubblySwapPoolState"}},"id":2814,"nodeType":"InheritanceSpecifier","src":"699:20:3"},{"baseName":{"id":2815,"name":"IBubblySwapPoolDerivedState","nodeType":"UserDefinedTypeName","referencedDeclaration":3097,"src":"726:27:3","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolDerivedState_$3097","typeString":"contract IBubblySwapPoolDerivedState"}},"id":2816,"nodeType":"InheritanceSpecifier","src":"726:27:3"},{"baseName":{"id":2817,"name":"IBubblySwapPoolActions","nodeType":"UserDefinedTypeName","referencedDeclaration":3066,"src":"760:22:3","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolActions_$3066","typeString":"contract IBubblySwapPoolActions"}},"id":2818,"nodeType":"InheritanceSpecifier","src":"760:22:3"},{"baseName":{"id":2819,"name":"IBubblySwapPoolOwnerActions","nodeType":"UserDefinedTypeName","referencedDeclaration":3292,"src":"789:27:3","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolOwnerActions_$3292","typeString":"contract IBubblySwapPoolOwnerActions"}},"id":2820,"nodeType":"InheritanceSpecifier","src":"789:27:3"},{"baseName":{"id":2821,"name":"IBubblySwapPoolEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":3220,"src":"823:21:3","typeDescriptions":{"typeIdentifier":"t_contract$_IBubblySwapPoolEvents_$3220","typeString":"contract IBubblySwapPoolEvents"}},"id":2822,"nodeType":"InheritanceSpecifier","src":"823:21:3"}],"contractDependencies":[3066,3097,3220,3260,3292,3400],"contractKind":"interface","documentation":{"id":2810,"nodeType":"StructuredDocumentation","src":"356:277:3","text":"@title The interface for a PancakeSwap V3 Pool\n @notice A PancakeSwap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":2823,"linearizedBaseContracts":[2823,3220,3292,3066,3097,3400,3260],"name":"IBubblySwapPool","nodeType":"ContractDefinition","nodes":[],"scope":2824,"src":"633:219:3"}],"src":"46:808:3"},"id":3},"contracts/interfaces/IBubblySwapPoolDeployer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBubblySwapPoolDeployer.sol","exportedSymbols":{"IBubblySwapPoolDeployer":[2856]},"id":2857,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2825,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"74:411:4","text":"@title An interface for a contract that is capable of deploying PancakeSwap V3 Pools\n @notice A contract that constructs a pool must implement this to pass arguments to the pool\n @dev This is used to avoid having constructor arguments in the pool contract, which results in the init code hash\n of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain"},"fullyImplemented":false,"id":2856,"linearizedBaseContracts":[2856],"name":"IBubblySwapPoolDeployer","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"526:566:4","text":"@notice Get the parameters to be used in constructing the pool, set transiently during pool creation.\n @dev Called by the pool constructor to fetch the parameters of the pool\n Returns factory The factory address\n Returns token0 The first token of the pool by address sort order\n Returns token1 The second token of the pool by address sort order\n Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n Returns tickSpacing The minimum number of ticks between initialized ticks"},"functionSelector":"89035730","id":2840,"implemented":false,"kind":"function","modifiers":[],"name":"parameters","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[],"src":"1117:2:4"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"factory","nodeType":"VariableDeclaration","scope":2840,"src":"1184:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"1184:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2840,"src":"1214:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2831,"name":"address","nodeType":"ElementaryTypeName","src":"1214:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2840,"src":"1243:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2833,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2836,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2840,"src":"1272:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2835,"name":"uint24","nodeType":"ElementaryTypeName","src":"1272:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":2840,"src":"1297:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2837,"name":"int24","nodeType":"ElementaryTypeName","src":"1297:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1169:156:4"},"scope":2856,"src":"1098:228:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fad5359f","id":2855,"implemented":false,"kind":"function","modifiers":[],"name":"deploy","nodeType":"FunctionDefinition","parameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"factory","nodeType":"VariableDeclaration","scope":2855,"src":"1360:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"1360:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2855,"src":"1386:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"1386:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2855,"src":"1411:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"1411:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2848,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2855,"src":"1436:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2847,"name":"uint24","nodeType":"ElementaryTypeName","src":"1436:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2850,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":2855,"src":"1457:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2849,"name":"int24","nodeType":"ElementaryTypeName","src":"1457:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1349:132:4"},"returnParameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2855,"src":"1500:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1499:14:4"},"scope":2856,"src":"1334:180:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2857,"src":"485:1032:4"}],"src":"46:1473:4"},"id":4},"contracts/interfaces/IERC20Minimal.sol":{"ast":{"absolutePath":"contracts/interfaces/IERC20Minimal.sol","exportedSymbols":{"IERC20Minimal":[2928]},"id":2929,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2858,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:5"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"74:142:5","text":"@title Minimal ERC20 interface for PancakeSwap\n @notice Contains a subset of the full ERC20 interface that is used in PancakeSwap V3"},"fullyImplemented":false,"id":2928,"linearizedBaseContracts":[2928],"name":"IERC20Minimal","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2860,"nodeType":"StructuredDocumentation","src":"247:203:5","text":"@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"},"functionSelector":"70a08231","id":2867,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":2867,"src":"475:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:17:5"},"returnParameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2867,"src":"515:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"514:9:5"},"scope":2928,"src":"456:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"532:336:5","text":"@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"},"functionSelector":"a9059cbb","id":2877,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2877,"src":"892:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2877,"src":"911:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:35:5"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2877,"src":"945:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2874,"name":"bool","nodeType":"ElementaryTypeName","src":"945:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"944:6:5"},"scope":2928,"src":"874:77:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"959:253:5","text":"@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"},"functionSelector":"dd62ed3e","id":2887,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2887,"src":"1237:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2879,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2882,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2887,"src":"1252:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"1252:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:32:5"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2887,"src":"1292:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:9:5"},"scope":2928,"src":"1218:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"1309:346:5","text":"@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"},"functionSelector":"095ea7b3","id":2897,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2897,"src":"1678:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"1678:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2892,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2897,"src":"1695:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1677:33:5"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2897,"src":"1729:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"1729:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1728:6:5"},"scope":2928,"src":"1661:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"1743:375:5","text":"@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"},"functionSelector":"23b872dd","id":2909,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":2909,"src":"2156:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2909,"src":"2181:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2904,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2909,"src":"2209:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"2209:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2145:85:5"},"returnParameters":{"id":2908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2907,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2909,"src":"2249:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2906,"name":"bool","nodeType":"ElementaryTypeName","src":"2249:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2248:6:5"},"scope":2928,"src":"2124:131:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"2263:372:5","text":"@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"},"id":2918,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":2918,"src":"2656:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"2656:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2914,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":2918,"src":"2678:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2913,"name":"address","nodeType":"ElementaryTypeName","src":"2678:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2916,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2918,"src":"2698:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:57:5"},"src":"2641:72:5"},{"anonymous":false,"documentation":{"id":2919,"nodeType":"StructuredDocumentation","src":"2721:324:5","text":"@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"},"id":2927,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":2927,"src":"3066:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2920,"name":"address","nodeType":"ElementaryTypeName","src":"3066:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2923,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2927,"src":"3089:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2922,"name":"address","nodeType":"ElementaryTypeName","src":"3089:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2925,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2927,"src":"3114:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3065:63:5"},"src":"3051:78:5"}],"scope":2929,"src":"216:2916:5"}],"src":"46:3088:5"},"id":5},"contracts/interfaces/callback/IBubblySwapFlashCallback.sol":{"ast":{"absolutePath":"contracts/interfaces/callback/IBubblySwapFlashCallback.sol","exportedSymbols":{"IBubblySwapFlashCallback":[2942]},"id":2943,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2930,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2931,"nodeType":"StructuredDocumentation","src":"74:150:6","text":"@title Callback for IBubblySwapPoolActions#flash\n @notice Any contract that calls IBubblySwapPoolActions#flash must implement this interface"},"fullyImplemented":false,"id":2942,"linearizedBaseContracts":[2942],"name":"IBubblySwapFlashCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"266:606:6","text":"@notice Called to `msg.sender` after transferring to the recipient from IBubblySwapPool#flash.\n @dev In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts.\n The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\n @param fee0 The fee amount in token0 due to the pool by the end of the flash\n @param fee1 The fee amount in token1 due to the pool by the end of the flash\n @param data Any data passed through by the caller via the IBubblySwapPoolActions#flash call"},"functionSelector":"6a9b97f0","id":2941,"implemented":false,"kind":"function","modifiers":[],"name":"BubblySwapFlashCallback","nodeType":"FunctionDefinition","parameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"fee0","nodeType":"VariableDeclaration","scope":2941,"src":"921:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"921:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"fee1","nodeType":"VariableDeclaration","scope":2941,"src":"944:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint256","nodeType":"ElementaryTypeName","src":"944:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2941,"src":"967:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2937,"name":"bytes","nodeType":"ElementaryTypeName","src":"967:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"910:83:6"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[],"src":"1002:0:6"},"scope":2942,"src":"878:125:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2943,"src":"224:782:6"}],"src":"46:962:6"},"id":6},"contracts/interfaces/callback/IBubblySwapMintCallback.sol":{"ast":{"absolutePath":"contracts/interfaces/callback/IBubblySwapMintCallback.sol","exportedSymbols":{"IBubblySwapMintCallback":[2956]},"id":2957,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2944,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:7"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"74:148:7","text":"@title Callback for IBubblySwapPoolActions#mint\n @notice Any contract that calls IBubblySwapPoolActions#mint must implement this interface"},"fullyImplemented":false,"id":2956,"linearizedBaseContracts":[2956],"name":"IBubblySwapMintCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"263:594:7","text":"@notice Called to `msg.sender` after minting liquidity to a position from IBubblySwapPool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity\n @param data Any data passed through by the caller via the IBubblySwapPoolActions#mint call"},"functionSelector":"724ffb81","id":2955,"implemented":false,"kind":"function","modifiers":[],"name":"BubblySwapMintCallback","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"amount0Owed","nodeType":"VariableDeclaration","scope":2955,"src":"905:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2947,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"amount1Owed","nodeType":"VariableDeclaration","scope":2955,"src":"935:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2955,"src":"965:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2951,"name":"bytes","nodeType":"ElementaryTypeName","src":"965:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"894:97:7"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[],"src":"1000:0:7"},"scope":2956,"src":"863:138:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2957,"src":"222:782:7"}],"src":"46:960:7"},"id":7},"contracts/interfaces/callback/IBubblySwapSwapCallback.sol":{"ast":{"absolutePath":"contracts/interfaces/callback/IBubblySwapSwapCallback.sol","exportedSymbols":{"IBubblySwapSwapCallback":[2970]},"id":2971,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2958,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"74:148:8","text":"@title Callback for IBubblySwapPoolActions#swap\n @notice Any contract that calls IBubblySwapPoolActions#swap must implement this interface"},"fullyImplemented":false,"id":2970,"linearizedBaseContracts":[2970],"name":"IBubblySwapSwapCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"263:910:8","text":"@notice Called to `msg.sender` after executing a swap via IBubblySwapPool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IBubblySwapPoolActions#swap call"},"functionSelector":"ce41b35a","id":2969,"implemented":false,"kind":"function","modifiers":[],"name":"BubblySwapSwapCallback","nodeType":"FunctionDefinition","parameters":{"id":2967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"amount0Delta","nodeType":"VariableDeclaration","scope":2969,"src":"1221:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2961,"name":"int256","nodeType":"ElementaryTypeName","src":"1221:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"amount1Delta","nodeType":"VariableDeclaration","scope":2969,"src":"1251:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2963,"name":"int256","nodeType":"ElementaryTypeName","src":"1251:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2969,"src":"1281:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"1281:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1210:97:8"},"returnParameters":{"id":2968,"nodeType":"ParameterList","parameters":[],"src":"1316:0:8"},"scope":2970,"src":"1179:138:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2971,"src":"222:1098:8"}],"src":"46:1276:8"},"id":8},"contracts/interfaces/pool/IBubblySwapPoolActions.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolActions.sol","exportedSymbols":{"IBubblySwapPoolActions":[3066]},"id":3067,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2972,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"74:104:9","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":3066,"linearizedBaseContracts":[3066],"name":"IBubblySwapPoolActions","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2974,"nodeType":"StructuredDocumentation","src":"218:208:9","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":2979,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":2979,"src":"452:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2975,"name":"uint160","nodeType":"ElementaryTypeName","src":"452:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"451:22:9"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[],"src":"482:0:9"},"scope":3066,"src":"432:51:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"491:1041:9","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IBubblySwapMintCallback#BubblySwapMintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":2997,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2997,"src":"1562:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2984,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":2997,"src":"1590:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2983,"name":"int24","nodeType":"ElementaryTypeName","src":"1590:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":2997,"src":"1616:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2985,"name":"int24","nodeType":"ElementaryTypeName","src":"1616:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2988,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":2997,"src":"1642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2987,"name":"uint128","nodeType":"ElementaryTypeName","src":"1642:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":2997,"src":"1667:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2989,"name":"bytes","nodeType":"ElementaryTypeName","src":"1667:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1551:142:9"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2997,"src":"1712:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1712:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2997,"src":"1729:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1711:34:9"},"scope":3066,"src":"1538:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2998,"nodeType":"StructuredDocumentation","src":"1754:1064:9","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":3015,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3015,"src":"2851:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3015,"src":"2879:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3001,"name":"int24","nodeType":"ElementaryTypeName","src":"2879:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3015,"src":"2905:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3003,"name":"int24","nodeType":"ElementaryTypeName","src":"2905:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":3015,"src":"2931:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3005,"name":"uint128","nodeType":"ElementaryTypeName","src":"2931:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":3015,"src":"2966:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3007,"name":"uint128","nodeType":"ElementaryTypeName","src":"2966:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2840:157:9"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3015,"src":"3016:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3010,"name":"uint128","nodeType":"ElementaryTypeName","src":"3016:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3015,"src":"3033:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3012,"name":"uint128","nodeType":"ElementaryTypeName","src":"3033:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3015:34:9"},"scope":3066,"src":"2824:226:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"3058:638:9","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":3029,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3029,"src":"3726:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3017,"name":"int24","nodeType":"ElementaryTypeName","src":"3726:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3029,"src":"3752:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3019,"name":"int24","nodeType":"ElementaryTypeName","src":"3752:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3029,"src":"3778:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3021,"name":"uint128","nodeType":"ElementaryTypeName","src":"3778:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3715:84:9"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3025,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3029,"src":"3818:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3818:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3027,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3029,"src":"3835:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"3835:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3817:34:9"},"scope":3066,"src":"3702:150:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"3860:1026:9","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IBubblySwapSwapCallback#BubblySwapSwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":3047,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3047,"src":"4916:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"4916:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":3047,"src":"4944:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3033,"name":"bool","nodeType":"ElementaryTypeName","src":"4944:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"amountSpecified","nodeType":"VariableDeclaration","scope":3047,"src":"4970:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3035,"name":"int256","nodeType":"ElementaryTypeName","src":"4970:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":3047,"src":"5003:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3037,"name":"uint160","nodeType":"ElementaryTypeName","src":"5003:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3047,"src":"5039:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3039,"name":"bytes","nodeType":"ElementaryTypeName","src":"5039:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4905:160:9"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3047,"src":"5084:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3042,"name":"int256","nodeType":"ElementaryTypeName","src":"5084:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3047,"src":"5100:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3044,"name":"int256","nodeType":"ElementaryTypeName","src":"5100:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"5083:32:9"},"scope":3066,"src":"4892:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"5124:666:9","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IBubblySwapFlashCallback#BubblySwapFlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":3059,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3059,"src":"5821:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"5821:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3059,"src":"5849:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"5849:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3059,"src":"5875:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":3059,"src":"5901:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3055,"name":"bytes","nodeType":"ElementaryTypeName","src":"5901:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5810:117:9"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[],"src":"5936:0:9"},"scope":3066,"src":"5796:141:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"5945:370:9","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":3065,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"observationCardinalityNext","nodeType":"VariableDeclaration","scope":3065,"src":"6365:33:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3061,"name":"uint16","nodeType":"ElementaryTypeName","src":"6365:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6364:35:9"},"returnParameters":{"id":3064,"nodeType":"ParameterList","parameters":[],"src":"6408:0:9"},"scope":3066,"src":"6321:88:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3067,"src":"178:6234:9"}],"src":"46:6368:9"},"id":9},"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol","exportedSymbols":{"IBubblySwapPoolDerivedState":[3097]},"id":3098,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3068,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:10"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3069,"nodeType":"StructuredDocumentation","src":"74:225:10","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":3097,"linearizedBaseContracts":[3097],"name":"IBubblySwapPoolDerivedState","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"344:1054:10","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":3082,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"secondsAgos","nodeType":"VariableDeclaration","scope":3082,"src":"1421:29:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":3071,"name":"uint32","nodeType":"ElementaryTypeName","src":"1421:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3072,"nodeType":"ArrayTypeName","src":"1421:8:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1420:31:10"},"returnParameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3077,"mutability":"mutable","name":"tickCumulatives","nodeType":"VariableDeclaration","scope":3082,"src":"1502:30:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":3075,"name":"int56","nodeType":"ElementaryTypeName","src":"1502:5:10","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":3076,"nodeType":"ArrayTypeName","src":"1502:7:10","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":3080,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nodeType":"VariableDeclaration","scope":3082,"src":"1534:51:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":3078,"name":"uint160","nodeType":"ElementaryTypeName","src":"1534:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":3079,"nodeType":"ArrayTypeName","src":"1534:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1501:85:10"},"scope":3097,"src":"1404:183:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3083,"nodeType":"StructuredDocumentation","src":"1595:779:10","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":3096,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nodeType":"FunctionDefinition","parameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3096,"src":"2415:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3084,"name":"int24","nodeType":"ElementaryTypeName","src":"2415:5:10","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3096,"src":"2432:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3086,"name":"int24","nodeType":"ElementaryTypeName","src":"2432:5:10","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2414:34:10"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"tickCumulativeInside","nodeType":"VariableDeclaration","scope":3096,"src":"2513:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3089,"name":"int56","nodeType":"ElementaryTypeName","src":"2513:5:10","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nodeType":"VariableDeclaration","scope":3096,"src":"2554:37:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3091,"name":"uint160","nodeType":"ElementaryTypeName","src":"2554:7:10","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"secondsInside","nodeType":"VariableDeclaration","scope":3096,"src":"2606:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3093,"name":"uint32","nodeType":"ElementaryTypeName","src":"2606:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2498:139:10"},"scope":3097,"src":"2380:258:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3098,"src":"299:2342:10"}],"src":"46:2597:10"},"id":10},"contracts/interfaces/pool/IBubblySwapPoolEvents.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolEvents.sol","exportedSymbols":{"IBubblySwapPoolEvents":[3220]},"id":3221,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3099,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3100,"nodeType":"StructuredDocumentation","src":"74:90:11","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":3220,"linearizedBaseContracts":[3220],"name":"IBubblySwapPoolEvents","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"203:347:11","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"id":3107,"name":"Initialize","nodeType":"EventDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":3107,"src":"573:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3102,"name":"uint160","nodeType":"ElementaryTypeName","src":"573:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3105,"indexed":false,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":3107,"src":"595:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3104,"name":"int24","nodeType":"ElementaryTypeName","src":"595:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"572:34:11"},"src":"556:51:11"},{"anonymous":false,"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"615:558:11","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"id":3124,"name":"Mint","nodeType":"EventDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"indexed":false,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3124,"src":"1200:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3124,"src":"1225:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"1225:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3114,"indexed":true,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3124,"src":"1257:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3113,"name":"int24","nodeType":"ElementaryTypeName","src":"1257:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3116,"indexed":true,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3124,"src":"1291:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3115,"name":"int24","nodeType":"ElementaryTypeName","src":"1291:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3118,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3124,"src":"1325:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3117,"name":"uint128","nodeType":"ElementaryTypeName","src":"1325:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3120,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3124,"src":"1350:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3122,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3124,"src":"1376:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1376:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1189:209:11"},"src":"1179:220:11"},{"anonymous":false,"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"1407:499:11","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"id":3139,"name":"Collect","nodeType":"EventDefinition","parameters":{"id":3138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3139,"src":"1936:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"1936:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"indexed":false,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3139,"src":"1968:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3128,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3131,"indexed":true,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3139,"src":"1996:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3130,"name":"int24","nodeType":"ElementaryTypeName","src":"1996:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3133,"indexed":true,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3139,"src":"2030:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3132,"name":"int24","nodeType":"ElementaryTypeName","src":"2030:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3135,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3139,"src":"2064:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3134,"name":"uint128","nodeType":"ElementaryTypeName","src":"2064:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3137,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3139,"src":"2090:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3136,"name":"uint128","nodeType":"ElementaryTypeName","src":"2090:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1925:187:11"},"src":"1912:201:11"},{"anonymous":false,"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"2121:530:11","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"id":3154,"name":"Burn","nodeType":"EventDefinition","parameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":3154,"src":"2678:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"2678:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3144,"indexed":true,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3154,"src":"2710:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3143,"name":"int24","nodeType":"ElementaryTypeName","src":"2710:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3146,"indexed":true,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3154,"src":"2744:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3145,"name":"int24","nodeType":"ElementaryTypeName","src":"2744:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3148,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3154,"src":"2778:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3147,"name":"uint128","nodeType":"ElementaryTypeName","src":"2778:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3150,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3154,"src":"2803:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2803:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3152,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3154,"src":"2829:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2829:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:184:11"},"src":"2657:195:11"},{"anonymous":false,"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"2860:755:11","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap\n @param protocolFeesToken0 The protocol fee of token0 in the swap\n @param protocolFeesToken1 The protocol fee of token1 in the swap"},"id":3175,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":3174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3175,"src":"3642:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3156,"name":"address","nodeType":"ElementaryTypeName","src":"3642:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3159,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3175,"src":"3675:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"3675:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3161,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3175,"src":"3711:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3160,"name":"int256","nodeType":"ElementaryTypeName","src":"3711:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3163,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3175,"src":"3736:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3162,"name":"int256","nodeType":"ElementaryTypeName","src":"3736:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3165,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":3175,"src":"3761:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3164,"name":"uint160","nodeType":"ElementaryTypeName","src":"3761:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3167,"indexed":false,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":3175,"src":"3792:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3166,"name":"uint128","nodeType":"ElementaryTypeName","src":"3792:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3169,"indexed":false,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":3175,"src":"3820:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3168,"name":"int24","nodeType":"ElementaryTypeName","src":"3820:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3171,"indexed":false,"mutability":"mutable","name":"protocolFeesToken0","nodeType":"VariableDeclaration","scope":3175,"src":"3841:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3170,"name":"uint128","nodeType":"ElementaryTypeName","src":"3841:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3173,"indexed":false,"mutability":"mutable","name":"protocolFeesToken1","nodeType":"VariableDeclaration","scope":3175,"src":"3878:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3172,"name":"uint128","nodeType":"ElementaryTypeName","src":"3878:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3631:280:11"},"src":"3621:291:11"},{"anonymous":false,"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"3920:568:11","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"id":3190,"name":"Flash","nodeType":"EventDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3190,"src":"4516:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3177,"name":"address","nodeType":"ElementaryTypeName","src":"4516:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3180,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3190,"src":"4549:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3179,"name":"address","nodeType":"ElementaryTypeName","src":"4549:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3182,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3190,"src":"4585:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3190,"src":"4611:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3186,"indexed":false,"mutability":"mutable","name":"paid0","nodeType":"VariableDeclaration","scope":3190,"src":"4637:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3188,"indexed":false,"mutability":"mutable","name":"paid1","nodeType":"VariableDeclaration","scope":3190,"src":"4661:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"4661:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4505:176:11"},"src":"4494:188:11"},{"anonymous":false,"documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"4690:455:11","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"id":3197,"name":"IncreaseObservationCardinalityNext","nodeType":"EventDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nodeType":"VariableDeclaration","scope":3197,"src":"5202:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3192,"name":"uint16","nodeType":"ElementaryTypeName","src":"5202:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3195,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nodeType":"VariableDeclaration","scope":3197,"src":"5249:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3194,"name":"uint16","nodeType":"ElementaryTypeName","src":"5249:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5191:101:11"},"src":"5151:142:11"},{"anonymous":false,"documentation":{"id":3198,"nodeType":"StructuredDocumentation","src":"5301:374:11","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"id":3208,"name":"SetFeeProtocol","nodeType":"EventDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3200,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nodeType":"VariableDeclaration","scope":3208,"src":"5712:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3199,"name":"uint32","nodeType":"ElementaryTypeName","src":"5712:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3202,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nodeType":"VariableDeclaration","scope":3208,"src":"5745:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3201,"name":"uint32","nodeType":"ElementaryTypeName","src":"5745:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3204,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nodeType":"VariableDeclaration","scope":3208,"src":"5778:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3203,"name":"uint32","nodeType":"ElementaryTypeName","src":"5778:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3206,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nodeType":"VariableDeclaration","scope":3208,"src":"5811:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3205,"name":"uint32","nodeType":"ElementaryTypeName","src":"5811:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5701:139:11"},"src":"5681:160:11"},{"anonymous":false,"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"5849:388:11","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"id":3219,"name":"CollectProtocol","nodeType":"EventDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3219,"src":"6265:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3210,"name":"address","nodeType":"ElementaryTypeName","src":"6265:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3213,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3219,"src":"6289:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3215,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3219,"src":"6316:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3214,"name":"uint128","nodeType":"ElementaryTypeName","src":"6316:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3217,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3219,"src":"6333:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3216,"name":"uint128","nodeType":"ElementaryTypeName","src":"6333:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"6264:85:11"},"src":"6243:107:11"}],"scope":3221,"src":"164:6189:11"}],"src":"46:6309:11"},"id":11},"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol","exportedSymbols":{"IBubblySwapPoolImmutables":[3260]},"id":3261,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3222,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:12"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"74:155:12","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":3260,"linearizedBaseContracts":[3260],"name":"IBubblySwapPoolImmutables","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"272:140:12","text":"@notice The contract that deployed the pool, which must adhere to the IBubblySwapFactory interface\n @return The contract address"},"functionSelector":"c45a0155","id":3229,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nodeType":"FunctionDefinition","parameters":{"id":3225,"nodeType":"ParameterList","parameters":[],"src":"434:2:12"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3229,"src":"460:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3226,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:12"},"scope":3260,"src":"418:51:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3230,"nodeType":"StructuredDocumentation","src":"477:114:12","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":3235,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[],"src":"612:2:12"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3235,"src":"638:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"637:9:12"},"scope":3260,"src":"597:50:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"655:115:12","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":3241,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[],"src":"791:2:12"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3241,"src":"817:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"816:9:12"},"scope":3260,"src":"776:50:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"834:85:12","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":3247,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[],"src":"937:2:12"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3247,"src":"963:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3244,"name":"uint24","nodeType":"ElementaryTypeName","src":"963:6:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"962:8:12"},"scope":3260,"src":"925:46:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"979:362:12","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":3253,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[],"src":"1367:2:12"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3253,"src":"1393:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3250,"name":"int24","nodeType":"ElementaryTypeName","src":"1393:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1392:7:12"},"scope":3260,"src":"1347:53:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3254,"nodeType":"StructuredDocumentation","src":"1408:366:12","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":3259,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[],"src":"1808:2:12"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3259,"src":"1834:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3256,"name":"uint128","nodeType":"ElementaryTypeName","src":"1834:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1833:9:12"},"scope":3260,"src":"1780:63:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3261,"src":"229:1617:12"}],"src":"46:1802:12"},"id":12},"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol","exportedSymbols":{"IBubblySwapPoolOwnerActions":[3292]},"id":3293,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3262,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"74:118:13","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":3292,"linearizedBaseContracts":[3292],"name":"IBubblySwapPoolOwnerActions","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"237:207:13","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"b0d0d211","id":3271,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nodeType":"FunctionDefinition","parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"feeProtocol0","nodeType":"VariableDeclaration","scope":3271,"src":"474:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3265,"name":"uint32","nodeType":"ElementaryTypeName","src":"474:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"feeProtocol1","nodeType":"VariableDeclaration","scope":3271,"src":"495:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3267,"name":"uint32","nodeType":"ElementaryTypeName","src":"495:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"473:42:13"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[],"src":"524:0:13"},"scope":3292,"src":"450:75:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3272,"nodeType":"StructuredDocumentation","src":"533:488:13","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":3285,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3285,"src":"1062:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"1062:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":3285,"src":"1090:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3275,"name":"uint128","nodeType":"ElementaryTypeName","src":"1090:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":3285,"src":"1125:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3277,"name":"uint128","nodeType":"ElementaryTypeName","src":"1125:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1051:105:13"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3285,"src":"1175:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3280,"name":"uint128","nodeType":"ElementaryTypeName","src":"1175:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3285,"src":"1192:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3282,"name":"uint128","nodeType":"ElementaryTypeName","src":"1192:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1174:34:13"},"scope":3292,"src":"1027:182:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3286,"nodeType":"StructuredDocumentation","src":"1217:54:13","text":"@notice Set the LM pool to enable liquidity mining"},"functionSelector":"cc7e7fa2","id":3291,"implemented":false,"kind":"function","modifiers":[],"name":"setLmPool","nodeType":"FunctionDefinition","parameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3288,"mutability":"mutable","name":"lmPool","nodeType":"VariableDeclaration","scope":3291,"src":"1296:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3287,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1295:16:13"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[],"src":"1320:0:13"},"scope":3292,"src":"1277:44:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3293,"src":"192:1132:13"}],"src":"46:1280:13"},"id":13},"contracts/interfaces/pool/IBubblySwapPoolState.sol":{"ast":{"absolutePath":"contracts/interfaces/pool/IBubblySwapPoolState.sol","exportedSymbols":{"IBubblySwapPoolState":[3400]},"id":3401,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3294,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"74:172:14","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":3400,"linearizedBaseContracts":[3400],"name":"IBubblySwapPoolState","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3296,"nodeType":"StructuredDocumentation","src":"284:1152:14","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":3313,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[],"src":"1456:2:14"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":3313,"src":"1523:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3298,"name":"uint160","nodeType":"ElementaryTypeName","src":"1523:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":3313,"src":"1558:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3300,"name":"int24","nodeType":"ElementaryTypeName","src":"1558:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3303,"mutability":"mutable","name":"observationIndex","nodeType":"VariableDeclaration","scope":3313,"src":"1583:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3302,"name":"uint16","nodeType":"ElementaryTypeName","src":"1583:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"observationCardinality","nodeType":"VariableDeclaration","scope":3313,"src":"1621:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3304,"name":"uint16","nodeType":"ElementaryTypeName","src":"1621:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"observationCardinalityNext","nodeType":"VariableDeclaration","scope":3313,"src":"1665:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3306,"name":"uint16","nodeType":"ElementaryTypeName","src":"1665:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"feeProtocol","nodeType":"VariableDeclaration","scope":3313,"src":"1713:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3308,"name":"uint32","nodeType":"ElementaryTypeName","src":"1713:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"unlocked","nodeType":"VariableDeclaration","scope":3313,"src":"1746:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3310,"name":"bool","nodeType":"ElementaryTypeName","src":"1746:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1508:262:14"},"scope":3400,"src":"1442:329:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3314,"nodeType":"StructuredDocumentation","src":"1779:169:14","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":3319,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[],"src":"1983:2:14"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3319,"src":"2009:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2008:9:14"},"scope":3400,"src":"1954:64:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"2026:169:14","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":3325,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[],"src":"2230:2:14"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3325,"src":"2256:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2255:9:14"},"scope":3400,"src":"2201:64:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3326,"nodeType":"StructuredDocumentation","src":"2273:148:14","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":3333,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[],"src":"2448:2:14"},"returnParameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":3333,"src":"2474:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3328,"name":"uint128","nodeType":"ElementaryTypeName","src":"2474:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":3333,"src":"2490:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3330,"name":"uint128","nodeType":"ElementaryTypeName","src":"2490:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2473:32:14"},"scope":3400,"src":"2427:79:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"2514:151:14","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":3339,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[],"src":"2689:2:14"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3339,"src":"2715:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3336,"name":"uint128","nodeType":"ElementaryTypeName","src":"2715:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2714:9:14"},"scope":3400,"src":"2671:53:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"2732:1257:14","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":3361,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":3361,"src":"4010:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3341,"name":"int24","nodeType":"ElementaryTypeName","src":"4010:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"4009:12:14"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"liquidityGross","nodeType":"VariableDeclaration","scope":3361,"src":"4086:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3344,"name":"uint128","nodeType":"ElementaryTypeName","src":"4086:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"liquidityNet","nodeType":"VariableDeclaration","scope":3361,"src":"4123:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3346,"name":"int128","nodeType":"ElementaryTypeName","src":"4123:6:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"feeGrowthOutside0X128","nodeType":"VariableDeclaration","scope":3361,"src":"4157:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4157:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3351,"mutability":"mutable","name":"feeGrowthOutside1X128","nodeType":"VariableDeclaration","scope":3361,"src":"4201:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4201:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"tickCumulativeOutside","nodeType":"VariableDeclaration","scope":3361,"src":"4245:27:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3352,"name":"int56","nodeType":"ElementaryTypeName","src":"4245:5:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nodeType":"VariableDeclaration","scope":3361,"src":"4287:38:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3354,"name":"uint160","nodeType":"ElementaryTypeName","src":"4287:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3357,"mutability":"mutable","name":"secondsOutside","nodeType":"VariableDeclaration","scope":3361,"src":"4340:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3356,"name":"uint32","nodeType":"ElementaryTypeName","src":"4340:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3359,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":3361,"src":"4376:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3358,"name":"bool","nodeType":"ElementaryTypeName","src":"4376:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4071:332:14"},"scope":3400,"src":"3995:409:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"4412:99:14","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":3369,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nodeType":"FunctionDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"wordPosition","nodeType":"VariableDeclaration","scope":3369,"src":"4537:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":3363,"name":"int16","nodeType":"ElementaryTypeName","src":"4537:5:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4536:20:14"},"returnParameters":{"id":3368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3369,"src":"4580:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4580:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4579:9:14"},"scope":3400,"src":"4517:72:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3370,"nodeType":"StructuredDocumentation","src":"4597:706:14","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":3385,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3372,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":3385,"src":"5328:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5328:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5327:13:14"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"_liquidity","nodeType":"VariableDeclaration","scope":3385,"src":"5405:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3374,"name":"uint128","nodeType":"ElementaryTypeName","src":"5405:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"feeGrowthInside0LastX128","nodeType":"VariableDeclaration","scope":3385,"src":"5438:32:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"feeGrowthInside1LastX128","nodeType":"VariableDeclaration","scope":3385,"src":"5485:32:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"5485:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"tokensOwed0","nodeType":"VariableDeclaration","scope":3385,"src":"5532:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3380,"name":"uint128","nodeType":"ElementaryTypeName","src":"5532:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"tokensOwed1","nodeType":"VariableDeclaration","scope":3385,"src":"5566:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3382,"name":"uint128","nodeType":"ElementaryTypeName","src":"5566:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5390:206:14"},"scope":3400,"src":"5309:288:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"5605:756:14","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":3399,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":3399,"src":"6389:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6388:15:14"},"returnParameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"blockTimestamp","nodeType":"VariableDeclaration","scope":3399,"src":"6468:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3390,"name":"uint32","nodeType":"ElementaryTypeName","src":"6468:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3393,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":3399,"src":"6504:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":3392,"name":"int56","nodeType":"ElementaryTypeName","src":"6504:5:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":3395,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":3399,"src":"6539:41:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3394,"name":"uint160","nodeType":"ElementaryTypeName","src":"6539:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":3399,"src":"6595:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3396,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6453:169:14"},"scope":3400,"src":"6367:256:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3401,"src":"246:6380:14"}],"src":"46:6582:14"},"id":14},"contracts/libraries/BitMath.sol":{"ast":{"absolutePath":"contracts/libraries/BitMath.sol","exportedSymbols":{"BitMath":[3679]},"id":3680,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3402,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"74:118:15","text":"@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"},"fullyImplemented":true,"id":3679,"linearizedBaseContracts":[3679],"name":"BitMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3516,"nodeType":"Block","src":"754:692:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3412,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"773:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"765:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"765:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3416,"nodeType":"ExpressionStatement","src":"765:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"796:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"801:35:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"src":"796:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3429,"nodeType":"IfStatement","src":"792:105:15","trueBody":{"id":3428,"nodeType":"Block","src":"838:59:15","statements":[{"expression":{"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3420,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"853:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"859:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"853:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3423,"nodeType":"ExpressionStatement","src":"853:9:15"},{"expression":{"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3424,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"877:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"882:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"877:8:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3427,"nodeType":"ExpressionStatement","src":"877:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3430,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"911:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030303030303030303030303030","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"916:19:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"value":"0x10000000000000000"},"src":"911:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3442,"nodeType":"IfStatement","src":"907:87:15","trueBody":{"id":3441,"nodeType":"Block","src":"937:57:15","statements":[{"expression":{"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3433,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"952:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"958:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"952:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3436,"nodeType":"ExpressionStatement","src":"952:8:15"},{"expression":{"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3437,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"975:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"980:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"975:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3440,"nodeType":"ExpressionStatement","src":"975:7:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1008:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030303030303030","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1013:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"value":"0x100000000"},"src":"1008:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"IfStatement","src":"1004:79:15","trueBody":{"id":3454,"nodeType":"Block","src":"1026:57:15","statements":[{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1041:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1047:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1041:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3449,"nodeType":"ExpressionStatement","src":"1041:8:15"},{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3450,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1064:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1069:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1064:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3453,"nodeType":"ExpressionStatement","src":"1064:7:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1097:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130303030","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:7:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"1097:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3468,"nodeType":"IfStatement","src":"1093:75:15","trueBody":{"id":3467,"nodeType":"Block","src":"1111:57:15","statements":[{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1126:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1132:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"1126:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"1126:8:15"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1149:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1154:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"1149:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3466,"nodeType":"ExpressionStatement","src":"1149:7:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1182:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3078313030","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1187:5:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"1182:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3481,"nodeType":"IfStatement","src":"1178:71:15","trueBody":{"id":3480,"nodeType":"Block","src":"1194:55:15","statements":[{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3472,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1209:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1215:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1209:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ExpressionStatement","src":"1209:7:15"},{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3476,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1231:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1231:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3479,"nodeType":"ExpressionStatement","src":"1231:6:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1263:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783130","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1268:4:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"1263:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3494,"nodeType":"IfStatement","src":"1259:70:15","trueBody":{"id":3493,"nodeType":"Block","src":"1274:55:15","statements":[{"expression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3485,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1289:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1295:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1289:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ExpressionStatement","src":"1289:7:15"},{"expression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3489,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1311:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1311:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3492,"nodeType":"ExpressionStatement","src":"1311:6:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1343:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307834","id":3496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1348:3:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"1343:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3507,"nodeType":"IfStatement","src":"1339:69:15","trueBody":{"id":3506,"nodeType":"Block","src":"1353:55:15","statements":[{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3498,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1368:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1374:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1368:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3501,"nodeType":"ExpressionStatement","src":"1368:7:15"},{"expression":{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3502,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1390:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1395:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1390:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3505,"nodeType":"ExpressionStatement","src":"1390:6:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1422:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"307832","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1427:3:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"1422:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3515,"nodeType":"IfStatement","src":"1418:20:15","trueBody":{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3511,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"1432:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1437:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1432:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3514,"nodeType":"ExpressionStatement","src":"1432:6:15"}}]},"documentation":{"id":3404,"nodeType":"StructuredDocumentation","src":"215:462:15","text":"@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"mostSignificantBit","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3517,"src":"711:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"710:11:15"},"returnParameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3409,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":3517,"src":"745:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3408,"name":"uint8","nodeType":"ElementaryTypeName","src":"745:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"744:9:15"},"scope":3679,"src":"683:763:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3677,"nodeType":"Block","src":"2017:862:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3526,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2036:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2040:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2036:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2028:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2028:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3530,"nodeType":"ExpressionStatement","src":"2028:14:15"},{"expression":{"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3531,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2055:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"323535","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2059:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2055:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3534,"nodeType":"ExpressionStatement","src":"2055:7:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2077:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"expression":{"arguments":[{"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2086:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3537,"name":"uint128","nodeType":"ElementaryTypeName","src":"2086:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2081:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2081:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2081:17:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2077:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2101:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2077:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3553,"nodeType":"Block","src":"2145:36:15","statements":[{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2160:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2166:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2160:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ExpressionStatement","src":"2160:9:15"}]},"id":3554,"nodeType":"IfStatement","src":"2073:108:15","trueBody":{"id":3548,"nodeType":"Block","src":"2104:35:15","statements":[{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3544,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2119:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"313238","id":3545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2124:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2119:8:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3547,"nodeType":"ExpressionStatement","src":"2119:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2195:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"expression":{"arguments":[{"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3557,"name":"uint64","nodeType":"ElementaryTypeName","src":"2204:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3556,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2199:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2199:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2199:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2195:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2218:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2195:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3573,"nodeType":"Block","src":"2261:35:15","statements":[{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3569,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2276:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2282:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2276:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"2276:8:15"}]},"id":3574,"nodeType":"IfStatement","src":"2191:105:15","trueBody":{"id":3568,"nodeType":"Block","src":"2221:34:15","statements":[{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3564,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2236:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3634","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2236:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3567,"nodeType":"ExpressionStatement","src":"2236:7:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2310:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"expression":{"arguments":[{"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2319:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3577,"name":"uint32","nodeType":"ElementaryTypeName","src":"2319:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2314:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2314:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2314:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2310:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2333:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2310:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3593,"nodeType":"Block","src":"2376:35:15","statements":[{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3589,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2391:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2397:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2391:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3592,"nodeType":"ExpressionStatement","src":"2391:8:15"}]},"id":3594,"nodeType":"IfStatement","src":"2306:105:15","trueBody":{"id":3588,"nodeType":"Block","src":"2336:34:15","statements":[{"expression":{"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3584,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2351:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2356:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2351:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3587,"nodeType":"ExpressionStatement","src":"2351:7:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2425:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"expression":{"arguments":[{"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2434:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3597,"name":"uint16","nodeType":"ElementaryTypeName","src":"2434:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2429:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2429:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2429:16:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"2425:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2448:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2425:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3613,"nodeType":"Block","src":"2491:35:15","statements":[{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3609,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2506:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2512:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"2506:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"2506:8:15"}]},"id":3614,"nodeType":"IfStatement","src":"2421:105:15","trueBody":{"id":3608,"nodeType":"Block","src":"2451:34:15","statements":[{"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3604,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2466:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3136","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2471:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"2466:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3607,"nodeType":"ExpressionStatement","src":"2466:7:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3615,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2540:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"expression":{"arguments":[{"id":3618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2549:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3617,"name":"uint8","nodeType":"ElementaryTypeName","src":"2549:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3616,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2544:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2544:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2544:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2540:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2540:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3633,"nodeType":"Block","src":"2604:34:15","statements":[{"expression":{"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3629,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2619:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2625:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"2619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3632,"nodeType":"ExpressionStatement","src":"2619:7:15"}]},"id":3634,"nodeType":"IfStatement","src":"2536:102:15","trueBody":{"id":3628,"nodeType":"Block","src":"2565:33:15","statements":[{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3624,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2580:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"38","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"2580:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3627,"nodeType":"ExpressionStatement","src":"2580:6:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2652:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2656:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2652:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2662:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2652:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3649,"nodeType":"Block","src":"2704:34:15","statements":[{"expression":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3645,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2719:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2725:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ExpressionStatement","src":"2719:7:15"}]},"id":3650,"nodeType":"IfStatement","src":"2648:90:15","trueBody":{"id":3644,"nodeType":"Block","src":"2665:33:15","statements":[{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3640,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2680:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"34","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2685:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2680:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3643,"nodeType":"ExpressionStatement","src":"2680:6:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2752:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307833","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2756:3:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"0x3"},"src":"2752:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2752:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3665,"nodeType":"Block","src":"2804:34:15","statements":[{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2819:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2819:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"2819:7:15"}]},"id":3666,"nodeType":"IfStatement","src":"2748:90:15","trueBody":{"id":3660,"nodeType":"Block","src":"2765:33:15","statements":[{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3656,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2780:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"32","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2785:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3659,"nodeType":"ExpressionStatement","src":"2780:6:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2852:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2856:3:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"2852:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2862:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2852:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3676,"nodeType":"IfStatement","src":"2848:23:15","trueBody":{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"2865:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2865:6:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3675,"nodeType":"ExpressionStatement","src":"2865:6:15"}}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"1454:485:15","text":"@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"},"id":3678,"implemented":true,"kind":"function","modifiers":[],"name":"leastSignificantBit","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3678,"src":"1974:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1973:11:15"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":3678,"src":"2008:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3522,"name":"uint8","nodeType":"ElementaryTypeName","src":"2008:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2007:9:15"},"scope":3679,"src":"1945:934:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3680,"src":"192:2690:15"}],"src":"46:2838:15"},"id":15},"contracts/libraries/FixedPoint128.sol":{"ast":{"absolutePath":"contracts/libraries/FixedPoint128.sol","exportedSymbols":{"FixedPoint128":[3686]},"id":3687,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3681,"literals":["solidity",">=","0.4",".0"],"nodeType":"PragmaDirective","src":"46:24:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"74:142:16","text":"@title FixedPoint128\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)"},"fullyImplemented":true,"id":3686,"linearizedBaseContracts":[3686],"name":"FixedPoint128","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3685,"mutability":"constant","name":"Q128","nodeType":"VariableDeclaration","scope":3686,"src":"245:68:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"245:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"278:35:16","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"visibility":"internal"}],"scope":3687,"src":"216:101:16"}],"src":"46:273:16"},"id":16},"contracts/libraries/FixedPoint96.sol":{"ast":{"absolutePath":"contracts/libraries/FixedPoint96.sol","exportedSymbols":{"FixedPoint96":[3696]},"id":3697,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3688,"literals":["solidity",">=","0.4",".0"],"nodeType":"PragmaDirective","src":"46:24:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"74:177:17","text":"@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"},"fullyImplemented":true,"id":3696,"linearizedBaseContracts":[3696],"name":"FixedPoint96","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3692,"mutability":"constant","name":"RESOLUTION","nodeType":"VariableDeclaration","scope":3696,"src":"279:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3690,"name":"uint8","nodeType":"ElementaryTypeName","src":"279:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3936","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"316:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"constant":true,"id":3695,"mutability":"constant","name":"Q96","nodeType":"VariableDeclaration","scope":3696,"src":"325:59:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"325:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307831303030303030303030303030303030303030303030303030","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"357:27:17","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"value":"0x1000000000000000000000000"},"visibility":"internal"}],"scope":3697,"src":"251:137:17"}],"src":"46:344:17"},"id":17},"contracts/libraries/FullMath.sol":{"ast":{"absolutePath":"contracts/libraries/FullMath.sol","exportedSymbols":{"FullMath":[3869]},"id":3870,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3698,"literals":["solidity",">=","0.4",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"46:31:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3699,"nodeType":"StructuredDocumentation","src":"81:300:18","text":"@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"},"fullyImplemented":true,"id":3869,"linearizedBaseContracts":[3869],"name":"FullMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3824,"nodeType":"Block","src":"907:3736:18","statements":[{"assignments":[3712],"declarations":[{"constant":false,"id":3712,"mutability":"mutable","name":"prod0","nodeType":"VariableDeclaration","scope":3824,"src":"1226:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"nodeType":"VariableDeclarationStatement","src":"1226:13:18"},{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"prod1","nodeType":"VariableDeclaration","scope":3824,"src":"1295:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1295:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3716,"nodeType":"VariableDeclarationStatement","src":"1295:13:18"},{"AST":{"nodeType":"YulBlock","src":"1372:145:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1387:30:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1404:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"1407:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1414:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1410:3:18"},"nodeType":"YulFunctionCall","src":"1410:6:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1397:6:18"},"nodeType":"YulFunctionCall","src":"1397:20:18"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1391:2:18","type":""}]},{"nodeType":"YulAssignment","src":"1431:18:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1444:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"1447:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1440:3:18"},"nodeType":"YulFunctionCall","src":"1440:9:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"1431:5:18"}]},{"nodeType":"YulAssignment","src":"1463:43:18","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1480:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"1484:5:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1476:3:18"},"nodeType":"YulFunctionCall","src":"1476:14:18"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1495:2:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"1499:5:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1492:2:18"},"nodeType":"YulFunctionCall","src":"1492:13:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1472:3:18"},"nodeType":"YulFunctionCall","src":"1472:34:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"1463:5:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3702,"isOffset":false,"isSlot":false,"src":"1404:1:18","valueSize":1},{"declaration":3702,"isOffset":false,"isSlot":false,"src":"1444:1:18","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"1407:1:18","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"1447:1:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"1431:5:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"1484:5:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"1499:5:18","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"1463:5:18","valueSize":1}],"id":3717,"nodeType":"InlineAssembly","src":"1363:154:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"1592:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1601:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1592:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"1588:185:18","trueBody":{"id":3730,"nodeType":"Block","src":"1604:169:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3722,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"1627:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1641:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1627:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1619:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1619:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3726,"nodeType":"ExpressionStatement","src":"1619:24:18"},{"AST":{"nodeType":"YulBlock","src":"1667:67:18","statements":[{"nodeType":"YulAssignment","src":"1686:33:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"1700:5:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"1707:11:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1696:3:18"},"nodeType":"YulFunctionCall","src":"1696:23:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1686:6:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3706,"isOffset":false,"isSlot":false,"src":"1707:11:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"1700:5:18","valueSize":1},{"declaration":3709,"isOffset":false,"isSlot":false,"src":"1686:6:18","valueSize":1}],"id":3727,"nodeType":"InlineAssembly","src":"1658:76:18"},{"expression":{"id":3728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"1755:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3710,"id":3729,"nodeType":"Return","src":"1748:13:18"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"1890:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3734,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"1904:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1890:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3732,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1882:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1882:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3737,"nodeType":"ExpressionStatement","src":"1882:28:18"},{"assignments":[3739],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"remainder","nodeType":"VariableDeclaration","scope":3824,"src":"2195:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3740,"nodeType":"VariableDeclarationStatement","src":"2195:17:18"},{"AST":{"nodeType":"YulBlock","src":"2232:64:18","statements":[{"nodeType":"YulAssignment","src":"2247:38:18","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2267:1:18"},{"name":"b","nodeType":"YulIdentifier","src":"2270:1:18"},{"name":"denominator","nodeType":"YulIdentifier","src":"2273:11:18"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2260:6:18"},"nodeType":"YulFunctionCall","src":"2260:25:18"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"2247:9:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3702,"isOffset":false,"isSlot":false,"src":"2267:1:18","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"2270:1:18","valueSize":1},{"declaration":3706,"isOffset":false,"isSlot":false,"src":"2273:11:18","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"2247:9:18","valueSize":1}],"id":3741,"nodeType":"InlineAssembly","src":"2223:73:18"},{"AST":{"nodeType":"YulBlock","src":"2371:111:18","statements":[{"nodeType":"YulAssignment","src":"2386:41:18","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"2399:5:18"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"2409:9:18"},{"name":"prod0","nodeType":"YulIdentifier","src":"2420:5:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2406:2:18"},"nodeType":"YulFunctionCall","src":"2406:20:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2395:3:18"},"nodeType":"YulFunctionCall","src":"2395:32:18"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2386:5:18"}]},{"nodeType":"YulAssignment","src":"2441:30:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"2454:5:18"},{"name":"remainder","nodeType":"YulIdentifier","src":"2461:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2450:3:18"},"nodeType":"YulFunctionCall","src":"2450:21:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2441:5:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3712,"isOffset":false,"isSlot":false,"src":"2420:5:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"2441:5:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"2454:5:18","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"2386:5:18","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"2399:5:18","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"2409:9:18","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"2461:9:18","valueSize":1}],"id":3742,"nodeType":"InlineAssembly","src":"2362:120:18"},{"assignments":[3744],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"twos","nodeType":"VariableDeclaration","scope":3824,"src":"2636:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2636:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2651:12:18","subExpression":{"id":3745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"2652:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3747,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"2666:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2651:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2636:41:18"},{"AST":{"nodeType":"YulBlock","src":"2744:63:18","statements":[{"nodeType":"YulAssignment","src":"2759:37:18","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"2778:11:18"},{"name":"twos","nodeType":"YulIdentifier","src":"2791:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2774:3:18"},"nodeType":"YulFunctionCall","src":"2774:22:18"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"2759:11:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3706,"isOffset":false,"isSlot":false,"src":"2759:11:18","valueSize":1},{"declaration":3706,"isOffset":false,"isSlot":false,"src":"2778:11:18","valueSize":1},{"declaration":3744,"isOffset":false,"isSlot":false,"src":"2791:4:18","valueSize":1}],"id":3750,"nodeType":"InlineAssembly","src":"2735:72:18"},{"AST":{"nodeType":"YulBlock","src":"2883:51:18","statements":[{"nodeType":"YulAssignment","src":"2898:25:18","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"2911:5:18"},{"name":"twos","nodeType":"YulIdentifier","src":"2918:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2907:3:18"},"nodeType":"YulFunctionCall","src":"2907:16:18"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2898:5:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3712,"isOffset":false,"isSlot":false,"src":"2898:5:18","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"2911:5:18","valueSize":1},{"declaration":3744,"isOffset":false,"isSlot":false,"src":"2918:4:18","valueSize":1}],"id":3751,"nodeType":"InlineAssembly","src":"2874:60:18"},{"AST":{"nodeType":"YulBlock","src":"3126:65:18","statements":[{"nodeType":"YulAssignment","src":"3141:39:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3161:1:18","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"3164:4:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3157:3:18"},"nodeType":"YulFunctionCall","src":"3157:12:18"},{"name":"twos","nodeType":"YulIdentifier","src":"3171:4:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3153:3:18"},"nodeType":"YulFunctionCall","src":"3153:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3178:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:18"},"nodeType":"YulFunctionCall","src":"3149:31:18"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3141:4:18"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":3744,"isOffset":false,"isSlot":false,"src":"3141:4:18","valueSize":1},{"declaration":3744,"isOffset":false,"isSlot":false,"src":"3164:4:18","valueSize":1},{"declaration":3744,"isOffset":false,"isSlot":false,"src":"3171:4:18","valueSize":1}],"id":3752,"nodeType":"InlineAssembly","src":"3117:74:18"},{"expression":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3753,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"3201:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"3210:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3755,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"3218:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3210:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3201:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3758,"nodeType":"ExpressionStatement","src":"3201:21:18"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"inv","nodeType":"VariableDeclaration","scope":3824,"src":"3563:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3578:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3762,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3582:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3578:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3577:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3597:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3577:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3563:35:18"},{"expression":{"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3768,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3817:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3828:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3771,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3842:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3824:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3817:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3775,"nodeType":"ExpressionStatement","src":"3817:28:18"},{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3776,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3876:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3883:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3887:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3779,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3901:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3887:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3883:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3876:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3783,"nodeType":"ExpressionStatement","src":"3876:28:18"},{"expression":{"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3784,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3936:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3943:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"3947:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3787,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3961:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3947:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3943:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3936:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3791,"nodeType":"ExpressionStatement","src":"3936:28:18"},{"expression":{"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3792,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"3996:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3794,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"4007:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3795,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4021:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4007:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4003:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3996:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3799,"nodeType":"ExpressionStatement","src":"3996:28:18"},{"expression":{"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3800,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4056:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4063:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3802,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"4067:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3803,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4081:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4067:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4063:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4056:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3807,"nodeType":"ExpressionStatement","src":"4056:28:18"},{"expression":{"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3808,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4117:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4124:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"4128:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3811,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4142:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4128:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4124:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4117:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3815,"nodeType":"ExpressionStatement","src":"4117:28:18"},{"expression":{"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4591:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"4600:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3818,"name":"inv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4608:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4600:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4591:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3821,"nodeType":"ExpressionStatement","src":"4591:20:18"},{"expression":{"id":3822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4629:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3710,"id":3823,"nodeType":"Return","src":"4622:13:18"}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"405:364:18","text":"@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3825,"src":"801:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3825,"src":"821:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":3825,"src":"841:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"841:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"790:77:18"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3825,"src":"891:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"890:16:18"},"scope":3869,"src":"775:3868:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3867,"nodeType":"Block","src":"5074:183:18","statements":[{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5085:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"5101:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"5104:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3841,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"5107:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3838,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"5094:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5094:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5085:34:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"5085:34:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"5141:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"5144:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3848,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"5147:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3845,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5134:6:18","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5134:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5162:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5134:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3866,"nodeType":"IfStatement","src":"5130:120:18","trueBody":{"id":3865,"nodeType":"Block","src":"5165:85:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5188:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5202:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5202:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5197:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5197:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5197:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5188:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3852,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5180:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5180:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3861,"nodeType":"ExpressionStatement","src":"5180:35:18"},{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5230:8:18","subExpression":{"id":3862,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5230:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3864,"nodeType":"ExpressionStatement","src":"5230:8:18"}]}}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"4651:275:18","text":"@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"mulDivRoundingUp","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3868,"src":"4968:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"4968:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3868,"src":"4988:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4988:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":3868,"src":"5008:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5008:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4957:77:18"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":3868,"src":"5058:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5058:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5057:16:18"},"scope":3869,"src":"4932:325:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3870,"src":"381:4879:18"}],"src":"46:5216:18"},"id":18},"contracts/libraries/LiquidityMath.sol":{"ast":{"absolutePath":"contracts/libraries/LiquidityMath.sol","exportedSymbols":{"LiquidityMath":[3921]},"id":3922,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3871,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"74:39:19","text":"@title Math library for liquidity"},"fullyImplemented":true,"id":3921,"linearizedBaseContracts":[3921],"name":"LiquidityMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3919,"nodeType":"Block","src":"465:169:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3882,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"480:1:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"480:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3917,"nodeType":"Block","src":"560:67:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3903,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"584:1:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"588:1:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":3907,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"600:1:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"592:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3905,"name":"uint128","nodeType":"ElementaryTypeName","src":"592:7:19","typeDescriptions":{}}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"592:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"588:14:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"584:18:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"583:20:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3912,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"607:1:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"583:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c41","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"610:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383","typeString":"literal_string \"LA\""},"value":"LA"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce8fc98a1432efc8ba166615239eb1702fbbbd0ddab9a5952502a98483035383","typeString":"literal_string \"LA\""}],"id":3902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"575:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"575:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3916,"nodeType":"ExpressionStatement","src":"575:40:19"}]},"id":3918,"nodeType":"IfStatement","src":"476:151:19","trueBody":{"id":3901,"nodeType":"Block","src":"487:67:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3886,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"511:1:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"515:1:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"527:2:19","subExpression":{"id":3890,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"528:1:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"519:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3888,"name":"uint128","nodeType":"ElementaryTypeName","src":"519:7:19","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"519:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"515:15:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"511:19:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"510:21:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3896,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"534:1:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"510:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c53","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"537:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985","typeString":"literal_string \"LS\""},"value":"LS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2be2231ccd52e7fedf30c30a3dfa3d6c9d9d3400159e305398a7b6d437f56985","typeString":"literal_string \"LS\""}],"id":3885,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"502:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"502:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"ExpressionStatement","src":"502:40:19"}]}}]},"documentation":{"id":3873,"nodeType":"StructuredDocumentation","src":"142:244:19","text":"@notice Add a signed liquidity delta to liquidity and revert if it overflows or underflows\n @param x The liquidity before change\n @param y The delta by which liquidity should be changed\n @return z The liquidity delta"},"id":3920,"implemented":true,"kind":"function","modifiers":[],"name":"addDelta","nodeType":"FunctionDefinition","parameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3875,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3920,"src":"410:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3874,"name":"uint128","nodeType":"ElementaryTypeName","src":"410:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3920,"src":"421:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3876,"name":"int128","nodeType":"ElementaryTypeName","src":"421:6:19","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"409:21:19"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3920,"src":"454:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3879,"name":"uint128","nodeType":"ElementaryTypeName","src":"454:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"453:11:19"},"scope":3921,"src":"392:242:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3922,"src":"113:524:19"}],"src":"46:593:19"},"id":19},"contracts/libraries/LowGasSafeMath.sol":{"ast":{"absolutePath":"contracts/libraries/LowGasSafeMath.sol","exportedSymbols":{"LowGasSafeMath":[4051]},"id":4052,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3923,"literals":["solidity",">=","0.7",".0"],"nodeType":"PragmaDirective","src":"46:24:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"74:180:20","text":"@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"},"fullyImplemented":true,"id":4051,"linearizedBaseContracts":[4051],"name":"LowGasSafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":3945,"nodeType":"Block","src":"514:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3935,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"534:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"538:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3937,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"542:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"538:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"534:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"533:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"548:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"533:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"525:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"525:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3944,"nodeType":"ExpressionStatement","src":"525:25:20"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"284:155:20","text":"@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"},"id":3946,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3946,"src":"458:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"458:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3929,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3946,"src":"469:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"469:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"457:22:20"},"returnParameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3946,"src":"503:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"502:11:20"},"scope":4051,"src":"445:113:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3967,"nodeType":"Block","src":"797:44:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3957,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"817:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"821:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3959,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"825:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"821:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"817:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"816:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3963,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"831:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"816:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"808:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"808:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3966,"nodeType":"ExpressionStatement","src":"808:25:20"}]},"documentation":{"id":3947,"nodeType":"StructuredDocumentation","src":"566:156:20","text":"@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"},"id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3968,"src":"741:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3948,"name":"uint256","nodeType":"ElementaryTypeName","src":"741:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3968,"src":"752:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"740:22:20"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3968,"src":"786:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:11:20"},"scope":4051,"src":"728:113:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3995,"nodeType":"Block","src":"1081:58:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"1100:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1100:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3982,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"1111:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"1115:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3984,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"1119:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1115:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1111:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3987,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1110:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3988,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"1124:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1110:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3990,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"1129:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1110:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1100:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1092:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1092:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3994,"nodeType":"ExpressionStatement","src":"1092:39:20"}]},"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"849:157:20","text":"@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"},"id":3996,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3996,"src":"1025:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3973,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":3996,"src":"1036:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1024:22:20"},"returnParameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":3996,"src":"1070:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1070:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:11:20"},"scope":4051,"src":"1012:127:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4022,"nodeType":"Block","src":"1376:56:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"1396:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"1400:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4009,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"1404:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1400:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1396:9:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1395:11:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4013,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"1410:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1395:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"1416:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1421:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1416:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1415:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1395:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1387:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1387:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4021,"nodeType":"ExpressionStatement","src":"1387:37:20"}]},"documentation":{"id":3997,"nodeType":"StructuredDocumentation","src":"1147:157:20","text":"@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"},"id":4023,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4023,"src":"1323:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3998,"name":"int256","nodeType":"ElementaryTypeName","src":"1323:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4023,"src":"1333:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4000,"name":"int256","nodeType":"ElementaryTypeName","src":"1333:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1322:20:20"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":4023,"src":"1366:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4003,"name":"int256","nodeType":"ElementaryTypeName","src":"1366:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1365:10:20"},"scope":4051,"src":"1310:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4049,"nodeType":"Block","src":"1681:56:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"1701:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1705:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4036,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"1709:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1705:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1701:9:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1700:11:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4040,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"1715:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1700:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"1721:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1726:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1721:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1720:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1700:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1692:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1692:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4048,"nodeType":"ExpressionStatement","src":"1692:37:20"}]},"documentation":{"id":4024,"nodeType":"StructuredDocumentation","src":"1440:169:20","text":"@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"},"id":4050,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4050,"src":"1628:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4025,"name":"int256","nodeType":"ElementaryTypeName","src":"1628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4028,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4050,"src":"1638:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4027,"name":"int256","nodeType":"ElementaryTypeName","src":"1638:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1627:20:20"},"returnParameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":4050,"src":"1671:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4030,"name":"int256","nodeType":"ElementaryTypeName","src":"1671:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1670:10:20"},"scope":4051,"src":"1615:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4052,"src":"254:1486:20"}],"src":"46:1696:20"},"id":20},"contracts/libraries/Oracle.sol":{"ast":{"absolutePath":"contracts/libraries/Oracle.sol","exportedSymbols":{"Oracle":[4786]},"id":4787,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4053,"literals":["solidity",">=","0.5",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"46:31:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"81:620:21","text":"@title Oracle\n @notice Provides price and liquidity data useful for a wide variety of system designs\n @dev Instances of stored oracle data, \"observations\", are collected in the oracle array\n Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the\n maximum length of the oracle array. New slots will be added when the array is fully populated.\n Observations are overwritten when the full length of the oracle array is populated.\n The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()"},"fullyImplemented":true,"id":4786,"linearizedBaseContracts":[4786],"name":"Oracle","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Oracle.Observation","id":4063,"members":[{"constant":false,"id":4056,"mutability":"mutable","name":"blockTimestamp","nodeType":"VariableDeclaration","scope":4063,"src":"804:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4055,"name":"uint32","nodeType":"ElementaryTypeName","src":"804:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4058,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":4063,"src":"932:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4057,"name":"int56","nodeType":"ElementaryTypeName","src":"932:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":4060,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":4063,"src":"1080:41:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4059,"name":"uint160","nodeType":"ElementaryTypeName","src":"1080:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4062,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":4063,"src":"1190:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4061,"name":"bool","nodeType":"ElementaryTypeName","src":"1190:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Observation","nodeType":"StructDefinition","scope":4786,"src":"723:491:21","visibility":"public"},{"body":{"id":4117,"nodeType":"Block","src":"2031:465:21","statements":[{"assignments":[4078],"declarations":[{"constant":false,"id":4078,"mutability":"mutable","name":"delta","nodeType":"VariableDeclaration","scope":4117,"src":"2042:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4077,"name":"uint32","nodeType":"ElementaryTypeName","src":"2042:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4083,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"2057:14:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4080,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"2074:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"2074:19:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2057:36:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"2042:51:21"},{"expression":{"arguments":[{"id":4085,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"2171:14:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4086,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"2220:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"2220:19:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4090,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"2248:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2242:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4088,"name":"int56","nodeType":"ElementaryTypeName","src":"2242:5:21","typeDescriptions":{}}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2242:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4092,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"2256:5:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2242:19:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"2220:41:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4095,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"2315:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"2315:38:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4099,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"2387:5:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2379:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4097,"name":"uint160","nodeType":"ElementaryTypeName","src":"2379:7:21","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2379:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2397:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2379:21:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2378:23:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"2405:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2417:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2405:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2433:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2405:29:21","trueExpression":{"id":4107,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"2421:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":4110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2404:31:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2378:57:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2377:59:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2315:121:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"hexValue":"74727565","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2468:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int56","typeString":"int56"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4084,"name":"Observation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"2124:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Observation_$4063_storage_ptr_$","typeString":"type(struct Oracle.Observation storage pointer)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["blockTimestamp","tickCumulative","secondsPerLiquidityCumulativeX128","initialized"],"nodeType":"FunctionCall","src":"2124:364:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"functionReturnParameters":4076,"id":4116,"nodeType":"Return","src":"2104:384:21"}]},"documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"1222:620:21","text":"@notice Transforms a previous observation into a new observation, given the passage of time and the current tick and liquidity values\n @dev blockTimestamp _must_ be chronologically equal to or greater than last.blockTimestamp, safe for 0 or 1 overflows\n @param last The specified observation to be transformed\n @param blockTimestamp The timestamp of the new observation\n @param tick The active tick at the time of the new observation\n @param liquidity The total in-range liquidity at the time of the new observation\n @return Observation The newly populated observation"},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"transform","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"last","nodeType":"VariableDeclaration","scope":4118,"src":"1877:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4065,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"1877:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"},{"constant":false,"id":4068,"mutability":"mutable","name":"blockTimestamp","nodeType":"VariableDeclaration","scope":4118,"src":"1911:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4067,"name":"uint32","nodeType":"ElementaryTypeName","src":"1911:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":4118,"src":"1943:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4069,"name":"int24","nodeType":"ElementaryTypeName","src":"1943:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4118,"src":"1964:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4071,"name":"uint128","nodeType":"ElementaryTypeName","src":"1964:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1866:122:21"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4118,"src":"2011:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4074,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"2011:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"}],"src":"2010:20:21"},"scope":4786,"src":"1848:648:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4147,"nodeType":"Block","src":"3105:227:21","statements":[{"expression":{"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4132,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"3116:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4134,"indexExpression":{"hexValue":"30","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3121:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3116:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4136,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"3169:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3204:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3255:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3284:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4135,"name":"Observation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"3126:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Observation_$4063_storage_ptr_$","typeString":"type(struct Oracle.Observation storage pointer)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["blockTimestamp","tickCumulative","secondsPerLiquidityCumulativeX128","initialized"],"nodeType":"FunctionCall","src":"3126:174:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"src":"3116:184:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"id":4142,"nodeType":"ExpressionStatement","src":"3116:184:21"},{"expression":{"components":[{"hexValue":"31","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3322:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":4145,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3318:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$","typeString":"tuple(int_const 1,int_const 1)"}},"functionReturnParameters":4131,"id":4146,"nodeType":"Return","src":"3311:13:21"}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"2504:444:21","text":"@notice Initialize the oracle array by writing the first slot. Called once for the lifecycle of the observations array\n @param self The stored oracle array\n @param time The time of the oracle initialization, via block.timestamp truncated to uint32\n @return cardinality The number of populated elements in the oracle array\n @return cardinalityNext The new length of the oracle array, independent of population"},"id":4148,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4148,"src":"2974:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4120,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"2974:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4122,"length":{"hexValue":"3635353335","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2986:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"2974:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":4148,"src":"3007:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4124,"name":"uint32","nodeType":"ElementaryTypeName","src":"3007:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2973:46:21"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":4148,"src":"3056:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4127,"name":"uint16","nodeType":"ElementaryTypeName","src":"3056:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4130,"mutability":"mutable","name":"cardinalityNext","nodeType":"VariableDeclaration","scope":4148,"src":"3076:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4129,"name":"uint16","nodeType":"ElementaryTypeName","src":"3076:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3055:44:21"},"scope":4786,"src":"2954:378:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"4820:629:21","statements":[{"assignments":[4173],"declarations":[{"constant":false,"id":4173,"mutability":"mutable","name":"last","nodeType":"VariableDeclaration","scope":4228,"src":"4831:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4172,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"4831:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"}],"id":4177,"initialValue":{"baseExpression":{"id":4174,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"4857:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4176,"indexExpression":{"id":4175,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"4862:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4857:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4831:37:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4178,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"4961:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"4961:19:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4180,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"4984:14:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4961:37:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4186,"nodeType":"IfStatement","src":"4957:70:21","trueBody":{"expression":{"components":[{"id":4182,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"5008:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4183,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5015:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5007:20:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint16_$","typeString":"tuple(uint16,uint16)"}},"functionReturnParameters":4171,"id":4185,"nodeType":"Return","src":"5000:27:21"}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"cardinalityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"5113:15:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4188,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5131:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5113:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"5146:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5156:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5170:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5156:15:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5155:17:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5146:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5113:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4206,"nodeType":"Block","src":"5243:59:21","statements":[{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4202,"name":"cardinalityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5258:18:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4203,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"5279:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5258:32:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":4205,"nodeType":"ExpressionStatement","src":"5258:32:21"}]},"id":4207,"nodeType":"IfStatement","src":"5109:193:21","trueBody":{"id":4201,"nodeType":"Block","src":"5174:63:21","statements":[{"expression":{"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4197,"name":"cardinalityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5189:18:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4198,"name":"cardinalityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"5210:15:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5189:36:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":4200,"nodeType":"ExpressionStatement","src":"5189:36:21"}]}},{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"indexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5314:12:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"5330:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5338:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5330:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5329:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4213,"name":"cardinalityUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"5343:18:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5329:32:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5314:47:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":4216,"nodeType":"ExpressionStatement","src":"5314:47:21"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4217,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"5372:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4219,"indexExpression":{"id":4218,"name":"indexUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"5377:12:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5372:18:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4221,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"5403:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},{"id":4222,"name":"blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"5409:14:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4223,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"5425:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4224,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4161,"src":"5431:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4220,"name":"transform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5393:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Observation_$4063_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5393:48:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"src":"5372:69:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"id":4227,"nodeType":"ExpressionStatement","src":"5372:69:21"}]},"documentation":{"id":4149,"nodeType":"StructuredDocumentation","src":"3340:1178:21","text":"@notice Writes an oracle observation to the array\n @dev Writable at most once per block. Index represents the most recently written element. cardinality and index must be tracked externally.\n If the index is at the end of the allowable array length (according to cardinality), and the next cardinality\n is greater than the current one, cardinality may be increased. This restriction is created to preserve ordering.\n @param self The stored oracle array\n @param index The index of the observation that was most recently written to the observations array\n @param blockTimestamp The timestamp of the new observation\n @param tick The active tick at the time of the new observation\n @param liquidity The total in-range liquidity at the time of the new observation\n @param cardinality The number of populated elements in the oracle array\n @param cardinalityNext The new length of the oracle array, independent of population\n @return indexUpdated The new index of the most recently written element in the oracle array\n @return cardinalityUpdated The new cardinality of the oracle array"},"id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"write","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4229,"src":"4549:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4150,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"4549:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4152,"length":{"hexValue":"3635353335","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"4549:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4155,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":4229,"src":"4591:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4154,"name":"uint16","nodeType":"ElementaryTypeName","src":"4591:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"blockTimestamp","nodeType":"VariableDeclaration","scope":4229,"src":"4614:21:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4156,"name":"uint32","nodeType":"ElementaryTypeName","src":"4614:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4159,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":4229,"src":"4646:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4158,"name":"int24","nodeType":"ElementaryTypeName","src":"4646:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4161,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4229,"src":"4667:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4160,"name":"uint128","nodeType":"ElementaryTypeName","src":"4667:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4163,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":4229,"src":"4695:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4162,"name":"uint16","nodeType":"ElementaryTypeName","src":"4695:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"cardinalityNext","nodeType":"VariableDeclaration","scope":4229,"src":"4724:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4164,"name":"uint16","nodeType":"ElementaryTypeName","src":"4724:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4538:215:21"},"returnParameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"indexUpdated","nodeType":"VariableDeclaration","scope":4229,"src":"4772:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4167,"name":"uint16","nodeType":"ElementaryTypeName","src":"4772:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"cardinalityUpdated","nodeType":"VariableDeclaration","scope":4229,"src":"4793:25:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4169,"name":"uint16","nodeType":"ElementaryTypeName","src":"4793:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4771:48:21"},"scope":4786,"src":"4524:925:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4276,"nodeType":"Block","src":"5971:425:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4244,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"5990:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6000:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5990:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6003:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216","typeString":"literal_string \"I\""},"value":"I"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216","typeString":"literal_string \"I\""}],"id":4243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5982:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5982:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4249,"nodeType":"ExpressionStatement","src":"5982:25:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"6107:4:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4251,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"6115:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6107:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4255,"nodeType":"IfStatement","src":"6103:35:21","trueBody":{"expression":{"id":4253,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"6131:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4242,"id":4254,"nodeType":"Return","src":"6124:14:21"}},{"body":{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4266,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"6340:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4268,"indexExpression":{"id":4267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"6345:1:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6340:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"id":4269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"6340:22:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6365:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6340:26:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4272,"nodeType":"ExpressionStatement","src":"6340:26:21"},"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"6325:1:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4261,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"6329:4:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"6325:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4273,"initializationExpression":{"assignments":[4257],"declarations":[{"constant":false,"id":4257,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4273,"src":"6305:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4256,"name":"uint16","nodeType":"ElementaryTypeName","src":"6305:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":4259,"initialValue":{"id":4258,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"6316:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"6305:18:21"},"loopExpression":{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6335:3:21","subExpression":{"id":4263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"6335:1:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":4265,"nodeType":"ExpressionStatement","src":"6335:3:21"},"nodeType":"ForStatement","src":"6300:66:21"},{"expression":{"id":4274,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"6384:4:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4242,"id":4275,"nodeType":"Return","src":"6377:11:21"}]},"documentation":{"id":4230,"nodeType":"StructuredDocumentation","src":"5457:372:21","text":"@notice Prepares the oracle array to store up to `next` observations\n @param self The stored oracle array\n @param current The current next cardinality of the oracle array\n @param next The proposed next cardinality which will be populated in the oracle array\n @return next The next cardinality which will be populated in the oracle array"},"id":4277,"implemented":true,"kind":"function","modifiers":[],"name":"grow","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4277,"src":"5859:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4231,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"5859:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4233,"length":{"hexValue":"3635353335","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5871:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"5859:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4236,"mutability":"mutable","name":"current","nodeType":"VariableDeclaration","scope":4277,"src":"5901:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4235,"name":"uint16","nodeType":"ElementaryTypeName","src":"5901:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4238,"mutability":"mutable","name":"next","nodeType":"VariableDeclaration","scope":4277,"src":"5926:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4237,"name":"uint16","nodeType":"ElementaryTypeName","src":"5926:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5848:96:21"},"returnParameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4277,"src":"5963:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4240,"name":"uint16","nodeType":"ElementaryTypeName","src":"5963:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5962:8:21"},"scope":4786,"src":"5835:561:21","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"6946:275:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7022:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4290,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"7027:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7022:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4292,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"7035:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4293,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"7040:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7035:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7022:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4300,"nodeType":"IfStatement","src":"7018:41:21","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7053:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4297,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"7058:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7053:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4288,"id":4299,"nodeType":"Return","src":"7046:13:21"}},{"assignments":[4302],"declarations":[{"constant":false,"id":4302,"mutability":"mutable","name":"aAdjusted","nodeType":"VariableDeclaration","scope":4331,"src":"7072:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"7072:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4313,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7092:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4304,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"7096:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7092:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7107:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7111:5:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"7107:9:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7092:24:21","trueExpression":{"id":4306,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"7103:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"7072:44:21"},{"assignments":[4315],"declarations":[{"constant":false,"id":4315,"mutability":"mutable","name":"bAdjusted","nodeType":"VariableDeclaration","scope":4331,"src":"7127:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"7127:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4326,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4316,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"7147:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4317,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"7151:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7147:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"7162:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7166:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7169:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"7166:5:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"7162:9:21","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7147:24:21","trueExpression":{"id":4319,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"7158:1:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"7127:44:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4327,"name":"aAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"7191:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4328,"name":"bAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4315,"src":"7204:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7191:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4288,"id":4330,"nodeType":"Return","src":"7184:29:21"}]},"documentation":{"id":4278,"nodeType":"StructuredDocumentation","src":"6404:428:21","text":"@notice comparator for 32-bit timestamps\n @dev safe for 0 or 1 overflows, a and b _must_ be chronologically before or equal to time\n @param time A timestamp truncated to 32 bits\n @param a A comparison timestamp from which to determine the relative position of `time`\n @param b From which to determine the relative position of `time`\n @return bool Whether `a` is chronologically <= `b`"},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"lte","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":4332,"src":"6861:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4279,"name":"uint32","nodeType":"ElementaryTypeName","src":"6861:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4332,"src":"6883:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4281,"name":"uint32","nodeType":"ElementaryTypeName","src":"6883:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":4332,"src":"6902:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4283,"name":"uint32","nodeType":"ElementaryTypeName","src":"6902:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6850:67:21"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4332,"src":"6940:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4286,"name":"bool","nodeType":"ElementaryTypeName","src":"6940:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6939:6:21"},"scope":4786,"src":"6838:383:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4449,"nodeType":"Block","src":"8441:843:21","statements":[{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"l","nodeType":"VariableDeclaration","scope":4449,"src":"8452:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"8452:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4360,"initialValue":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4354,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"8465:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8473:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8465:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8464:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4358,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"8478:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"8464:25:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"8452:37:21"},{"assignments":[4362],"declarations":[{"constant":false,"id":4362,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":4449,"src":"8522:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"8522:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4368,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"8534:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4364,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"8538:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"8534:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8552:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8534:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8522:31:21"},{"assignments":[4370],"declarations":[{"constant":false,"id":4370,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4449,"src":"8586:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4371,"nodeType":"VariableDeclarationStatement","src":"8586:9:21"},{"body":{"id":4447,"nodeType":"Block","src":"8619:658:21","statements":[{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4374,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"8639:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4375,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"8643:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8639:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8638:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8648:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8638:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8634:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4381,"nodeType":"ExpressionStatement","src":"8634:15:21"},{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"8666:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4383,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"8679:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4387,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8684:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4385,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"8688:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"8684:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8679:21:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"src":"8666:34:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4389,"nodeType":"ExpressionStatement","src":"8666:34:21"},{"condition":{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8814:23:21","subExpression":{"expression":{"id":4390,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"8815:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":4062,"src":"8815:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"nodeType":"IfStatement","src":"8810:100:21","trueBody":{"id":4400,"nodeType":"Block","src":"8839:71:21","statements":[{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"8858:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8862:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8866:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8862:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8858:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"8858:9:21"},{"id":4399,"nodeType":"Continue","src":"8886:8:21"}]}},{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4402,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"8926:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4403,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"8938:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4410,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"8944:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8948:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8944:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8943:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4408,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"8953:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"8943:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8938:27:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"src":"8926:39:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4412,"nodeType":"ExpressionStatement","src":"8926:39:21"},{"assignments":[4414],"declarations":[{"constant":false,"id":4414,"mutability":"mutable","name":"targetAtOrAfter","nodeType":"VariableDeclaration","scope":4447,"src":"8982:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4413,"name":"bool","nodeType":"ElementaryTypeName","src":"8982:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4421,"initialValue":{"arguments":[{"id":4416,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"9009:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4417,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"9015:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"9015:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4419,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"9042:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4415,"name":"lte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"9005:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$","typeString":"function (uint32,uint32,uint32) pure returns (bool)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9005:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8982:67:21"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"targetAtOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"9119:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":4424,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"9142:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4425,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"9148:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4426,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"9156:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"9156:24:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4423,"name":"lte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"9138:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$","typeString":"function (uint32,uint32,uint32) pure returns (bool)"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9138:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9119:62:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"IfStatement","src":"9115:73:21","trueBody":{"id":4430,"nodeType":"Break","src":"9183:5:21"}},{"condition":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9209:16:21","subExpression":{"id":4432,"name":"targetAtOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"9210:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4440,"name":"l","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"9256:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"9260:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9264:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9260:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9256:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"9256:9:21"},"id":4446,"nodeType":"IfStatement","src":"9205:60:21","trueBody":{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4434,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4362,"src":"9227:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"9231:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9235:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9231:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9227:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"9227:9:21"}}]},"condition":{"hexValue":"74727565","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8613:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4448,"nodeType":"WhileStatement","src":"8606:671:21"}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"7229:954:21","text":"@notice Fetches the observations beforeOrAt and atOrAfter a target, i.e. where [beforeOrAt, atOrAfter] is satisfied.\n The result may be the same observation, or adjacent observations.\n @dev The answer must be contained in the array, used when the target is located within the stored observation\n boundaries: older than the most recent observation and younger, or the same age as, the oldest observation\n @param self The stored oracle array\n @param time The current block.timestamp\n @param target The timestamp at which the reserved observation should be for\n @param index The index of the observation that was most recently written to the observations array\n @param cardinality The number of populated elements in the oracle array\n @return beforeOrAt The observation recorded before, or at, the target\n @return atOrAfter The observation recorded at, or after, the target"},"id":4450,"implemented":true,"kind":"function","modifiers":[],"name":"binarySearch","nodeType":"FunctionDefinition","parameters":{"id":4346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4450,"src":"8221:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4334,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"8221:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4336,"length":{"hexValue":"3635353335","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8233:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"8221:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":4450,"src":"8263:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4338,"name":"uint32","nodeType":"ElementaryTypeName","src":"8263:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":4450,"src":"8285:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4340,"name":"uint32","nodeType":"ElementaryTypeName","src":"8285:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":4450,"src":"8309:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4342,"name":"uint16","nodeType":"ElementaryTypeName","src":"8309:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":4450,"src":"8332:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4344,"name":"uint16","nodeType":"ElementaryTypeName","src":"8332:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8210:147:21"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"beforeOrAt","nodeType":"VariableDeclaration","scope":4450,"src":"8380:29:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4347,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"8380:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"},{"constant":false,"id":4350,"mutability":"mutable","name":"atOrAfter","nodeType":"VariableDeclaration","scope":4450,"src":"8411:28:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4349,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"8411:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"}],"src":"8379:61:21"},"scope":4786,"src":"8189:1095:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4547,"nodeType":"Block","src":"10637:1142:21","statements":[{"expression":{"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"10712:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4475,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"10725:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4477,"indexExpression":{"id":4476,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"10730:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10725:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"src":"10712:24:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4479,"nodeType":"ExpressionStatement","src":"10712:24:21"},{"condition":{"arguments":[{"id":4481,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"10858:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4482,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"10864:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"10864:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4484,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"10891:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4480,"name":"lte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10854:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$","typeString":"function (uint32,uint32,uint32) pure returns (bool)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10854:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4507,"nodeType":"IfStatement","src":"10850:451:21","trueBody":{"id":4506,"nodeType":"Block","src":"10900:401:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4486,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"10919:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"10919:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4488,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"10948:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"10919:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4504,"nodeType":"Block","src":"11136:154:21","statements":[{"expression":{"components":[{"id":4495,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11215:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},{"arguments":[{"id":4497,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11237:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},{"id":4498,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11249:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4499,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"11257:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4500,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"11263:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4496,"name":"transform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"11227:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Observation_$4063_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11227:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}}],"id":4502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11214:60:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Observation_$4063_memory_ptr_$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"}},"functionReturnParameters":4473,"id":4503,"nodeType":"Return","src":"11207:67:21"}]},"id":4505,"nodeType":"IfStatement","src":"10915:375:21","trueBody":{"id":4494,"nodeType":"Block","src":"10956:174:21","statements":[{"expression":{"components":[{"id":4490,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11092:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},{"id":4491,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"11104:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}}],"id":4492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11091:23:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Observation_$4063_memory_ptr_$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"}},"functionReturnParameters":4473,"id":4493,"nodeType":"Return","src":"11084:30:21"}]}}]}},{"expression":{"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4508,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11367:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4509,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"11380:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4516,"indexExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"11386:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11394:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11386:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11385:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4514,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"11399:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11385:25:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11380:31:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"src":"11367:44:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4518,"nodeType":"ExpressionStatement","src":"11367:44:21"},{"condition":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11426:23:21","subExpression":{"expression":{"id":4519,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11427:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":4062,"src":"11427:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"11422:49:21","trueBody":{"expression":{"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11451:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4523,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"11464:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4525,"indexExpression":{"hexValue":"30","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11469:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"src":"11451:20:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4527,"nodeType":"ExpressionStatement","src":"11451:20:21"}},{"expression":{"arguments":[{"arguments":[{"id":4531,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"11585:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":4532,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"11591:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4533,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"11591:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4534,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11618:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":4530,"name":"lte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"11581:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint32_$_t_uint32_$_t_uint32_$returns$_t_bool_$","typeString":"function (uint32,uint32,uint32) pure returns (bool)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11581:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f4c44","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11627:5:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d30c0d219016dd7e5cf2b2c30c4d7c091820fc329f335b57cab26b9ff3384a9e","typeString":"literal_string \"OLD\""},"value":"OLD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d30c0d219016dd7e5cf2b2c30c4d7c091820fc329f335b57cab26b9ff3384a9e","typeString":"literal_string \"OLD\""}],"id":4529,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11573:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11573:60:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4538,"nodeType":"ExpressionStatement","src":"11573:60:21"},{"expression":{"arguments":[{"id":4540,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"11732:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},{"id":4541,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"11738:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4542,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"11744:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4543,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"11752:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4544,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"11759:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4539,"name":"binarySearch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"11719:12:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_uint16_$_t_uint16_$returns$_t_struct$_Observation_$4063_memory_ptr_$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,uint16,uint16) view returns (struct Oracle.Observation memory,struct Oracle.Observation memory)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11719:52:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Observation_$4063_memory_ptr_$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"}},"functionReturnParameters":4473,"id":4546,"nodeType":"Return","src":"11712:59:21"}]},"documentation":{"id":4451,"nodeType":"StructuredDocumentation","src":"9292:1024:21","text":"@notice Fetches the observations beforeOrAt and atOrAfter a given target, i.e. where [beforeOrAt, atOrAfter] is satisfied\n @dev Assumes there is at least 1 initialized observation.\n Used by observeSingle() to compute the counterfactual accumulator values as of a given block timestamp.\n @param self The stored oracle array\n @param time The current block.timestamp\n @param target The timestamp at which the reserved observation should be for\n @param tick The active tick at the time of the returned or simulated observation\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The total pool liquidity at the time of the call\n @param cardinality The number of populated elements in the oracle array\n @return beforeOrAt The observation which occurred at, or before, the given timestamp\n @return atOrAfter The observation which occurred at, or after, the given timestamp"},"id":4548,"implemented":true,"kind":"function","modifiers":[],"name":"getSurroundingObservations","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4548,"src":"10368:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4452,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"10368:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4454,"length":{"hexValue":"3635353335","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10380:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"10368:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4457,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":4548,"src":"10410:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4456,"name":"uint32","nodeType":"ElementaryTypeName","src":"10410:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":4548,"src":"10432:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4458,"name":"uint32","nodeType":"ElementaryTypeName","src":"10432:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":4548,"src":"10456:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4460,"name":"int24","nodeType":"ElementaryTypeName","src":"10456:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4463,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":4548,"src":"10477:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4462,"name":"uint16","nodeType":"ElementaryTypeName","src":"10477:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4548,"src":"10500:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4464,"name":"uint128","nodeType":"ElementaryTypeName","src":"10500:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":4548,"src":"10528:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4466,"name":"uint16","nodeType":"ElementaryTypeName","src":"10528:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"10357:196:21"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"beforeOrAt","nodeType":"VariableDeclaration","scope":4548,"src":"10576:29:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4469,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"10576:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"},{"constant":false,"id":4472,"mutability":"mutable","name":"atOrAfter","nodeType":"VariableDeclaration","scope":4548,"src":"10607:28:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4471,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"10607:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"}],"src":"10575:61:21"},"scope":4786,"src":"10322:1457:21","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4698,"nodeType":"Block","src":"13216:1763:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"secondsAgo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"13231:10:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13245:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13231:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4602,"nodeType":"IfStatement","src":"13227:261:21","trueBody":{"id":4601,"nodeType":"Block","src":"13248:240:21","statements":[{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"last","nodeType":"VariableDeclaration","scope":4601,"src":"13263:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4575,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"13263:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"}],"id":4580,"initialValue":{"baseExpression":{"id":4577,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"13289:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},"id":4579,"indexExpression":{"id":4578,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"13294:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13289:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage","typeString":"struct Oracle.Observation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13263:37:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4581,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"13319:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"13319:19:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4583,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"13342:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13319:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"13315:78:21","trueBody":{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"13348:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4587,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"13365:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},{"id":4588,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"13371:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4589,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"13377:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4590,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"13383:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":4586,"name":"transform","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"13355:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Observation_$4063_memory_ptr_$_t_uint32_$_t_int24_$_t_uint128_$returns$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"function (struct Oracle.Observation memory,uint32,int24,uint128) pure returns (struct Oracle.Observation memory)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13355:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"src":"13348:45:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4593,"nodeType":"ExpressionStatement","src":"13348:45:21"}},{"expression":{"components":[{"expression":{"id":4595,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"13416:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"13416:19:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":4597,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"13437:4:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"13437:38:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13415:61:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"functionReturnParameters":4571,"id":4600,"nodeType":"Return","src":"13408:68:21"}]}},{"assignments":[4604],"declarations":[{"constant":false,"id":4604,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":4698,"src":"13500:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4603,"name":"uint32","nodeType":"ElementaryTypeName","src":"13500:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4608,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"13516:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4606,"name":"secondsAgo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"13523:10:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13516:17:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"13500:33:21"},{"assignments":[4610,4612],"declarations":[{"constant":false,"id":4610,"mutability":"mutable","name":"beforeOrAt","nodeType":"VariableDeclaration","scope":4698,"src":"13547:29:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4609,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"13547:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"atOrAfter","nodeType":"VariableDeclaration","scope":4698,"src":"13578:28:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation"},"typeName":{"id":4611,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"13578:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"visibility":"internal"}],"id":4622,"initialValue":{"arguments":[{"id":4614,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"13651:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},{"id":4615,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"13670:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4616,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"13689:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4617,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"13710:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4618,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"13729:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4619,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"13749:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":4620,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"13773:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4613,"name":"getSurroundingObservations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"13610:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_struct$_Observation_$4063_memory_ptr_$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (struct Oracle.Observation memory,struct Oracle.Observation memory)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13610:185:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_struct$_Observation_$4063_memory_ptr_$_t_struct$_Observation_$4063_memory_ptr_$","typeString":"tuple(struct Oracle.Observation memory,struct Oracle.Observation memory)"}},"nodeType":"VariableDeclarationStatement","src":"13546:249:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"13812:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4624,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"13822:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"13822:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"13812:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"14009:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4635,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"14019:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"14019:24:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14009:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4695,"nodeType":"Block","src":"14200:772:21","statements":[{"assignments":[4646],"declarations":[{"constant":false,"id":4646,"mutability":"mutable","name":"observationTimeDelta","nodeType":"VariableDeclaration","scope":4695,"src":"14251:27:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4645,"name":"uint32","nodeType":"ElementaryTypeName","src":"14251:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4652,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4647,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"14281:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"14281:24:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4649,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"14308:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"14308:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14281:52:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"14251:82:21"},{"assignments":[4654],"declarations":[{"constant":false,"id":4654,"mutability":"mutable","name":"targetDelta","nodeType":"VariableDeclaration","scope":4695,"src":"14348:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4653,"name":"uint32","nodeType":"ElementaryTypeName","src":"14348:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":4659,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"14369:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4656,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"14378:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blockTimestamp","nodeType":"MemberAccess","referencedDeclaration":4056,"src":"14378:25:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14369:34:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"14348:55:21"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4660,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"14444:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"14444:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4662,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"14495:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"14495:24:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4664,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"14522:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"14522:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"14495:52:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}}],"id":4667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14494:54:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4668,"name":"observationTimeDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"14551:20:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14494:77:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}}],"id":4670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14493:79:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4671,"name":"targetDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"14596:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14493:114:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"14444:163:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4674,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"14626:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"14626:44:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4680,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"14767:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"14767:43:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4682,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"14813:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"14813:44:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"14767:90:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14729:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"14729:7:21","typeDescriptions":{}}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14729:155:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4686,"name":"targetDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"14887:11:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14729:169:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14728:171:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4689,"name":"observationTimeDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4646,"src":"14902:20:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"14728:194:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14694:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4676,"name":"uint160","nodeType":"ElementaryTypeName","src":"14694:7:21","typeDescriptions":{}}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14694:251:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"14626:319:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14425:535:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"functionReturnParameters":4571,"id":4694,"nodeType":"Return","src":"14418:542:21"}]},"id":4696,"nodeType":"IfStatement","src":"14005:967:21","trueBody":{"id":4644,"nodeType":"Block","src":"14045:149:21","statements":[{"expression":{"components":[{"expression":{"id":4638,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"14112:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"14112:24:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":4640,"name":"atOrAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"14138:9:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"14138:43:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14111:71:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"functionReturnParameters":4571,"id":4643,"nodeType":"Return","src":"14104:78:21"}]}},"id":4697,"nodeType":"IfStatement","src":"13808:1164:21","trueBody":{"id":4633,"nodeType":"Block","src":"13849:150:21","statements":[{"expression":{"components":[{"expression":{"id":4627,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"13915:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulative","nodeType":"MemberAccess","referencedDeclaration":4058,"src":"13915:25:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"expression":{"id":4629,"name":"beforeOrAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"13942:10:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_memory_ptr","typeString":"struct Oracle.Observation memory"}},"id":4630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityCumulativeX128","nodeType":"MemberAccess","referencedDeclaration":4060,"src":"13942:44:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13914:73:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"functionReturnParameters":4571,"id":4632,"nodeType":"Return","src":"13907:80:21"}]}}]},"documentation":{"id":4549,"nodeType":"StructuredDocumentation","src":"11787:1112:21","text":"@dev Reverts if an observation at or before the desired observation timestamp does not exist.\n 0 may be passed as `secondsAgo' to return the current cumulative values.\n If called with a timestamp falling between two observations, returns the counterfactual accumulator values\n at exactly the timestamp between the two observations.\n @param self The stored oracle array\n @param time The current block timestamp\n @param secondsAgo The amount of time to look back, in seconds, at which point to return an observation\n @param tick The current tick\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The current in-range pool liquidity\n @param cardinality The number of populated elements in the oracle array\n @return tickCumulative The tick * time elapsed since the pool was first initialized, as of `secondsAgo`\n @return secondsPerLiquidityCumulativeX128 The time elapsed / max(1, liquidity) since the pool was first initialized, as of `secondsAgo`"},"id":4699,"implemented":true,"kind":"function","modifiers":[],"name":"observeSingle","nodeType":"FunctionDefinition","parameters":{"id":4566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4553,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4699,"src":"12938:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4550,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"12938:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4552,"length":{"hexValue":"3635353335","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12950:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"12938:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4555,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":4699,"src":"12980:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4554,"name":"uint32","nodeType":"ElementaryTypeName","src":"12980:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4557,"mutability":"mutable","name":"secondsAgo","nodeType":"VariableDeclaration","scope":4699,"src":"13002:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4556,"name":"uint32","nodeType":"ElementaryTypeName","src":"13002:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4559,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":4699,"src":"13030:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4558,"name":"int24","nodeType":"ElementaryTypeName","src":"13030:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4561,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":4699,"src":"13051:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4560,"name":"uint16","nodeType":"ElementaryTypeName","src":"13051:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4563,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4699,"src":"13074:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4562,"name":"uint128","nodeType":"ElementaryTypeName","src":"13074:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4565,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":4699,"src":"13102:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4564,"name":"uint16","nodeType":"ElementaryTypeName","src":"13102:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"12927:200:21"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":4699,"src":"13151:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4567,"name":"int56","nodeType":"ElementaryTypeName","src":"13151:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":4699,"src":"13173:41:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4569,"name":"uint160","nodeType":"ElementaryTypeName","src":"13173:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"13150:65:21"},"scope":4786,"src":"12905:2074:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"16281:551:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"16300:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16314:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16300:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16317:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216","typeString":"literal_string \"I\""},"value":"I"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216","typeString":"literal_string \"I\""}],"id":4726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16292:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16292:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4732,"nodeType":"ExpressionStatement","src":"16292:29:21"},{"expression":{"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4733,"name":"tickCumulatives","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"16334:15:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4737,"name":"secondsAgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"16364:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_memory_ptr","typeString":"uint32[] memory"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16364:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16352:11:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int56_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (int56[] memory)"},"typeName":{"baseType":{"id":4734,"name":"int56","nodeType":"ElementaryTypeName","src":"16356:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4735,"nodeType":"ArrayTypeName","src":"16356:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16352:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[] memory"}},"src":"16334:49:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[] memory"}},"id":4741,"nodeType":"ExpressionStatement","src":"16334:49:21"},{"expression":{"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"secondsPerLiquidityCumulativeX128s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"16394:34:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4746,"name":"secondsAgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"16445:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_memory_ptr","typeString":"uint32[] memory"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16445:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16431:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint160[] memory)"},"typeName":{"baseType":{"id":4743,"name":"uint160","nodeType":"ElementaryTypeName","src":"16435:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4744,"nodeType":"ArrayTypeName","src":"16435:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16431:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[] memory"}},"src":"16394:70:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[] memory"}},"id":4750,"nodeType":"ExpressionStatement","src":"16394:70:21"},{"body":{"id":4782,"nodeType":"Block","src":"16524:301:21","statements":[{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"baseExpression":{"id":4762,"name":"tickCumulatives","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"16540:15:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[] memory"}},"id":4764,"indexExpression":{"id":4763,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"16556:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16540:18:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},{"baseExpression":{"id":4765,"name":"secondsPerLiquidityCumulativeX128s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"16560:34:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[] memory"}},"id":4767,"indexExpression":{"id":4766,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"16595:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16560:37:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4768,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"16539:59:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4770,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"16633:4:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"}},{"id":4771,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"16656:4:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"baseExpression":{"id":4772,"name":"secondsAgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"16679:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_memory_ptr","typeString":"uint32[] memory"}},"id":4774,"indexExpression":{"id":4773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"16691:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16679:14:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4775,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"16712:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4776,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"16735:5:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4777,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"16759:9:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":4778,"name":"cardinality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"16787:11:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation storage ref[65535] storage pointer"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":4769,"name":"observeSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4699,"src":"16601:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr_$_t_uint32_$_t_uint32_$_t_int24_$_t_uint16_$_t_uint128_$_t_uint16_$returns$_t_int56_$_t_uint160_$","typeString":"function (struct Oracle.Observation storage ref[65535] storage pointer,uint32,uint32,int24,uint16,uint128,uint16) view returns (int56,uint160)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16601:212:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int56_$_t_uint160_$","typeString":"tuple(int56,uint160)"}},"src":"16539:274:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"ExpressionStatement","src":"16539:274:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"16495:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4756,"name":"secondsAgos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"16499:11:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_memory_ptr","typeString":"uint32[] memory"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16499:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16495:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"initializationExpression":{"assignments":[4752],"declarations":[{"constant":false,"id":4752,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":4783,"src":"16480:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"16480:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4754,"initialValue":{"hexValue":"30","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16492:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16480:13:21"},"loopExpression":{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16519:3:21","subExpression":{"id":4759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"16519:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"16519:3:21"},"nodeType":"ForStatement","src":"16475:350:21"}]},"documentation":{"id":4700,"nodeType":"StructuredDocumentation","src":"14987:953:21","text":"@notice Returns the accumulator values as of each time seconds ago from the given time in the array of `secondsAgos`\n @dev Reverts if `secondsAgos` > oldest observation\n @param self The stored oracle array\n @param time The current block.timestamp\n @param secondsAgos Each amount of time to look back, in seconds, at which point to return an observation\n @param tick The current tick\n @param index The index of the observation that was most recently written to the observations array\n @param liquidity The current in-range pool liquidity\n @param cardinality The number of populated elements in the oracle array\n @return tickCumulatives The tick * time elapsed since the pool was first initialized, as of each `secondsAgo`\n @return secondsPerLiquidityCumulativeX128s The cumulative seconds / max(1, liquidity) since the pool was first initialized, as of each `secondsAgo`"},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"observe","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4785,"src":"15973:31:21","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"},"typeName":{"baseType":{"id":4701,"name":"Observation","nodeType":"UserDefinedTypeName","referencedDeclaration":4063,"src":"15973:11:21","typeDescriptions":{"typeIdentifier":"t_struct$_Observation_$4063_storage_ptr","typeString":"struct Oracle.Observation"}},"id":4703,"length":{"hexValue":"3635353335","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15985:5:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"65535"},"nodeType":"ArrayTypeName","src":"15973:18:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Observation_$4063_storage_$65535_storage_ptr","typeString":"struct Oracle.Observation[65535]"}},"visibility":"internal"},{"constant":false,"id":4706,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":4785,"src":"16015:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4705,"name":"uint32","nodeType":"ElementaryTypeName","src":"16015:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4709,"mutability":"mutable","name":"secondsAgos","nodeType":"VariableDeclaration","scope":4785,"src":"16037:27:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_memory_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":4707,"name":"uint32","nodeType":"ElementaryTypeName","src":"16037:6:21","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4708,"nodeType":"ArrayTypeName","src":"16037:8:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":4785,"src":"16075:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4710,"name":"int24","nodeType":"ElementaryTypeName","src":"16075:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4713,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":4785,"src":"16096:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4712,"name":"uint16","nodeType":"ElementaryTypeName","src":"16096:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":4715,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4785,"src":"16119:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4714,"name":"uint128","nodeType":"ElementaryTypeName","src":"16119:7:21","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"cardinality","nodeType":"VariableDeclaration","scope":4785,"src":"16147:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4716,"name":"uint16","nodeType":"ElementaryTypeName","src":"16147:6:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"15962:210:21"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"tickCumulatives","nodeType":"VariableDeclaration","scope":4785,"src":"16196:30:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":4719,"name":"int56","nodeType":"ElementaryTypeName","src":"16196:5:21","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4720,"nodeType":"ArrayTypeName","src":"16196:7:21","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":4724,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nodeType":"VariableDeclaration","scope":4785,"src":"16228:51:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":4722,"name":"uint160","nodeType":"ElementaryTypeName","src":"16228:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":4723,"nodeType":"ArrayTypeName","src":"16228:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"16195:85:21"},"scope":4786,"src":"15946:886:21","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4787,"src":"701:16134:21"}],"src":"46:16791:21"},"id":21},"contracts/libraries/Position.sol":{"ast":{"absolutePath":"contracts/libraries/Position.sol","exportedSymbols":{"FixedPoint128":[3686],"FullMath":[3869],"LiquidityMath":[3921],"Position":[4959]},"id":4960,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4788,"literals":["solidity",">=","0.5",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"46:31:22"},{"absolutePath":"contracts/libraries/FullMath.sol","file":"./FullMath.sol","id":4789,"nodeType":"ImportDirective","scope":4960,"sourceUnit":3870,"src":"81:24:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/FixedPoint128.sol","file":"./FixedPoint128.sol","id":4790,"nodeType":"ImportDirective","scope":4960,"sourceUnit":3687,"src":"107:29:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LiquidityMath.sol","file":"./LiquidityMath.sol","id":4791,"nodeType":"ImportDirective","scope":4960,"sourceUnit":3922,"src":"138:29:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4792,"nodeType":"StructuredDocumentation","src":"171:204:22","text":"@title Position\n @notice Positions represent an owner address' liquidity between a lower and upper tick boundary\n @dev Positions store additional state for tracking fees owed to the position"},"fullyImplemented":true,"id":4959,"linearizedBaseContracts":[4959],"name":"Position","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Position.Info","id":4803,"members":[{"constant":false,"id":4794,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4803,"src":"526:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4793,"name":"uint128","nodeType":"ElementaryTypeName","src":"526:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4796,"mutability":"mutable","name":"feeGrowthInside0LastX128","nodeType":"VariableDeclaration","scope":4803,"src":"647:32:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4795,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4798,"mutability":"mutable","name":"feeGrowthInside1LastX128","nodeType":"VariableDeclaration","scope":4803,"src":"690:32:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4797,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4800,"mutability":"mutable","name":"tokensOwed0","nodeType":"VariableDeclaration","scope":4803,"src":"798:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4799,"name":"uint128","nodeType":"ElementaryTypeName","src":"798:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"tokensOwed1","nodeType":"VariableDeclaration","scope":4803,"src":"828:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4801,"name":"uint128","nodeType":"ElementaryTypeName","src":"828:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"Info","nodeType":"StructDefinition","scope":4959,"src":"444:411:22","visibility":"public"},{"body":{"id":4832,"nodeType":"Block","src":"1489:92:22","statements":[{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"1500:8:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4820,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"1511:4:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info storage ref)"}},"id":4829,"indexExpression":{"arguments":[{"arguments":[{"id":4824,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"1543:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4825,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"1550:9:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4826,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"1561:9:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"expression":{"id":4822,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1526:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1526:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1526:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4821,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1516:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1516:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1511:62:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage","typeString":"struct Position.Info storage ref"}},"src":"1500:73:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":4831,"nodeType":"ExpressionStatement","src":"1500:73:22"}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"863:421:22","text":"@notice Returns the Info struct of a position, given an owner and position boundaries\n @param self The mapping containing all user positions\n @param owner The address of the position owner\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @return position The position info struct of the given owners' position"},"id":4833,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4833,"src":"1313:37:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info)"},"typeName":{"id":4807,"keyType":{"id":4805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1321:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1313:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Info_$4803_storage_$","typeString":"mapping(bytes32 => struct Position.Info)"},"valueType":{"id":4806,"name":"Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"1332:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":4833,"src":"1361:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4809,"name":"address","nodeType":"ElementaryTypeName","src":"1361:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4812,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":4833,"src":"1385:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4811,"name":"int24","nodeType":"ElementaryTypeName","src":"1385:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4814,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":4833,"src":"1411:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4813,"name":"int24","nodeType":"ElementaryTypeName","src":"1411:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1302:131:22"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"position","nodeType":"VariableDeclaration","scope":4833,"src":"1457:30:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"},"typeName":{"id":4816,"name":"Position.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"1457:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"}],"src":"1456:32:22"},"scope":4959,"src":"1290:291:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4957,"nodeType":"Block","src":"2238:1229:22","statements":[{"assignments":[4846],"declarations":[{"constant":false,"id":4846,"mutability":"mutable","name":"_self","nodeType":"VariableDeclaration","scope":4957,"src":"2249:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info"},"typeName":{"id":4845,"name":"Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"2249:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"}],"id":4848,"initialValue":{"id":4847,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"2269:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2249:24:22"},{"assignments":[4850],"declarations":[{"constant":false,"id":4850,"mutability":"mutable","name":"liquidityNext","nodeType":"VariableDeclaration","scope":4957,"src":"2286:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4849,"name":"uint128","nodeType":"ElementaryTypeName","src":"2286:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4851,"nodeType":"VariableDeclarationStatement","src":"2286:21:22"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"2322:14:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2340:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2322:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4878,"nodeType":"Block","src":"2500:98:22","statements":[{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4869,"name":"liquidityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"2515:13:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4872,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2554:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"2554:15:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":4874,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"2571:14:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":4870,"name":"LiquidityMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"2531:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LiquidityMath_$3921_$","typeString":"type(library LiquidityMath)"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addDelta","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"2531:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$","typeString":"function (uint128,int128) pure returns (uint128)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2531:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2515:71:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4877,"nodeType":"ExpressionStatement","src":"2515:71:22"}]},"id":4879,"nodeType":"IfStatement","src":"2318:280:22","trueBody":{"id":4868,"nodeType":"Block","src":"2343:151:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4856,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2366:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"2366:15:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2366:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e50","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2387:4:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d","typeString":"literal_string \"NP\""},"value":"NP"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb814de87c671cfe97a338672e9700a9288a1a6d16839e238618b2b7f2aa86d","typeString":"literal_string \"NP\""}],"id":4855,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2358:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2358:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4862,"nodeType":"ExpressionStatement","src":"2358:34:22"},{"expression":{"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4863,"name":"liquidityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"2451:13:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4864,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2467:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"2467:15:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"2451:31:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4867,"nodeType":"ExpressionStatement","src":"2451:31:22"}]}},{"assignments":[4881],"declarations":[{"constant":false,"id":4881,"mutability":"mutable","name":"tokensOwed0","nodeType":"VariableDeclaration","scope":4957,"src":"2649:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4880,"name":"uint128","nodeType":"ElementaryTypeName","src":"2649:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4896,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"feeGrowthInside0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"2709:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4887,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2732:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthInside0LastX128","nodeType":"MemberAccess","referencedDeclaration":4796,"src":"2732:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2709:53:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4890,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2764:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"2764:15:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":4892,"name":"FixedPoint128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2781:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint128_$3686_$","typeString":"type(library FixedPoint128)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q128","nodeType":"MemberAccess","referencedDeclaration":3685,"src":"2781:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4884,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"2693:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"2693:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2693:107:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2671:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4882,"name":"uint128","nodeType":"ElementaryTypeName","src":"2671:7:22","typeDescriptions":{}}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2671:140:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"2649:162:22"},{"assignments":[4898],"declarations":[{"constant":false,"id":4898,"mutability":"mutable","name":"tokensOwed1","nodeType":"VariableDeclaration","scope":4957,"src":"2822:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4897,"name":"uint128","nodeType":"ElementaryTypeName","src":"2822:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":4913,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"feeGrowthInside1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"2882:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4904,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2905:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthInside1LastX128","nodeType":"MemberAccess","referencedDeclaration":4798,"src":"2905:30:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2882:53:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4907,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4846,"src":"2937:5:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_memory_ptr","typeString":"struct Position.Info memory"}},"id":4908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"2937:15:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":4909,"name":"FixedPoint128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2954:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint128_$3686_$","typeString":"type(library FixedPoint128)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q128","nodeType":"MemberAccess","referencedDeclaration":3685,"src":"2954:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4901,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"2866:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"2866:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2866:107:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4899,"name":"uint128","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:140:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"2822:162:22"},{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4914,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"3033:14:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3051:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3033:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4923,"nodeType":"IfStatement","src":"3029:55:22","trueBody":{"expression":{"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4917,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"3054:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":4919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":4794,"src":"3054:14:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4920,"name":"liquidityNext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"3071:13:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3054:30:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4922,"nodeType":"ExpressionStatement","src":"3054:30:22"}},{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4924,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"3095:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":4926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthInside0LastX128","nodeType":"MemberAccess","referencedDeclaration":4796,"src":"3095:29:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4927,"name":"feeGrowthInside0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"3127:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3095:52:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4929,"nodeType":"ExpressionStatement","src":"3095:52:22"},{"expression":{"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4930,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"3158:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":4932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthInside1LastX128","nodeType":"MemberAccess","referencedDeclaration":4798,"src":"3158:29:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4933,"name":"feeGrowthInside1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"3190:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3158:52:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4935,"nodeType":"ExpressionStatement","src":"3158:52:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4936,"name":"tokensOwed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"3225:11:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3239:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3225:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"tokensOwed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"3244:11:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3244:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3225:34:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4956,"nodeType":"IfStatement","src":"3221:239:22","trueBody":{"id":4955,"nodeType":"Block","src":"3261:199:22","statements":[{"expression":{"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4943,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"3371:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":4945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensOwed0","nodeType":"MemberAccess","referencedDeclaration":4800,"src":"3371:16:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4946,"name":"tokensOwed0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"3391:11:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3371:31:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4948,"nodeType":"ExpressionStatement","src":"3371:31:22"},{"expression":{"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4949,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"3417:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info storage pointer"}},"id":4951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokensOwed1","nodeType":"MemberAccess","referencedDeclaration":4802,"src":"3417:16:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4952,"name":"tokensOwed1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"3437:11:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"3417:31:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":4954,"nodeType":"ExpressionStatement","src":"3417:31:22"}]}}]},"documentation":{"id":4834,"nodeType":"StructuredDocumentation","src":"1589:473:22","text":"@notice Credits accumulated fees to a user's position\n @param self The individual position to update\n @param liquidityDelta The change in pool liquidity as a result of the position update\n @param feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @param feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries"},"id":4958,"implemented":true,"kind":"function","modifiers":[],"name":"update","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":4958,"src":"2094:17:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"},"typeName":{"id":4835,"name":"Info","nodeType":"UserDefinedTypeName","referencedDeclaration":4803,"src":"2094:4:22","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$4803_storage_ptr","typeString":"struct Position.Info"}},"visibility":"internal"},{"constant":false,"id":4838,"mutability":"mutable","name":"liquidityDelta","nodeType":"VariableDeclaration","scope":4958,"src":"2122:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4837,"name":"int128","nodeType":"ElementaryTypeName","src":"2122:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"feeGrowthInside0X128","nodeType":"VariableDeclaration","scope":4958,"src":"2154:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"feeGrowthInside1X128","nodeType":"VariableDeclaration","scope":4958,"src":"2193:28:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2083:145:22"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[],"src":"2238:0:22"},"scope":4959,"src":"2068:1399:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4960,"src":"375:3095:22"}],"src":"46:3426:22"},"id":22},"contracts/libraries/SafeCast.sol":{"ast":{"absolutePath":"contracts/libraries/SafeCast.sol","exportedSymbols":{"SafeCast":[5029]},"id":5030,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":4961,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:23"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4962,"nodeType":"StructuredDocumentation","src":"74:96:23","text":"@title Safe casting methods\n @notice Contains methods for safely casting between types"},"fullyImplemented":true,"id":5029,"linearizedBaseContracts":[5029],"name":"SafeCast","nodeType":"ContractDefinition","nodes":[{"body":{"id":4982,"nodeType":"Block","src":"430:49:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4971,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"450:1:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4974,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"462:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"454:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4972,"name":"uint160","nodeType":"ElementaryTypeName","src":"454:7:23","typeDescriptions":{}}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"454:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"450:14:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":4977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"449:16:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4978,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"469:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"449:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"441:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"441:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4981,"nodeType":"ExpressionStatement","src":"441:30:23"}]},"documentation":{"id":4963,"nodeType":"StructuredDocumentation","src":"194:166:23","text":"@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"},"id":4983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nodeType":"FunctionDefinition","parameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":4983,"src":"385:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4964,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"384:11:23"},"returnParameters":{"id":4969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4968,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":4983,"src":"419:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4967,"name":"uint160","nodeType":"ElementaryTypeName","src":"419:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"418:11:23"},"scope":5029,"src":"366:113:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5003,"nodeType":"Block","src":"729:48:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4992,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"749:1:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4995,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"760:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"753:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4993,"name":"int128","nodeType":"ElementaryTypeName","src":"753:6:23","typeDescriptions":{}}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"753:9:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"749:13:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"id":4998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"748:15:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4999,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"767:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"748:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"740:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"740:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5002,"nodeType":"ExpressionStatement","src":"740:29:23"}]},"documentation":{"id":4984,"nodeType":"StructuredDocumentation","src":"487:175:23","text":"@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"},"id":5004,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nodeType":"FunctionDefinition","parameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":5004,"src":"686:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4985,"name":"int256","nodeType":"ElementaryTypeName","src":"686:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"685:10:23"},"returnParameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":5004,"src":"719:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4988,"name":"int128","nodeType":"ElementaryTypeName","src":"719:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"718:10:23"},"scope":5029,"src":"668:109:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5027,"nodeType":"Block","src":"1009:62:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"1028:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1032:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1032:6:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"src":"1028:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1020:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5019,"nodeType":"ExpressionStatement","src":"1020:19:23"},{"expression":{"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"1050:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5023,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"1061:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1054:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5021,"name":"int256","nodeType":"ElementaryTypeName","src":"1054:6:23","typeDescriptions":{}}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1054:9:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1050:13:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5026,"nodeType":"ExpressionStatement","src":"1050:13:23"}]},"documentation":{"id":5005,"nodeType":"StructuredDocumentation","src":"785:156:23","text":"@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"},"id":5028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nodeType":"FunctionDefinition","parameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":5028,"src":"965:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"964:11:23"},"returnParameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":5028,"src":"999:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5009,"name":"int256","nodeType":"ElementaryTypeName","src":"999:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"998:10:23"},"scope":5029,"src":"947:124:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5030,"src":"170:904:23"}],"src":"46:1030:23"},"id":23},"contracts/libraries/SqrtPriceMath.sol":{"ast":{"absolutePath":"contracts/libraries/SqrtPriceMath.sol","exportedSymbols":{"FixedPoint96":[3696],"FullMath":[3869],"LowGasSafeMath":[4051],"SafeCast":[5029],"SqrtPriceMath":[5545],"UnsafeMath":[7116]},"id":5546,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5031,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:24"},{"absolutePath":"contracts/libraries/LowGasSafeMath.sol","file":"./LowGasSafeMath.sol","id":5032,"nodeType":"ImportDirective","scope":5546,"sourceUnit":4052,"src":"74:30:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SafeCast.sol","file":"./SafeCast.sol","id":5033,"nodeType":"ImportDirective","scope":5546,"sourceUnit":5030,"src":"106:24:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/FullMath.sol","file":"./FullMath.sol","id":5034,"nodeType":"ImportDirective","scope":5546,"sourceUnit":3870,"src":"134:24:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/UnsafeMath.sol","file":"./UnsafeMath.sol","id":5035,"nodeType":"ImportDirective","scope":5546,"sourceUnit":7117,"src":"160:26:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/FixedPoint96.sol","file":"./FixedPoint96.sol","id":5036,"nodeType":"ImportDirective","scope":5546,"sourceUnit":3697,"src":"188:28:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"220:169:24","text":"@title Functions based on Q64.96 sqrt price and liquidity\n @notice Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas"},"fullyImplemented":true,"id":5545,"linearizedBaseContracts":[5545],"name":"SqrtPriceMath","nodeType":"ContractDefinition","nodes":[{"id":5040,"libraryName":{"id":5038,"name":"LowGasSafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":4051,"src":"424:14:24","typeDescriptions":{"typeIdentifier":"t_contract$_LowGasSafeMath_$4051","typeString":"library LowGasSafeMath"}},"nodeType":"UsingForDirective","src":"418:33:24","typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"443:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":5043,"libraryName":{"id":5041,"name":"SafeCast","nodeType":"UserDefinedTypeName","referencedDeclaration":5029,"src":"463:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_SafeCast_$5029","typeString":"library SafeCast"}},"nodeType":"UsingForDirective","src":"457:27:24","typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"476:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":5162,"nodeType":"Block","src":"1625:1209:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"1753:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1763:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1753:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"IfStatement","src":"1749:32:24","trueBody":{"expression":{"id":5060,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"1773:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5056,"id":5061,"nodeType":"Return","src":"1766:15:24"}},{"assignments":[5064],"declarations":[{"constant":false,"id":5064,"mutability":"mutable","name":"numerator1","nodeType":"VariableDeclaration","scope":5162,"src":"1792:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5072,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5067,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"1821:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1813:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:24","typeDescriptions":{}}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1813:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"expression":{"id":5069,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"1835:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RESOLUTION","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"1835:23:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1813:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1792:66:24"},{"condition":{"id":5073,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"1875:3:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5160,"nodeType":"Block","src":"2376:451:24","statements":[{"assignments":[5126],"declarations":[{"constant":false,"id":5126,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":5160,"src":"2391:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2391:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5127,"nodeType":"VariableDeclarationStatement","src":"2391:15:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5129,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"2590:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5130,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"2600:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5131,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"2609:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2600:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2590:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2589:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5135,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"2621:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2589:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5137,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"2631:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2589:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5139,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2643:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5140,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"2656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2643:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2589:74:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5128,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2581:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2581:83:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5144,"nodeType":"ExpressionStatement","src":"2581:83:24"},{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":5160,"src":"2679:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5147,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2701:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5148,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"2714:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2701:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2679:42:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5153,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2769:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5154,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"2781:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5155,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"2791:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5151,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"2743:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"2743:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2743:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"2743:70:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2743:72:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5056,"id":5159,"nodeType":"Return","src":"2736:79:24"}]},"id":5161,"nodeType":"IfStatement","src":"1871:956:24","trueBody":{"id":5124,"nodeType":"Block","src":"1880:490:24","statements":[{"assignments":[5075],"declarations":[{"constant":false,"id":5075,"mutability":"mutable","name":"product","nodeType":"VariableDeclaration","scope":5124,"src":"1895:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5076,"nodeType":"VariableDeclarationStatement","src":"1895:15:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5077,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"1930:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5078,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"1940:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5079,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"1949:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1940:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1929:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"1961:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1929:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5085,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"1971:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1929:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5108,"nodeType":"IfStatement","src":"1925:328:24","trueBody":{"id":5107,"nodeType":"Block","src":"1981:272:24","statements":[{"assignments":[5088],"declarations":[{"constant":false,"id":5088,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":5107,"src":"2000:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5092,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5089,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2022:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5090,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"2035:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2022:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2000:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5093,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"2065:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5094,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2080:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5106,"nodeType":"IfStatement","src":"2061:176:24","trueBody":{"expression":{"arguments":[{"arguments":[{"id":5100,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2202:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5101,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"2214:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"2224:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5098,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"2176:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"2176:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2176:60:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5096,"name":"uint160","nodeType":"ElementaryTypeName","src":"2168:7:24","typeDescriptions":{}}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2168:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5056,"id":5105,"nodeType":"Return","src":"2161:76:24"}}]}},{"expression":{"arguments":[{"arguments":[{"id":5113,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2309:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5119,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"2349:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5114,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"2322:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5115,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"2335:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2322:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2321:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"2321:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5111,"name":"UnsafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"2284:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UnsafeMath_$7116_$","typeString":"type(library UnsafeMath)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divRoundingUp","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"2284:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2284:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2276:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5109,"name":"uint160","nodeType":"ElementaryTypeName","src":"2276:7:24","typeDescriptions":{}}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2276:82:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5056,"id":5123,"nodeType":"Return","src":"2269:89:24"}]}}]},"documentation":{"id":5044,"nodeType":"StructuredDocumentation","src":"492:942:24","text":"@notice Gets the next sqrt price given a delta of token0\n @dev Always rounds up, because in the exact output case (increasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (decreasing price) we need to move the\n price less in order to not send too much output.\n The most precise formula for this is liquidity * sqrtPX96 / (liquidity +- amount * sqrtPX96),\n if this is impossible because of overflow, we calculate liquidity / (liquidity / sqrtPX96 +- amount).\n @param sqrtPX96 The starting price, i.e. before accounting for the token0 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token0 to add or remove from virtual reserves\n @param add Whether to add or remove the amount of token0\n @return The price after adding or removing amount, depending on add"},"id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"getNextSqrtPriceFromAmount0RoundingUp","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5046,"mutability":"mutable","name":"sqrtPX96","nodeType":"VariableDeclaration","scope":5163,"src":"1497:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5045,"name":"uint160","nodeType":"ElementaryTypeName","src":"1497:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5048,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5163,"src":"1524:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5047,"name":"uint128","nodeType":"ElementaryTypeName","src":"1524:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5050,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":5163,"src":"1552:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"add","nodeType":"VariableDeclaration","scope":5163,"src":"1577:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5051,"name":"bool","nodeType":"ElementaryTypeName","src":"1577:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1486:106:24"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5163,"src":"1616:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5054,"name":"uint160","nodeType":"ElementaryTypeName","src":"1616:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1615:9:24"},"scope":5545,"src":"1440:1394:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5257,"nodeType":"Block","src":"3859:929:24","statements":[{"condition":{"id":5177,"name":"add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"4030:3:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5255,"nodeType":"Block","src":"4362:419:24","statements":[{"assignments":[5216],"declarations":[{"constant":false,"id":5216,"mutability":"mutable","name":"quotient","nodeType":"VariableDeclaration","scope":5255,"src":"4377:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5241,"initialValue":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4415:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4430:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5219,"name":"uint160","nodeType":"ElementaryTypeName","src":"4430:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4425:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4425:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4415:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5234,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4586:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5235,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4594:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q96","nodeType":"MemberAccess","referencedDeclaration":3695,"src":"4594:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5237,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"4612:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":5232,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"4560:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"4560:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4560:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4415:207:24","trueExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4491:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"expression":{"id":5227,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4501:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RESOLUTION","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"4501:23:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4491:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5230,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"4526:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":5224,"name":"UnsafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"4466:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UnsafeMath_$7116_$","typeString":"type(library UnsafeMath)"}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divRoundingUp","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"4466:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4466:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4396:241:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4377:260:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"4662:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5244,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"4673:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4662:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4654:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4654:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5247,"nodeType":"ExpressionStatement","src":"4654:28:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5250,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"4749:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5251,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"4760:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4749:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4741:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5248,"name":"uint160","nodeType":"ElementaryTypeName","src":"4741:7:24","typeDescriptions":{}}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4741:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5176,"id":5254,"nodeType":"Return","src":"4734:35:24"}]},"id":5256,"nodeType":"IfStatement","src":"4026:755:24","trueBody":{"id":5214,"nodeType":"Block","src":"4035:321:24","statements":[{"assignments":[5179],"declarations":[{"constant":false,"id":5179,"mutability":"mutable","name":"quotient","nodeType":"VariableDeclaration","scope":5214,"src":"4050:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4050:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5203,"initialValue":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5180,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4088:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4103:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5182,"name":"uint160","nodeType":"ElementaryTypeName","src":"4103:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5181,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4098:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4098:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4098:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4088:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5196,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4226:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5197,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4234:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q96","nodeType":"MemberAccess","referencedDeclaration":3695,"src":"4234:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5199,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"4252:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":5194,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"4210:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"4210:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4210:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4088:174:24","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5187,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"4140:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"expression":{"id":5188,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4150:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RESOLUTION","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"4150:23:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4140:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4139:35:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5192,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5168,"src":"4177:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"4139:47:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4069:208:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4050:227:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5209,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4323:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5206,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"4309:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4301:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4301:7:24","typeDescriptions":{}}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4301:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3946,"src":"4301:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4301:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint160","nodeType":"MemberAccess","referencedDeclaration":4983,"src":"4301:41:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint160_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (uint160)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4301:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5176,"id":5213,"nodeType":"Return","src":"4294:50:24"}]}}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"2842:824:24","text":"@notice Gets the next sqrt price given a delta of token1\n @dev Always rounds down, because in the exact output case (decreasing price) we need to move the price at least\n far enough to get the desired output amount, and in the exact input case (increasing price) we need to move the\n price less in order to not send too much output.\n The formula we compute is within <1 wei of the lossless version: sqrtPX96 +- amount / liquidity\n @param sqrtPX96 The starting price, i.e., before accounting for the token1 delta\n @param liquidity The amount of usable liquidity\n @param amount How much of token1 to add, or remove, from virtual reserves\n @param add Whether to add, or remove, the amount of token1\n @return The price after adding or removing `amount`"},"id":5258,"implemented":true,"kind":"function","modifiers":[],"name":"getNextSqrtPriceFromAmount1RoundingDown","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"sqrtPX96","nodeType":"VariableDeclaration","scope":5258,"src":"3731:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5165,"name":"uint160","nodeType":"ElementaryTypeName","src":"3731:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5168,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5258,"src":"3758:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5167,"name":"uint128","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5170,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":5258,"src":"3786:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3786:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5172,"mutability":"mutable","name":"add","nodeType":"VariableDeclaration","scope":5258,"src":"3811:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5171,"name":"bool","nodeType":"ElementaryTypeName","src":"3811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3720:106:24"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5258,"src":"3850:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5174,"name":"uint160","nodeType":"ElementaryTypeName","src":"3850:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"3849:9:24"},"scope":5545,"src":"3672:1116:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5299,"nodeType":"Block","src":"5537:373:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"5556:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5567:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5556:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5548:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5548:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5277,"nodeType":"ExpressionStatement","src":"5548:21:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5279,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5588:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5600:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5588:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5580:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5580:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5283,"nodeType":"ExpressionStatement","src":"5580:22:24"},{"expression":{"condition":{"id":5284,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"5702:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5292,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"5866:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5293,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5876:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5294,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"5887:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5897:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5291,"name":"getNextSqrtPriceFromAmount1RoundingDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"5826:39:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$","typeString":"function (uint160,uint128,uint256,bool) pure returns (uint160)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5826:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5702:200:24","trueExpression":{"arguments":[{"id":5286,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"5770:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5287,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5780:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5288,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"5791:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5801:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5285,"name":"getNextSqrtPriceFromAmount0RoundingUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"5732:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$","typeString":"function (uint160,uint128,uint256,bool) pure returns (uint160)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5732:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5271,"id":5298,"nodeType":"Return","src":"5682:220:24"}]},"documentation":{"id":5259,"nodeType":"StructuredDocumentation","src":"4796:544:24","text":"@notice Gets the next sqrt price given an input amount of token0 or token1\n @dev Throws if price or liquidity are 0, or if the next price is out of bounds\n @param sqrtPX96 The starting price, i.e., before accounting for the input amount\n @param liquidity The amount of usable liquidity\n @param amountIn How much of token0, or token1, is being swapped in\n @param zeroForOne Whether the amount in is token0 or token1\n @return sqrtQX96 The price after adding the input amount to token0 or token1"},"id":5300,"implemented":true,"kind":"function","modifiers":[],"name":"getNextSqrtPriceFromInput","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5261,"mutability":"mutable","name":"sqrtPX96","nodeType":"VariableDeclaration","scope":5300,"src":"5391:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5260,"name":"uint160","nodeType":"ElementaryTypeName","src":"5391:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5263,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5300,"src":"5418:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5262,"name":"uint128","nodeType":"ElementaryTypeName","src":"5418:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5265,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":5300,"src":"5446:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5446:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5267,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":5300,"src":"5473:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5266,"name":"bool","nodeType":"ElementaryTypeName","src":"5473:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5380:115:24"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"sqrtQX96","nodeType":"VariableDeclaration","scope":5300,"src":"5519:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5269,"name":"uint160","nodeType":"ElementaryTypeName","src":"5519:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"5518:18:24"},"scope":5545,"src":"5346:564:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5341,"nodeType":"Block","src":"6658:371:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5315,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"6677:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6688:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6677:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6669:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6669:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5319,"nodeType":"ExpressionStatement","src":"6669:21:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"6709:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6709:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6701:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6701:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5325,"nodeType":"ExpressionStatement","src":"6701:22:24"},{"expression":{"condition":{"id":5326,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"6817:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5334,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"6983:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5335,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"6993:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5336,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"7004:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7015:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5333,"name":"getNextSqrtPriceFromAmount0RoundingUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"6945:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$","typeString":"function (uint160,uint128,uint256,bool) pure returns (uint160)"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6945:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6817:204:24","trueExpression":{"arguments":[{"id":5328,"name":"sqrtPX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5303,"src":"6887:8:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5329,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"6897:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5330,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5307,"src":"6908:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6919:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5327,"name":"getNextSqrtPriceFromAmount1RoundingDown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"6847:39:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$","typeString":"function (uint160,uint128,uint256,bool) pure returns (uint160)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6847:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5313,"id":5340,"nodeType":"Return","src":"6797:224:24"}]},"documentation":{"id":5301,"nodeType":"StructuredDocumentation","src":"5918:541:24","text":"@notice Gets the next sqrt price given an output amount of token0 or token1\n @dev Throws if price or liquidity are 0 or the next price is out of bounds\n @param sqrtPX96 The starting price before accounting for the output amount\n @param liquidity The amount of usable liquidity\n @param amountOut How much of token0, or token1, is being swapped out\n @param zeroForOne Whether the amount out is token0 or token1\n @return sqrtQX96 The price after removing the output amount of token0 or token1"},"id":5342,"implemented":true,"kind":"function","modifiers":[],"name":"getNextSqrtPriceFromOutput","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5303,"mutability":"mutable","name":"sqrtPX96","nodeType":"VariableDeclaration","scope":5342,"src":"6511:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5302,"name":"uint160","nodeType":"ElementaryTypeName","src":"6511:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5305,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5342,"src":"6538:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5304,"name":"uint128","nodeType":"ElementaryTypeName","src":"6538:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5307,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":5342,"src":"6566:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6566:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5309,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":5342,"src":"6594:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5308,"name":"bool","nodeType":"ElementaryTypeName","src":"6594:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6500:116:24"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"sqrtQX96","nodeType":"VariableDeclaration","scope":5342,"src":"6640:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5311,"name":"uint160","nodeType":"ElementaryTypeName","src":"6640:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"6639:18:24"},"scope":5545,"src":"6465:564:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5411,"nodeType":"Block","src":"7774:612:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"7789:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5357,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7805:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7789:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5367,"nodeType":"IfStatement","src":"7785:98:24","trueBody":{"expression":{"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5359,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"7821:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5360,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7836:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5361,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"7820:30:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5362,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7854:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5363,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"7869:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7853:30:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"src":"7820:63:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5366,"nodeType":"ExpressionStatement","src":"7820:63:24"}},{"assignments":[5369],"declarations":[{"constant":false,"id":5369,"mutability":"mutable","name":"numerator1","nodeType":"VariableDeclaration","scope":5411,"src":"7896:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"7896:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5377,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5372,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"7925:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7917:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"7917:7:24","typeDescriptions":{}}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7917:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"expression":{"id":5374,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"7939:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"RESOLUTION","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"7939:23:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7917:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7896:66:24"},{"assignments":[5379],"declarations":[{"constant":false,"id":5379,"mutability":"mutable","name":"numerator2","nodeType":"VariableDeclaration","scope":5411,"src":"7973:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5378,"name":"uint256","nodeType":"ElementaryTypeName","src":"7973:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5383,"initialValue":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7994:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5381,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"8010:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7994:29:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"7973:50:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"8044:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8060:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8044:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8036:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8036:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5389,"nodeType":"ExpressionStatement","src":"8036:26:24"},{"expression":{"condition":{"id":5390,"name":"roundUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"8095:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5403,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"8324:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5404,"name":"numerator2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"8336:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5405,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"8348:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":5401,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"8308:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"8308:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8308:54:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5407,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"8365:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"8308:70:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8095:283:24","trueExpression":{"arguments":[{"arguments":[{"id":5395,"name":"numerator1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"8195:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5396,"name":"numerator2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"8207:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5397,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"8219:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":5393,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"8169:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"8169:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8169:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5399,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"8256:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":5391,"name":"UnsafeMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"8122:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UnsafeMath_$7116_$","typeString":"type(library UnsafeMath)"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"divRoundingUp","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"8122:24:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:166:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5355,"id":5410,"nodeType":"Return","src":"8075:303:24"}]},"documentation":{"id":5343,"nodeType":"StructuredDocumentation","src":"7037:544:24","text":"@notice Gets the amount0 delta between two prices\n @dev Calculates liquidity / sqrt(lower) - liquidity / sqrt(upper),\n i.e. liquidity * (sqrt(upper) - sqrt(lower)) / (sqrt(upper) * sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up or down\n @return amount0 Amount of token0 required to cover a position of size liquidity between the two passed prices"},"id":5412,"implemented":true,"kind":"function","modifiers":[],"name":"getAmount0Delta","nodeType":"FunctionDefinition","parameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5345,"mutability":"mutable","name":"sqrtRatioAX96","nodeType":"VariableDeclaration","scope":5412,"src":"7622:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5344,"name":"uint160","nodeType":"ElementaryTypeName","src":"7622:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5347,"mutability":"mutable","name":"sqrtRatioBX96","nodeType":"VariableDeclaration","scope":5412,"src":"7654:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5346,"name":"uint160","nodeType":"ElementaryTypeName","src":"7654:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5349,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5412,"src":"7686:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5348,"name":"uint128","nodeType":"ElementaryTypeName","src":"7686:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5351,"mutability":"mutable","name":"roundUp","nodeType":"VariableDeclaration","scope":5412,"src":"7714:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5350,"name":"bool","nodeType":"ElementaryTypeName","src":"7714:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7611:122:24"},"returnParameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":5412,"src":"7757:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5353,"name":"uint256","nodeType":"ElementaryTypeName","src":"7757:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7756:17:24"},"scope":5545,"src":"7587:799:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5459,"nodeType":"Block","src":"9037:357:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"9052:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5427,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9068:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9052:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5437,"nodeType":"IfStatement","src":"9048:98:24","trueBody":{"expression":{"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5429,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"9084:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5430,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9099:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5431,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"9083:30:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5432,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9117:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5433,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"9132:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"id":5434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9116:30:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_uint160_$","typeString":"tuple(uint160,uint160)"}},"src":"9083:63:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5436,"nodeType":"ExpressionStatement","src":"9083:63:24"}},{"expression":{"condition":{"id":5438,"name":"roundUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"9179:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5450,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"9327:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9338:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5452,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"9354:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9338:29:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":5454,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"9369:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q96","nodeType":"MemberAccess","referencedDeclaration":3695,"src":"9369:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5448,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"9311:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"9311:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9311:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9179:207:24","trueExpression":{"arguments":[{"id":5441,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"9232:9:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9243:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5443,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"9259:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9243:29:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"expression":{"id":5445,"name":"FixedPoint96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"9274:12:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FixedPoint96_$3696_$","typeString":"type(library FixedPoint96)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Q96","nodeType":"MemberAccess","referencedDeclaration":3695,"src":"9274:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5439,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"9206:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"9206:25:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9206:85:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5425,"id":5458,"nodeType":"Return","src":"9159:227:24"}]},"documentation":{"id":5413,"nodeType":"StructuredDocumentation","src":"8394:450:24","text":"@notice Gets the amount1 delta between two prices\n @dev Calculates liquidity * (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The amount of usable liquidity\n @param roundUp Whether to round the amount up, or down\n @return amount1 Amount of token1 required to cover a position of size liquidity between the two passed prices"},"id":5460,"implemented":true,"kind":"function","modifiers":[],"name":"getAmount1Delta","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"sqrtRatioAX96","nodeType":"VariableDeclaration","scope":5460,"src":"8885:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5414,"name":"uint160","nodeType":"ElementaryTypeName","src":"8885:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5417,"mutability":"mutable","name":"sqrtRatioBX96","nodeType":"VariableDeclaration","scope":5460,"src":"8917:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5416,"name":"uint160","nodeType":"ElementaryTypeName","src":"8917:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5419,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5460,"src":"8949:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5418,"name":"uint128","nodeType":"ElementaryTypeName","src":"8949:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"roundUp","nodeType":"VariableDeclaration","scope":5460,"src":"8977:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5420,"name":"bool","nodeType":"ElementaryTypeName","src":"8977:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8874:122:24"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":5460,"src":"9020:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5423,"name":"uint256","nodeType":"ElementaryTypeName","src":"9020:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9019:17:24"},"scope":5545,"src":"8850:544:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5501,"nodeType":"Block","src":"9907:259:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"9938:9:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9938:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5489,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"10092:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5490,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"10107:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"id":5493,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"10130:9:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10122:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5491,"name":"uint128","nodeType":"ElementaryTypeName","src":"10122:7:24","typeDescriptions":{}}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10122:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"74727565","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10142:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5488,"name":"getAmount0Delta","nodeType":"Identifier","overloadedDeclarations":[5412,5502],"referencedDeclaration":5412,"src":"10076:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10076:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"10076:80:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10076:82:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9938:220:24","trueExpression":{"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9971:85:24","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5476,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"9988:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5477,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"10003:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10026:10:24","subExpression":{"id":5480,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"10027:9:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5478,"name":"uint128","nodeType":"ElementaryTypeName","src":"10018:7:24","typeDescriptions":{}}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10018:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"66616c7365","id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10039:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5475,"name":"getAmount0Delta","nodeType":"Identifier","overloadedDeclarations":[5412,5502],"referencedDeclaration":5412,"src":"9972:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9972:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"9972:82:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9972:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5471,"id":5500,"nodeType":"Return","src":"9918:240:24"}]},"documentation":{"id":5461,"nodeType":"StructuredDocumentation","src":"9402:337:24","text":"@notice Helper that gets signed token0 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount0 delta\n @return amount0 Amount of token0 corresponding to the passed liquidityDelta between the two prices"},"id":5502,"implemented":true,"kind":"function","modifiers":[],"name":"getAmount0Delta","nodeType":"FunctionDefinition","parameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"sqrtRatioAX96","nodeType":"VariableDeclaration","scope":5502,"src":"9780:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5462,"name":"uint160","nodeType":"ElementaryTypeName","src":"9780:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5465,"mutability":"mutable","name":"sqrtRatioBX96","nodeType":"VariableDeclaration","scope":5502,"src":"9812:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5464,"name":"uint160","nodeType":"ElementaryTypeName","src":"9812:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5502,"src":"9844:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5466,"name":"int128","nodeType":"ElementaryTypeName","src":"9844:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"9769:98:24"},"returnParameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":5502,"src":"9891:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5469,"name":"int256","nodeType":"ElementaryTypeName","src":"9891:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9890:16:24"},"scope":5545,"src":"9745:421:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5543,"nodeType":"Block","src":"10679:259:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int128","typeString":"int128"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5514,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"10710:9:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10722:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10710:13:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5531,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"10864:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5532,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"10879:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"id":5535,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"10902:9:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10894:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5533,"name":"uint128","nodeType":"ElementaryTypeName","src":"10894:7:24","typeDescriptions":{}}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10894:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"74727565","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10914:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5530,"name":"getAmount1Delta","nodeType":"Identifier","overloadedDeclarations":[5460,5544],"referencedDeclaration":5460,"src":"10848:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10848:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"10848:80:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10848:82:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10710:220:24","trueExpression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10743:85:24","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5518,"name":"sqrtRatioAX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"10760:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5519,"name":"sqrtRatioBX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"10775:13:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"arguments":[{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10798:10:24","subExpression":{"id":5522,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"10799:9:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10790:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5520,"name":"uint128","nodeType":"ElementaryTypeName","src":"10790:7:24","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10790:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"66616c7365","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10811:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5517,"name":"getAmount1Delta","nodeType":"Identifier","overloadedDeclarations":[5460,5544],"referencedDeclaration":5460,"src":"10744:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt256","nodeType":"MemberAccess","referencedDeclaration":5028,"src":"10744:82:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (int256)"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5513,"id":5542,"nodeType":"Return","src":"10690:240:24"}]},"documentation":{"id":5503,"nodeType":"StructuredDocumentation","src":"10174:337:24","text":"@notice Helper that gets signed token1 delta\n @param sqrtRatioAX96 A sqrt price\n @param sqrtRatioBX96 Another sqrt price\n @param liquidity The change in liquidity for which to compute the amount1 delta\n @return amount1 Amount of token1 corresponding to the passed liquidityDelta between the two prices"},"id":5544,"implemented":true,"kind":"function","modifiers":[],"name":"getAmount1Delta","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"sqrtRatioAX96","nodeType":"VariableDeclaration","scope":5544,"src":"10552:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5504,"name":"uint160","nodeType":"ElementaryTypeName","src":"10552:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"sqrtRatioBX96","nodeType":"VariableDeclaration","scope":5544,"src":"10584:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5506,"name":"uint160","nodeType":"ElementaryTypeName","src":"10584:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5544,"src":"10616:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5508,"name":"int128","nodeType":"ElementaryTypeName","src":"10616:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"10541:98:24"},"returnParameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":5544,"src":"10663:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5511,"name":"int256","nodeType":"ElementaryTypeName","src":"10663:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"10662:16:24"},"scope":5545,"src":"10517:421:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5546,"src":"389:10552:24"}],"src":"46:10897:24"},"id":24},"contracts/libraries/SwapMath.sol":{"ast":{"absolutePath":"contracts/libraries/SwapMath.sol","exportedSymbols":{"FixedPoint96":[3696],"FullMath":[3869],"LowGasSafeMath":[4051],"SafeCast":[5029],"SqrtPriceMath":[5545],"SwapMath":[5806],"UnsafeMath":[7116]},"id":5807,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5547,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:25"},{"absolutePath":"contracts/libraries/FullMath.sol","file":"./FullMath.sol","id":5548,"nodeType":"ImportDirective","scope":5807,"sourceUnit":3870,"src":"74:24:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SqrtPriceMath.sol","file":"./SqrtPriceMath.sol","id":5549,"nodeType":"ImportDirective","scope":5807,"sourceUnit":5546,"src":"100:29:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5550,"nodeType":"StructuredDocumentation","src":"133:175:25","text":"@title Computes the result of a swap within ticks\n @notice Contains methods for computing the result of a swap within a single tick price range, i.e., a single tick."},"fullyImplemented":true,"id":5806,"linearizedBaseContracts":[5806],"name":"SwapMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":5804,"nodeType":"Block","src":"1812:2922:25","statements":[{"assignments":[5573],"declarations":[{"constant":false,"id":5573,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":5804,"src":"1823:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5572,"name":"bool","nodeType":"ElementaryTypeName","src":"1823:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5577,"initialValue":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"1841:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5575,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"1864:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1841:41:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1823:59:25"},{"assignments":[5579],"declarations":[{"constant":false,"id":5579,"mutability":"mutable","name":"exactIn","nodeType":"VariableDeclaration","scope":5804,"src":"1893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5578,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5583,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5580,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"1908:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1927:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1908:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1893:35:25"},{"condition":{"id":5584,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"1945:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5682,"nodeType":"Block","src":"2689:631:25","statements":[{"expression":{"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5637,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"2704:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5638,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2716:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5648,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"2884:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5649,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"2905:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5650,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"2925:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"66616c7365","id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2936:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5646,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2854:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount0Delta","nodeType":"MemberAccess","referencedDeclaration":5412,"src":"2854:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2854:88:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2716:226:25","trueExpression":{"arguments":[{"id":5641,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"2776:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5642,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"2796:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5643,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"2817:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"66616c7365","id":5644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2828:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5639,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2746:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount1Delta","nodeType":"MemberAccess","referencedDeclaration":5460,"src":"2746:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:88:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2704:238:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5655,"nodeType":"ExpressionStatement","src":"2704:238:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2969:16:25","subExpression":{"id":5658,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"2970:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2961:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2961:7:25","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2961:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5661,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"2990:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2961:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5667,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3075:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5670,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"3157:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5671,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"3199:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"3239:16:25","subExpression":{"id":5674,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"3240:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:25","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3231:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5677,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"3279:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5668,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"3094:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getNextSqrtPriceFromOutput","nodeType":"MemberAccess","referencedDeclaration":5342,"src":"3094:40:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$","typeString":"function (uint160,uint128,uint256,bool) pure returns (uint160)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3094:214:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3075:233:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5680,"nodeType":"ExpressionStatement","src":"3075:233:25"},"id":5681,"nodeType":"IfStatement","src":"2957:351:25","trueBody":{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5663,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3001:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5664,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"3020:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3001:37:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5666,"nodeType":"ExpressionStatement","src":"3001:37:25"}}]},"id":5683,"nodeType":"IfStatement","src":"1941:1379:25","trueBody":{"id":5636,"nodeType":"Block","src":"1954:729:25","statements":[{"assignments":[5586],"declarations":[{"constant":false,"id":5586,"mutability":"mutable","name":"amountRemainingLessFee","nodeType":"VariableDeclaration","scope":5636,"src":"1969:30:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1969:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5598,"initialValue":{"arguments":[{"arguments":[{"id":5591,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"2026:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2018:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2018:7:25","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2018:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"316536","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2044:3:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5594,"name":"feePips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"2050:7:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2044:13:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"hexValue":"316536","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2059:3:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}],"expression":{"id":5587,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"2002:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":3825,"src":"2002:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2002:61:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1969:94:25"},{"expression":{"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5599,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"2078:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":5600,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2089:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5610,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"2256:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5611,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"2277:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5612,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"2297:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"74727565","id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2308:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5608,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2226:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount1Delta","nodeType":"MemberAccess","referencedDeclaration":5460,"src":"2226:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2226:87:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2089:224:25","trueExpression":{"arguments":[{"id":5603,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"2149:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5604,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"2169:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5605,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"2190:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"74727565","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2201:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5601,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2119:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount0Delta","nodeType":"MemberAccess","referencedDeclaration":5412,"src":"2119:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2119:87:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:235:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5617,"nodeType":"ExpressionStatement","src":"2078:235:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"amountRemainingLessFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"2332:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5619,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"2358:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2332:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5625,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"2442:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5628,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"2523:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5629,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"2565:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5630,"name":"amountRemainingLessFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"2597:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5631,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2642:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5626,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2461:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getNextSqrtPriceFromInput","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"2461:39:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$","typeString":"function (uint160,uint128,uint256,bool) pure returns (uint160)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2461:210:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2442:229:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5634,"nodeType":"ExpressionStatement","src":"2442:229:25"},"id":5635,"nodeType":"IfStatement","src":"2328:343:25","trueBody":{"expression":{"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5621,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"2368:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5622,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"2387:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"2368:37:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":5624,"nodeType":"ExpressionStatement","src":"2368:37:25"}}]}},{"assignments":[5685],"declarations":[{"constant":false,"id":5685,"mutability":"mutable","name":"max","nodeType":"VariableDeclaration","scope":5804,"src":"3332:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5684,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5689,"initialValue":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"3343:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5687,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3365:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3343:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3332:49:25"},{"condition":{"id":5690,"name":"zeroForOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"3439:10:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5754,"nodeType":"Block","src":"3819:362:25","statements":[{"expression":{"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5723,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"3834:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5724,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"3845:3:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5725,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"3852:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3845:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5730,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"3937:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5731,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3958:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5732,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"3976:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"74727565","id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3987:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5728,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"3907:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount1Delta","nodeType":"MemberAccess","referencedDeclaration":5460,"src":"3907:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3907:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3845:147:25","trueExpression":{"id":5727,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"3879:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3834:158:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5737,"nodeType":"ExpressionStatement","src":"3834:158:25"},{"expression":{"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5738,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"4007:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"4019:3:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4026:8:25","subExpression":{"id":5740,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"4027:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4019:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5746,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"4113:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5747,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"4134:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5748,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"4152:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"66616c7365","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4163:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5744,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"4083:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount0Delta","nodeType":"MemberAccess","referencedDeclaration":5412,"src":"4083:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4083:86:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4019:150:25","trueExpression":{"id":5743,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"4054:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4007:162:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5753,"nodeType":"ExpressionStatement","src":"4007:162:25"}]},"id":5755,"nodeType":"IfStatement","src":"3435:746:25","trueBody":{"id":5722,"nodeType":"Block","src":"3451:362:25","statements":[{"expression":{"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"3466:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5692,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"3477:3:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5693,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"3484:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3477:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5698,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3569:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5699,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"3587:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5700,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"3608:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"74727565","id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3619:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5696,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"3539:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount0Delta","nodeType":"MemberAccess","referencedDeclaration":5412,"src":"3539:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3539:85:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3477:147:25","trueExpression":{"id":5695,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"3511:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3466:158:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5705,"nodeType":"ExpressionStatement","src":"3466:158:25"},{"expression":{"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5706,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"3639:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5707,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5685,"src":"3651:3:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3658:8:25","subExpression":{"id":5708,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"3659:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3651:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5714,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"3745:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5715,"name":"sqrtRatioCurrentX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"3763:19:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":5716,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"3784:9:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"66616c7365","id":5717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3795:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5712,"name":"SqrtPriceMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"3715:13:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtPriceMath_$5545_$","typeString":"type(library SqrtPriceMath)"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getAmount1Delta","nodeType":"MemberAccess","referencedDeclaration":5460,"src":"3715:29:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_bool_$returns$_t_uint256_$","typeString":"function (uint160,uint160,uint128,bool) pure returns (uint256)"}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:86:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3651:150:25","trueExpression":{"id":5711,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"3686:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3639:162:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5721,"nodeType":"ExpressionStatement","src":"3639:162:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4273:8:25","subExpression":{"id":5756,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"4274:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"4285:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"4305:16:25","subExpression":{"id":5761,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"4306:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"4297:7:25","typeDescriptions":{}}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4297:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4285:37:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4273:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"4269:119:25","trueBody":{"id":5774,"nodeType":"Block","src":"4324:64:25","statements":[{"expression":{"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"4339:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"4359:16:25","subExpression":{"id":5769,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"4360:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4351:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5767,"name":"uint256","nodeType":"ElementaryTypeName","src":"4351:7:25","typeDescriptions":{}}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4351:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4339:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5773,"nodeType":"ExpressionStatement","src":"4339:37:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"exactIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"4404:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"sqrtRatioNextX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"4415:16:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5778,"name":"sqrtRatioTargetX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"4435:18:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4415:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4404:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5802,"nodeType":"Block","src":"4629:98:25","statements":[{"expression":{"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5791,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"4644:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5794,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4682:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5795,"name":"feePips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"4692:7:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"316536","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4701:3:25","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5797,"name":"feePips","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"4707:7:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"4701:13:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":5792,"name":"FullMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"4656:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FullMath_$3869_$","typeString":"type(library FullMath)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mulDivRoundingUp","nodeType":"MemberAccess","referencedDeclaration":3868,"src":"4656:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4656:59:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4644:71:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5801,"nodeType":"ExpressionStatement","src":"4644:71:25"}]},"id":5803,"nodeType":"IfStatement","src":"4400:327:25","trueBody":{"id":5790,"nodeType":"Block","src":"4455:168:25","statements":[{"expression":{"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"4564:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5784,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5559,"src":"4584:15:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4576:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4576:7:25","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4576:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5786,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"4603:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4576:35:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4564:47:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5789,"nodeType":"ExpressionStatement","src":"4564:47:25"}]}}]},"documentation":{"id":5551,"nodeType":"StructuredDocumentation","src":"332:1081:25","text":"@notice Computes the result of swapping some amount in, or amount out, given the parameters of the swap\n @dev The fee, plus the amount in, will never exceed the amount remaining if the swap's `amountSpecified` is positive\n @param sqrtRatioCurrentX96 The current sqrt price of the pool\n @param sqrtRatioTargetX96 The price that cannot be exceeded, from which the direction of the swap is inferred\n @param liquidity The usable liquidity\n @param amountRemaining How much input or output amount is remaining to be swapped in/out\n @param feePips The fee taken from the input amount, expressed in hundredths of a bip\n @return sqrtRatioNextX96 The price after swapping the amount in/out, not to exceed the price target\n @return amountIn The amount to be swapped in, of either token0 or token1, based on the direction of the swap\n @return amountOut The amount to be received, of either token0 or token1, based on the direction of the swap\n @return feeAmount The amount of input that will be taken as a fee"},"id":5805,"implemented":true,"kind":"function","modifiers":[],"name":"computeSwapStep","nodeType":"FunctionDefinition","parameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"sqrtRatioCurrentX96","nodeType":"VariableDeclaration","scope":5805,"src":"1454:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5552,"name":"uint160","nodeType":"ElementaryTypeName","src":"1454:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5555,"mutability":"mutable","name":"sqrtRatioTargetX96","nodeType":"VariableDeclaration","scope":5805,"src":"1492:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5554,"name":"uint160","nodeType":"ElementaryTypeName","src":"1492:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5557,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":5805,"src":"1529:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5556,"name":"uint128","nodeType":"ElementaryTypeName","src":"1529:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5559,"mutability":"mutable","name":"amountRemaining","nodeType":"VariableDeclaration","scope":5805,"src":"1557:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5558,"name":"int256","nodeType":"ElementaryTypeName","src":"1557:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5561,"mutability":"mutable","name":"feePips","nodeType":"VariableDeclaration","scope":5805,"src":"1590:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5560,"name":"uint24","nodeType":"ElementaryTypeName","src":"1590:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1443:168:25"},"returnParameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"sqrtRatioNextX96","nodeType":"VariableDeclaration","scope":5805,"src":"1676:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5563,"name":"uint160","nodeType":"ElementaryTypeName","src":"1676:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":5805,"src":"1715:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5568,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":5805,"src":"1746:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5570,"mutability":"mutable","name":"feeAmount","nodeType":"VariableDeclaration","scope":5805,"src":"1778:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1661:145:25"},"scope":5806,"src":"1419:3315:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5807,"src":"308:4429:25"}],"src":"46:4693:25"},"id":25},"contracts/libraries/Tick.sol":{"ast":{"absolutePath":"contracts/libraries/Tick.sol","exportedSymbols":{"LiquidityMath":[3921],"LowGasSafeMath":[4051],"SafeCast":[5029],"Tick":[6258],"TickMath":[7049]},"id":6259,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":5808,"literals":["solidity",">=","0.5",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"46:31:26"},{"absolutePath":"contracts/libraries/LowGasSafeMath.sol","file":"./LowGasSafeMath.sol","id":5809,"nodeType":"ImportDirective","scope":6259,"sourceUnit":4052,"src":"81:30:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SafeCast.sol","file":"./SafeCast.sol","id":5810,"nodeType":"ImportDirective","scope":6259,"sourceUnit":5030,"src":"113:24:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/TickMath.sol","file":"./TickMath.sol","id":5811,"nodeType":"ImportDirective","scope":6259,"sourceUnit":7050,"src":"141:24:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/LiquidityMath.sol","file":"./LiquidityMath.sol","id":5812,"nodeType":"ImportDirective","scope":6259,"sourceUnit":3922,"src":"167:29:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":5813,"nodeType":"StructuredDocumentation","src":"200:103:26","text":"@title Tick\n @notice Contains functions for managing tick processes and relevant calculations"},"fullyImplemented":true,"id":6258,"linearizedBaseContracts":[6258],"name":"Tick","nodeType":"ContractDefinition","nodes":[{"id":5816,"libraryName":{"id":5814,"name":"LowGasSafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":4051,"src":"329:14:26","typeDescriptions":{"typeIdentifier":"t_contract$_LowGasSafeMath_$4051","typeString":"library LowGasSafeMath"}},"nodeType":"UsingForDirective","src":"323:32:26","typeName":{"id":5815,"name":"int256","nodeType":"ElementaryTypeName","src":"348:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"id":5819,"libraryName":{"id":5817,"name":"SafeCast","nodeType":"UserDefinedTypeName","referencedDeclaration":5029,"src":"367:8:26","typeDescriptions":{"typeIdentifier":"t_contract$_SafeCast_$5029","typeString":"library SafeCast"}},"nodeType":"UsingForDirective","src":"361:26:26","typeName":{"id":5818,"name":"int256","nodeType":"ElementaryTypeName","src":"380:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},{"canonicalName":"Tick.Info","id":5836,"members":[{"constant":false,"id":5821,"mutability":"mutable","name":"liquidityGross","nodeType":"VariableDeclaration","scope":5836,"src":"542:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5820,"name":"uint128","nodeType":"ElementaryTypeName","src":"542:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":5823,"mutability":"mutable","name":"liquidityNet","nodeType":"VariableDeclaration","scope":5836,"src":"687:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5822,"name":"int128","nodeType":"ElementaryTypeName","src":"687:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":5825,"mutability":"mutable","name":"feeGrowthOutside0X128","nodeType":"VariableDeclaration","scope":5836,"src":"932:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5824,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5827,"mutability":"mutable","name":"feeGrowthOutside1X128","nodeType":"VariableDeclaration","scope":5836,"src":"972:29:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5826,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5829,"mutability":"mutable","name":"tickCumulativeOutside","nodeType":"VariableDeclaration","scope":5836,"src":"1080:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5828,"name":"int56","nodeType":"ElementaryTypeName","src":"1080:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":5831,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nodeType":"VariableDeclaration","scope":5836,"src":"1334:38:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5830,"name":"uint160","nodeType":"ElementaryTypeName","src":"1334:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":5833,"mutability":"mutable","name":"secondsOutside","nodeType":"VariableDeclaration","scope":5836,"src":"1580:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5832,"name":"uint32","nodeType":"ElementaryTypeName","src":"1580:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5835,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":5836,"src":"1829:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5834,"name":"bool","nodeType":"ElementaryTypeName","src":"1829:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Info","nodeType":"StructDefinition","scope":6258,"src":"452:1401:26","visibility":"public"},{"body":{"id":5886,"nodeType":"Block","src":"2346:276:26","statements":[{"assignments":[5845],"declarations":[{"constant":false,"id":5845,"mutability":"mutable","name":"minTick","nodeType":"VariableDeclaration","scope":5886,"src":"2357:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5844,"name":"int24","nodeType":"ElementaryTypeName","src":"2357:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":5853,"initialValue":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5846,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"2374:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TICK","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"2374:17:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5848,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"2394:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2374:31:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":5850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2373:33:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5851,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"2409:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2373:47:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"2357:63:26"},{"assignments":[5855],"declarations":[{"constant":false,"id":5855,"mutability":"mutable","name":"maxTick","nodeType":"VariableDeclaration","scope":5886,"src":"2431:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5854,"name":"int24","nodeType":"ElementaryTypeName","src":"2431:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":5863,"initialValue":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5856,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"2448:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$7049_$","typeString":"type(library TickMath)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TICK","nodeType":"MemberAccess","referencedDeclaration":6527,"src":"2448:17:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5858,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"2468:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2448:31:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":5860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2447:33:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5861,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"2483:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2447:47:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"2431:63:26"},{"assignments":[5865],"declarations":[{"constant":false,"id":5865,"mutability":"mutable","name":"numTicks","nodeType":"VariableDeclaration","scope":5886,"src":"2505:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5864,"name":"uint24","nodeType":"ElementaryTypeName","src":"2505:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":5877,"initialValue":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5868,"name":"maxTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"2531:7:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5869,"name":"minTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5845,"src":"2541:7:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2531:17:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":5871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2530:19:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5872,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"2552:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2530:33:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2523:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5866,"name":"uint24","nodeType":"ElementaryTypeName","src":"2523:6:26","typeDescriptions":{}}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2523:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2567:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2523:45:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"2505:63:26"},{"expression":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2591:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5879,"name":"uint128","nodeType":"ElementaryTypeName","src":"2591:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5878,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2586:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2586:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2586:17:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5883,"name":"numTicks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"2606:8:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2586:28:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5843,"id":5885,"nodeType":"Return","src":"2579:35:26"}]},"documentation":{"id":5837,"nodeType":"StructuredDocumentation","src":"1861:386:26","text":"@notice Derives max liquidity per tick from given tick spacing\n @dev Executed within the pool constructor\n @param tickSpacing The amount of required tick separation, realized in multiples of `tickSpacing`\n     e.g., a tickSpacing of 3 requires ticks to be initialized every 3rd tick i.e., ..., -6, -3, 0, 3, 6, ...\n @return The max liquidity per tick"},"id":5887,"implemented":true,"kind":"function","modifiers":[],"name":"tickSpacingToMaxLiquidityPerTick","nodeType":"FunctionDefinition","parameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":5887,"src":"2295:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5838,"name":"int24","nodeType":"ElementaryTypeName","src":"2295:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2294:19:26"},"returnParameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5887,"src":"2337:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5841,"name":"uint128","nodeType":"ElementaryTypeName","src":"2337:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2336:9:26"},"scope":6258,"src":"2253:369:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6009,"nodeType":"Block","src":"3736:1277:26","statements":[{"assignments":[5910],"declarations":[{"constant":false,"id":5910,"mutability":"mutable","name":"lower","nodeType":"VariableDeclaration","scope":6009,"src":"3747:18:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"},"typeName":{"id":5909,"name":"Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"3747:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}},"visibility":"internal"}],"id":5914,"initialValue":{"baseExpression":{"id":5911,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"3768:4:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":5913,"indexExpression":{"id":5912,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"3773:9:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3768:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3747:36:26"},{"assignments":[5916],"declarations":[{"constant":false,"id":5916,"mutability":"mutable","name":"upper","nodeType":"VariableDeclaration","scope":6009,"src":"3794:18:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"},"typeName":{"id":5915,"name":"Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"3794:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}},"visibility":"internal"}],"id":5920,"initialValue":{"baseExpression":{"id":5917,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"3815:4:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":5919,"indexExpression":{"id":5918,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"3820:9:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3815:15:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3794:36:26"},{"assignments":[5922],"declarations":[{"constant":false,"id":5922,"mutability":"mutable","name":"feeGrowthBelow0X128","nodeType":"VariableDeclaration","scope":6009,"src":"3882:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5923,"nodeType":"VariableDeclarationStatement","src":"3882:27:26"},{"assignments":[5925],"declarations":[{"constant":false,"id":5925,"mutability":"mutable","name":"feeGrowthBelow1X128","nodeType":"VariableDeclaration","scope":6009,"src":"3920:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5924,"name":"uint256","nodeType":"ElementaryTypeName","src":"3920:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5926,"nodeType":"VariableDeclarationStatement","src":"3920:27:26"},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"tickCurrent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"3962:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5928,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"3977:9:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3962:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5955,"nodeType":"Block","src":"4134:186:26","statements":[{"expression":{"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5941,"name":"feeGrowthBelow0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"4149:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5942,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"4171:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5943,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"4194:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"4194:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4171:50:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4149:72:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5947,"nodeType":"ExpressionStatement","src":"4149:72:26"},{"expression":{"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5948,"name":"feeGrowthBelow1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"4236:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5949,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"4258:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5950,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"4281:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"4281:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4258:50:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4236:72:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5954,"nodeType":"ExpressionStatement","src":"4236:72:26"}]},"id":5956,"nodeType":"IfStatement","src":"3958:362:26","trueBody":{"id":5940,"nodeType":"Block","src":"3988:140:26","statements":[{"expression":{"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5930,"name":"feeGrowthBelow0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"4003:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5931,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"4025:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"4025:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4003:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5934,"nodeType":"ExpressionStatement","src":"4003:49:26"},{"expression":{"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5935,"name":"feeGrowthBelow1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"4067:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5936,"name":"lower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"4089:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"4089:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4067:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5939,"nodeType":"ExpressionStatement","src":"4067:49:26"}]}},{"assignments":[5958],"declarations":[{"constant":false,"id":5958,"mutability":"mutable","name":"feeGrowthAbove0X128","nodeType":"VariableDeclaration","scope":6009,"src":"4371:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4371:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5959,"nodeType":"VariableDeclarationStatement","src":"4371:27:26"},{"assignments":[5961],"declarations":[{"constant":false,"id":5961,"mutability":"mutable","name":"feeGrowthAbove1X128","nodeType":"VariableDeclaration","scope":6009,"src":"4409:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4409:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5962,"nodeType":"VariableDeclarationStatement","src":"4409:27:26"},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"tickCurrent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"4451:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5964,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"4465:9:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"4451:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5991,"nodeType":"Block","src":"4622:186:26","statements":[{"expression":{"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5977,"name":"feeGrowthAbove0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"4637:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5978,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"4659:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5979,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"4682:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"4682:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4659:50:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4637:72:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5983,"nodeType":"ExpressionStatement","src":"4637:72:26"},{"expression":{"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5984,"name":"feeGrowthAbove1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"4724:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5985,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"4746:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5986,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"4769:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"4769:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4746:50:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4724:72:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5990,"nodeType":"ExpressionStatement","src":"4724:72:26"}]},"id":5992,"nodeType":"IfStatement","src":"4447:361:26","trueBody":{"id":5976,"nodeType":"Block","src":"4476:140:26","statements":[{"expression":{"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5966,"name":"feeGrowthAbove0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"4491:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5967,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"4513:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"4513:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4491:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5970,"nodeType":"ExpressionStatement","src":"4491:49:26"},{"expression":{"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5971,"name":"feeGrowthAbove1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"4555:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5972,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"4577:5:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":5973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"4577:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4555:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5975,"nodeType":"ExpressionStatement","src":"4555:49:26"}]}},{"expression":{"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5993,"name":"feeGrowthInside0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"4820:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"4843:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5995,"name":"feeGrowthBelow0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"4866:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5997,"name":"feeGrowthAbove0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"4888:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4820:87:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6000,"nodeType":"ExpressionStatement","src":"4820:87:26"},{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6001,"name":"feeGrowthInside1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"4918:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6002,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"4941:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6003,"name":"feeGrowthBelow1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"4964:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4941:42:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6005,"name":"feeGrowthAbove1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5961,"src":"4986:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4941:64:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4918:87:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6008,"nodeType":"ExpressionStatement","src":"4918:87:26"}]},"documentation":{"id":5888,"nodeType":"StructuredDocumentation","src":"2630:773:26","text":"@notice Retrieves fee growth data\n @param self The mapping containing all tick information for initialized ticks\n @param tickLower The lower tick boundary of the position\n @param tickUpper The upper tick boundary of the position\n @param tickCurrent The current tick\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @return feeGrowthInside0X128 The all-time fee growth in token0, per unit of liquidity, inside the position's tick boundaries\n @return feeGrowthInside1X128 The all-time fee growth in token1, per unit of liquidity, inside the position's tick boundaries"},"id":6010,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeGrowthInside","nodeType":"FunctionDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6010,"src":"3447:40:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"typeName":{"id":5891,"keyType":{"id":5889,"name":"int24","nodeType":"ElementaryTypeName","src":"3455:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Mapping","src":"3447:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"valueType":{"id":5890,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"3464:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":6010,"src":"3498:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5893,"name":"int24","nodeType":"ElementaryTypeName","src":"3498:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":5896,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":6010,"src":"3524:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5895,"name":"int24","nodeType":"ElementaryTypeName","src":"3524:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":5898,"mutability":"mutable","name":"tickCurrent","nodeType":"VariableDeclaration","scope":6010,"src":"3550:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5897,"name":"int24","nodeType":"ElementaryTypeName","src":"3550:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":5900,"mutability":"mutable","name":"feeGrowthGlobal0X128","nodeType":"VariableDeclaration","scope":6010,"src":"3578:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3578:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5902,"mutability":"mutable","name":"feeGrowthGlobal1X128","nodeType":"VariableDeclaration","scope":6010,"src":"3617:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3617:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3436:216:26"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"feeGrowthInside0X128","nodeType":"VariableDeclaration","scope":6010,"src":"3676:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5907,"mutability":"mutable","name":"feeGrowthInside1X128","nodeType":"VariableDeclaration","scope":6010,"src":"3706:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3706:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3675:60:26"},"scope":6258,"src":"3409:1604:26","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6159,"nodeType":"Block","src":"6647:1307:26","statements":[{"assignments":[6043],"declarations":[{"constant":false,"id":6043,"mutability":"mutable","name":"info","nodeType":"VariableDeclaration","scope":6159,"src":"6658:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"},"typeName":{"id":6042,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"6658:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}},"visibility":"internal"}],"id":6047,"initialValue":{"baseExpression":{"id":6044,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6015,"src":"6683:4:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":6046,"indexExpression":{"id":6045,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"6688:4:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6683:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6658:35:26"},{"assignments":[6049],"declarations":[{"constant":false,"id":6049,"mutability":"mutable","name":"liquidityGrossBefore","nodeType":"VariableDeclaration","scope":6159,"src":"6706:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6048,"name":"uint128","nodeType":"ElementaryTypeName","src":"6706:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":6052,"initialValue":{"expression":{"id":6050,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"6737:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityGross","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"6737:19:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"6706:50:26"},{"assignments":[6054],"declarations":[{"constant":false,"id":6054,"mutability":"mutable","name":"liquidityGrossAfter","nodeType":"VariableDeclaration","scope":6159,"src":"6767:27:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6053,"name":"uint128","nodeType":"ElementaryTypeName","src":"6767:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":6060,"initialValue":{"arguments":[{"id":6057,"name":"liquidityGrossBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"6820:20:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":6058,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"6842:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"id":6055,"name":"LiquidityMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"6797:13:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LiquidityMath_$3921_$","typeString":"type(library LiquidityMath)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"addDelta","nodeType":"MemberAccess","referencedDeclaration":3920,"src":"6797:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint128_$_t_int128_$returns$_t_uint128_$","typeString":"function (uint128,int128) pure returns (uint128)"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6797:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"6767:90:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"liquidityGrossAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"6878:19:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6063,"name":"maxLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"6901:12:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"6878:35:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c4f","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6915:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48","typeString":"literal_string \"LO\""},"value":"LO"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df0e8e403ea3fe54c7efb80492fa8f6599886b9c5435c1772b8d6400862c8c48","typeString":"literal_string \"LO\""}],"id":6061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6870:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6870:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6067,"nodeType":"ExpressionStatement","src":"6870:50:26"},{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"flipped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"6933:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"liquidityGrossAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"6944:19:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6944:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6943:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6073,"name":"liquidityGrossBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"6974:20:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6998:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6974:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6973:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6943:57:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6933:67:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6079,"nodeType":"ExpressionStatement","src":"6933:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"liquidityGrossBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"7017:20:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7041:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7017:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6125,"nodeType":"IfStatement","src":"7013:582:26","trueBody":{"id":6124,"nodeType":"Block","src":"7044:551:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"7176:4:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6084,"name":"tickCurrent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"7184:11:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"7176:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6117,"nodeType":"IfStatement","src":"7172:374:26","trueBody":{"id":6116,"nodeType":"Block","src":"7197:349:26","statements":[{"expression":{"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6086,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7216:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"7216:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6089,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6023,"src":"7245:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7216:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6091,"nodeType":"ExpressionStatement","src":"7216:49:26"},{"expression":{"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6092,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7284:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"7284:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6095,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"7313:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6097,"nodeType":"ExpressionStatement","src":"7284:49:26"},{"expression":{"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6098,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7352:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"secondsPerLiquidityOutsideX128","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"7352:35:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6101,"name":"secondsPerLiquidityCumulativeX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6027,"src":"7390:33:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7352:71:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":6103,"nodeType":"ExpressionStatement","src":"7352:71:26"},{"expression":{"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6104,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7442:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickCumulativeOutside","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"7442:26:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6107,"name":"tickCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6029,"src":"7471:14:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"7442:43:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6109,"nodeType":"ExpressionStatement","src":"7442:43:26"},{"expression":{"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6110,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7504:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"secondsOutside","nodeType":"MemberAccess","referencedDeclaration":5833,"src":"7504:19:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6113,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6031,"src":"7526:4:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"7504:26:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6115,"nodeType":"ExpressionStatement","src":"7504:26:26"}]}},{"expression":{"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6118,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7560:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"initialized","nodeType":"MemberAccess","referencedDeclaration":5835,"src":"7560:16:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7579:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7560:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6123,"nodeType":"ExpressionStatement","src":"7560:23:26"}]}},{"expression":{"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6126,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7607:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidityGross","nodeType":"MemberAccess","referencedDeclaration":5821,"src":"7607:19:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6129,"name":"liquidityGrossAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"7629:19:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7607:41:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":6131,"nodeType":"ExpressionStatement","src":"7607:41:26"},{"expression":{"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6132,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7777:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidityNet","nodeType":"MemberAccess","referencedDeclaration":5823,"src":"7777:17:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":6135,"name":"upper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"7797:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6152,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"7920:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"arguments":[{"expression":{"id":6148,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7897:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityNet","nodeType":"MemberAccess","referencedDeclaration":5823,"src":"7897:17:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7890:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6146,"name":"int256","nodeType":"ElementaryTypeName","src":"7890:6:26","typeDescriptions":{}}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7890:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"7890:29:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7890:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":5004,"src":"7890:54:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$","typeString":"function (int256) pure returns (int128)"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7890:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7797:149:26","trueExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":6142,"name":"liquidityDelta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"7848:14:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"expression":{"arguments":[{"expression":{"id":6138,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"7825:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityNet","nodeType":"MemberAccess","referencedDeclaration":5823,"src":"7825:17:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int128","typeString":"int128"}],"id":6137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7818:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6136,"name":"int256","nodeType":"ElementaryTypeName","src":"7818:6:26","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7818:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":4050,"src":"7818:29:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$","typeString":"function (int256,int256) pure returns (int256)"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7818:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toInt128","nodeType":"MemberAccess","referencedDeclaration":5004,"src":"7818:54:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$","typeString":"function (int256) pure returns (int128)"}},"id":6145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7818:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"7777:169:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6158,"nodeType":"ExpressionStatement","src":"7777:169:26"}]},"documentation":{"id":6011,"nodeType":"StructuredDocumentation","src":"5021:1198:26","text":"@notice Updates a tick and returns true if the tick was flipped from initialized to uninitialized, or vice versa\n @param self The mapping containing all tick information for initialized ticks\n @param tick The tick that will be updated\n @param tickCurrent The current tick\n @param liquidityDelta A new amount of liquidity to be added (subtracted) when tick is crossed from left to right (right to left)\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param secondsPerLiquidityCumulativeX128 The all-time seconds per max(1, liquidity) of the pool\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block timestamp cast to a uint32\n @param upper true for updating a position's upper tick, or false for updating a position's lower tick\n @param maxLiquidity The maximum liquidity allocation for a single tick\n @return flipped Whether the tick was flipped from initialized to uninitialized, or vice versa"},"id":6160,"implemented":true,"kind":"function","modifiers":[],"name":"update","nodeType":"FunctionDefinition","parameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6015,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6160,"src":"6251:40:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"typeName":{"id":6014,"keyType":{"id":6012,"name":"int24","nodeType":"ElementaryTypeName","src":"6259:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Mapping","src":"6251:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"valueType":{"id":6013,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"6268:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}}},"visibility":"internal"},{"constant":false,"id":6017,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6160,"src":"6302:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6016,"name":"int24","nodeType":"ElementaryTypeName","src":"6302:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6019,"mutability":"mutable","name":"tickCurrent","nodeType":"VariableDeclaration","scope":6160,"src":"6323:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6018,"name":"int24","nodeType":"ElementaryTypeName","src":"6323:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6021,"mutability":"mutable","name":"liquidityDelta","nodeType":"VariableDeclaration","scope":6160,"src":"6351:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6020,"name":"int128","nodeType":"ElementaryTypeName","src":"6351:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":6023,"mutability":"mutable","name":"feeGrowthGlobal0X128","nodeType":"VariableDeclaration","scope":6160,"src":"6383:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6022,"name":"uint256","nodeType":"ElementaryTypeName","src":"6383:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6025,"mutability":"mutable","name":"feeGrowthGlobal1X128","nodeType":"VariableDeclaration","scope":6160,"src":"6422:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6024,"name":"uint256","nodeType":"ElementaryTypeName","src":"6422:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6027,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":6160,"src":"6461:41:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6026,"name":"uint160","nodeType":"ElementaryTypeName","src":"6461:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6029,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":6160,"src":"6513:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6028,"name":"int56","nodeType":"ElementaryTypeName","src":"6513:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":6031,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":6160,"src":"6544:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6030,"name":"uint32","nodeType":"ElementaryTypeName","src":"6544:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6033,"mutability":"mutable","name":"upper","nodeType":"VariableDeclaration","scope":6160,"src":"6566:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6032,"name":"bool","nodeType":"ElementaryTypeName","src":"6566:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6035,"mutability":"mutable","name":"maxLiquidity","nodeType":"VariableDeclaration","scope":6160,"src":"6587:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6034,"name":"uint128","nodeType":"ElementaryTypeName","src":"6587:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"6240:374:26"},"returnParameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"flipped","nodeType":"VariableDeclaration","scope":6160,"src":"6633:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6037,"name":"bool","nodeType":"ElementaryTypeName","src":"6633:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6632:14:26"},"scope":6258,"src":"6225:1729:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6175,"nodeType":"Block","src":"8224:36:26","statements":[{"expression":{"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"8235:17:26","subExpression":{"baseExpression":{"id":6170,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"8242:4:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":6172,"indexExpression":{"id":6171,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"8247:4:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8242:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6174,"nodeType":"ExpressionStatement","src":"8235:17:26"}]},"documentation":{"id":6161,"nodeType":"StructuredDocumentation","src":"7962:178:26","text":"@notice Clears tick data\n @param self The mapping containing all initialized tick information for initialized ticks\n @param tick The tick that will be cleared"},"id":6176,"implemented":true,"kind":"function","modifiers":[],"name":"clear","nodeType":"FunctionDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6176,"src":"8161:40:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"typeName":{"id":6164,"keyType":{"id":6162,"name":"int24","nodeType":"ElementaryTypeName","src":"8169:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Mapping","src":"8161:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"valueType":{"id":6163,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"8178:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6176,"src":"8203:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6166,"name":"int24","nodeType":"ElementaryTypeName","src":"8203:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"8160:54:26"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[],"src":"8224:0:26"},"scope":6258,"src":"8146:114:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6256,"nodeType":"Block","src":"9359:537:26","statements":[{"assignments":[6201],"declarations":[{"constant":false,"id":6201,"mutability":"mutable","name":"info","nodeType":"VariableDeclaration","scope":6256,"src":"9370:22:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"},"typeName":{"id":6200,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"9370:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}},"visibility":"internal"}],"id":6205,"initialValue":{"baseExpression":{"id":6202,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"9395:4:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info storage ref)"}},"id":6204,"indexExpression":{"id":6203,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"9400:4:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9395:10:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage","typeString":"struct Tick.Info storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9370:35:26"},{"expression":{"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6206,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9416:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"9416:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"feeGrowthGlobal0X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"9445:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6210,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9468:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside0X128","nodeType":"MemberAccess","referencedDeclaration":5825,"src":"9468:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9445:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:78:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6214,"nodeType":"ExpressionStatement","src":"9416:78:26"},{"expression":{"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6215,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9505:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"9505:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6218,"name":"feeGrowthGlobal1X128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"9534:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6219,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9557:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"feeGrowthOutside1X128","nodeType":"MemberAccess","referencedDeclaration":5827,"src":"9557:26:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9534:49:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9505:78:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6223,"nodeType":"ExpressionStatement","src":"9505:78:26"},{"expression":{"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6224,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9594:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"secondsPerLiquidityOutsideX128","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"9594:35:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6227,"name":"secondsPerLiquidityCumulativeX128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"9632:33:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6228,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9668:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsPerLiquidityOutsideX128","nodeType":"MemberAccess","referencedDeclaration":5831,"src":"9668:35:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9632:71:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"9594:109:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":6232,"nodeType":"ExpressionStatement","src":"9594:109:26"},{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6233,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9714:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickCumulativeOutside","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"9714:26:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int56","typeString":"int56"},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6236,"name":"tickCumulative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"9743:14:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6237,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9760:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickCumulativeOutside","nodeType":"MemberAccess","referencedDeclaration":5829,"src":"9760:26:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"9743:43:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"9714:72:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6241,"nodeType":"ExpressionStatement","src":"9714:72:26"},{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6242,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9797:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"secondsOutside","nodeType":"MemberAccess","referencedDeclaration":5833,"src":"9797:19:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6245,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"9819:4:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":6246,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9826:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"secondsOutside","nodeType":"MemberAccess","referencedDeclaration":5833,"src":"9826:19:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9819:26:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"9797:48:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6250,"nodeType":"ExpressionStatement","src":"9797:48:26"},{"expression":{"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6251,"name":"liquidityNet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"9856:12:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6252,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"9871:4:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info storage pointer"}},"id":6253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidityNet","nodeType":"MemberAccess","referencedDeclaration":5823,"src":"9871:17:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"9856:32:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6255,"nodeType":"ExpressionStatement","src":"9856:32:26"}]},"documentation":{"id":6177,"nodeType":"StructuredDocumentation","src":"8268:769:26","text":"@notice Transitions to next tick as needed by price movement\n @param self The mapping containing all tick information for initialized ticks\n @param tick The destination tick of the transition\n @param feeGrowthGlobal0X128 The all-time global fee growth, per unit of liquidity, in token0\n @param feeGrowthGlobal1X128 The all-time global fee growth, per unit of liquidity, in token1\n @param secondsPerLiquidityCumulativeX128 The current seconds per liquidity\n @param tickCumulative The tick * time elapsed since the pool was first initialized\n @param time The current block.timestamp\n @return liquidityNet The amount of liquidity added (subtracted) when tick is crossed from left to right (right to left)"},"id":6257,"implemented":true,"kind":"function","modifiers":[],"name":"cross","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6257,"src":"9068:40:26","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"typeName":{"id":6180,"keyType":{"id":6178,"name":"int24","nodeType":"ElementaryTypeName","src":"9076:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Mapping","src":"9068:27:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int24_$_t_struct$_Info_$5836_storage_$","typeString":"mapping(int24 => struct Tick.Info)"},"valueType":{"id":6179,"name":"Tick.Info","nodeType":"UserDefinedTypeName","referencedDeclaration":5836,"src":"9085:9:26","typeDescriptions":{"typeIdentifier":"t_struct$_Info_$5836_storage_ptr","typeString":"struct Tick.Info"}}},"visibility":"internal"},{"constant":false,"id":6183,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6257,"src":"9119:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6182,"name":"int24","nodeType":"ElementaryTypeName","src":"9119:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6185,"mutability":"mutable","name":"feeGrowthGlobal0X128","nodeType":"VariableDeclaration","scope":6257,"src":"9140:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6184,"name":"uint256","nodeType":"ElementaryTypeName","src":"9140:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6187,"mutability":"mutable","name":"feeGrowthGlobal1X128","nodeType":"VariableDeclaration","scope":6257,"src":"9179:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"9179:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6189,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":6257,"src":"9218:41:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6188,"name":"uint160","nodeType":"ElementaryTypeName","src":"9218:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":6191,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":6257,"src":"9270:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6190,"name":"int56","nodeType":"ElementaryTypeName","src":"9270:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":6193,"mutability":"mutable","name":"time","nodeType":"VariableDeclaration","scope":6257,"src":"9301:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6192,"name":"uint32","nodeType":"ElementaryTypeName","src":"9301:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"9057:262:26"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"liquidityNet","nodeType":"VariableDeclaration","scope":6257,"src":"9338:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6195,"name":"int128","nodeType":"ElementaryTypeName","src":"9338:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"9337:21:26"},"scope":6258,"src":"9043:853:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6259,"src":"303:9596:26"}],"src":"46:9855:26"},"id":26},"contracts/libraries/TickBitmap.sol":{"ast":{"absolutePath":"contracts/libraries/TickBitmap.sol","exportedSymbols":{"BitMath":[3679],"TickBitmap":[6514]},"id":6515,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6260,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:27"},{"absolutePath":"contracts/libraries/BitMath.sol","file":"./BitMath.sol","id":6261,"nodeType":"ImportDirective","scope":6515,"sourceUnit":3680,"src":"74:23:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6262,"nodeType":"StructuredDocumentation","src":"101:246:27","text":"@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."},"fullyImplemented":true,"id":6514,"linearizedBaseContracts":[6514],"name":"TickBitmap","nodeType":"ContractDefinition","nodes":[{"body":{"id":6290,"nodeType":"Block","src":"788:82:27","statements":[{"expression":{"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6272,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"799:7:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"815:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"823:1:27","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"815:9:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"809:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6273,"name":"int16","nodeType":"ElementaryTypeName","src":"809:5:27","typeDescriptions":{}}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"809:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"799:26:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6280,"nodeType":"ExpressionStatement","src":"799:26:27"},{"expression":{"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6281,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"836:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6284,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"851:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"858:3:27","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"851:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"845:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6282,"name":"uint8","nodeType":"ElementaryTypeName","src":"845:5:27","typeDescriptions":{}}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"845:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"836:26:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6289,"nodeType":"ExpressionStatement","src":"836:26:27"}]},"documentation":{"id":6263,"nodeType":"StructuredDocumentation","src":"373:328:27","text":"@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"},"id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"position","nodeType":"FunctionDefinition","parameters":{"id":6266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6265,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6291,"src":"725:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6264,"name":"int24","nodeType":"ElementaryTypeName","src":"725:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"724:12:27"},"returnParameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"wordPos","nodeType":"VariableDeclaration","scope":6291,"src":"759:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6267,"name":"int16","nodeType":"ElementaryTypeName","src":"759:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"},{"constant":false,"id":6270,"mutability":"mutable","name":"bitPos","nodeType":"VariableDeclaration","scope":6291,"src":"774:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6269,"name":"uint8","nodeType":"ElementaryTypeName","src":"774:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"758:29:27"},"scope":6514,"src":"707:163:27","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6333,"nodeType":"Block","src":"1264:225:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"1283:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6305,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"1290:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"1283:18:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1305:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1283:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1275:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"ExpressionStatement","src":"1275:32:27"},{"assignments":[6312,6314],"declarations":[{"constant":false,"id":6312,"mutability":"mutable","name":"wordPos","nodeType":"VariableDeclaration","scope":6333,"src":"1353:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6311,"name":"int16","nodeType":"ElementaryTypeName","src":"1353:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"},{"constant":false,"id":6314,"mutability":"mutable","name":"bitPos","nodeType":"VariableDeclaration","scope":6333,"src":"1368:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6313,"name":"uint8","nodeType":"ElementaryTypeName","src":"1368:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6320,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"1393:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6317,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"1400:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"1393:18:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6315,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"1384:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$","typeString":"function (int24) pure returns (int16,uint8)"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int16_$_t_uint8_$","typeString":"tuple(int16,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"1352:60:27"},{"assignments":[6322],"declarations":[{"constant":false,"id":6322,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":6333,"src":"1423:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1423:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6326,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1438:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6324,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"1443:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1438:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1423:26:27"},{"expression":{"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6327,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"1460:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"}},"id":6329,"indexExpression":{"id":6328,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"1465:7:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1460:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"id":6330,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"1477:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1460:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6332,"nodeType":"ExpressionStatement","src":"1460:21:27"}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"878:248:27","text":"@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"},"id":6334,"implemented":true,"kind":"function","modifiers":[],"name":"flipTick","nodeType":"FunctionDefinition","parameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6334,"src":"1160:38:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"typeName":{"id":6295,"keyType":{"id":6293,"name":"int16","nodeType":"ElementaryTypeName","src":"1168:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Mapping","src":"1160:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"valueType":{"id":6294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6334,"src":"1209:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6297,"name":"int24","nodeType":"ElementaryTypeName","src":"1209:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6300,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":6334,"src":"1230:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6299,"name":"int24","nodeType":"ElementaryTypeName","src":"1230:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1149:105:27"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[],"src":"1264:0:27"},"scope":6514,"src":"1132:357:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"2456:1737:27","statements":[{"assignments":[6353],"declarations":[{"constant":false,"id":6353,"mutability":"mutable","name":"compressed","nodeType":"VariableDeclaration","scope":6512,"src":"2467:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6352,"name":"int24","nodeType":"ElementaryTypeName","src":"2467:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":6357,"initialValue":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2486:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6355,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"2493:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2486:18:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"2467:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6358,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2519:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2519:8:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6361,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"2531:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6362,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"2538:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"2531:18:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2553:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2531:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2519:35:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6370,"nodeType":"IfStatement","src":"2515:53:27","trueBody":{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"2556:12:27","subExpression":{"id":6367,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"2556:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6369,"nodeType":"ExpressionStatement","src":"2556:12:27"}},{"condition":{"id":6371,"name":"lte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"2620:3:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6510,"nodeType":"Block","src":"3359:827:27","statements":[{"assignments":[6438,6440],"declarations":[{"constant":false,"id":6438,"mutability":"mutable","name":"wordPos","nodeType":"VariableDeclaration","scope":6510,"src":"3473:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6437,"name":"int16","nodeType":"ElementaryTypeName","src":"3473:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"bitPos","nodeType":"VariableDeclaration","scope":6510,"src":"3488:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6439,"name":"uint8","nodeType":"ElementaryTypeName","src":"3488:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6446,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6442,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"3513:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3526:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3513:14:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6441,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"3504:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$","typeString":"function (int24) pure returns (int16,uint8)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3504:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int16_$_t_uint8_$","typeString":"tuple(int16,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"3472:56:27"},{"assignments":[6448],"declarations":[{"constant":false,"id":6448,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":6510,"src":"3602:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3602:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6457,"initialValue":{"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3617:20:27","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3620:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6450,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"3625:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3620:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3619:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3619:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3618:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3602:35:27"},{"assignments":[6459],"declarations":[{"constant":false,"id":6459,"mutability":"mutable","name":"masked","nodeType":"VariableDeclaration","scope":6510,"src":"3652:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6465,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6460,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"3669:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"}},"id":6462,"indexExpression":{"id":6461,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"3674:7:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3669:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6463,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6448,"src":"3685:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3669:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3652:37:27"},{"expression":{"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6466,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"3817:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"masked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"3831:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3841:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3831:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3817:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6471,"nodeType":"ExpressionStatement","src":"3817:25:27"},{"expression":{"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6472,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"3968:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":6473,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"3975:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6490,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"4111:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4124:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4111:14:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4139:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6496,"name":"uint8","nodeType":"ElementaryTypeName","src":"4139:5:27","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6495,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4134:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4134:11:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4134:15:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6500,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"4152:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4134:24:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4128:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6493,"name":"int24","nodeType":"ElementaryTypeName","src":"4128:5:27","typeDescriptions":{}}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4128:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"4111:48:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":6504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4110:50:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6505,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"4163:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"4110:64:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3975:199:27","trueExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6474,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"4007:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4007:14:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6481,"name":"masked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"4058:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6479,"name":"BitMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"4030:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BitMath_$3679_$","typeString":"type(library BitMath)"}},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"leastSignificantBit","nodeType":"MemberAccess","referencedDeclaration":3678,"src":"4030:27:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$","typeString":"function (uint256) pure returns (uint8)"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6483,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"4068:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4030:44:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4024:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6477,"name":"int24","nodeType":"ElementaryTypeName","src":"4024:5:27","typeDescriptions":{}}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4024:51:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"4007:68:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":6487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4006:70:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6488,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"4079:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"4006:84:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3968:206:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6509,"nodeType":"ExpressionStatement","src":"3968:206:27"}]},"id":6511,"nodeType":"IfStatement","src":"2616:1570:27","trueBody":{"id":6436,"nodeType":"Block","src":"2625:728:27","statements":[{"assignments":[6373,6375],"declarations":[{"constant":false,"id":6373,"mutability":"mutable","name":"wordPos","nodeType":"VariableDeclaration","scope":6436,"src":"2641:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6372,"name":"int16","nodeType":"ElementaryTypeName","src":"2641:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"},{"constant":false,"id":6375,"mutability":"mutable","name":"bitPos","nodeType":"VariableDeclaration","scope":6436,"src":"2656:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6374,"name":"uint8","nodeType":"ElementaryTypeName","src":"2656:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6379,"initialValue":{"arguments":[{"id":6377,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"2681:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6376,"name":"position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"2672:8:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$","typeString":"function (int24) pure returns (int16,uint8)"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2672:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int16_$_t_uint8_$","typeString":"tuple(int16,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"2640:52:27"},{"assignments":[6381],"declarations":[{"constant":false,"id":6381,"mutability":"mutable","name":"mask","nodeType":"VariableDeclaration","scope":6436,"src":"2775:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2775:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6393,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6383,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"2796:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2791:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2790:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2790:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6389,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"2816:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2811:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2810:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2790:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2775:48:27"},{"assignments":[6395],"declarations":[{"constant":false,"id":6395,"mutability":"mutable","name":"masked","nodeType":"VariableDeclaration","scope":6436,"src":"2838:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6401,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6396,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"2855:4:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"}},"id":6398,"indexExpression":{"id":6397,"name":"wordPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"2860:7:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2855:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6399,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"2871:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2855:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2838:37:27"},{"expression":{"id":6406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6402,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"3011:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"masked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"3025:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3035:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3025:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3011:25:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6407,"nodeType":"ExpressionStatement","src":"3011:25:27"},{"expression":{"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6408,"name":"next","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"3162:4:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":6409,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"3169:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"3300:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6427,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"3319:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3313:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6425,"name":"int24","nodeType":"ElementaryTypeName","src":"3313:5:27","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3313:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3300:26:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":6430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3299:28:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6431,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"3330:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3299:42:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3169:172:27","trueExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"compressed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6353,"src":"3201:10:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6413,"name":"bitPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"3220:6:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6416,"name":"masked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"3256:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6414,"name":"BitMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3229:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BitMath_$3679_$","typeString":"type(library BitMath)"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mostSignificantBit","nodeType":"MemberAccess","referencedDeclaration":3517,"src":"3229:26:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint8_$","typeString":"function (uint256) pure returns (uint8)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3229:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3220:43:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3214:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6411,"name":"int24","nodeType":"ElementaryTypeName","src":"3214:5:27","typeDescriptions":{}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3214:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3201:63:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":6421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3200:65:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6422,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"3268:11:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3200:79:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"3162:179:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6435,"nodeType":"ExpressionStatement","src":"3162:179:27"}]}}]},"documentation":{"id":6335,"nodeType":"StructuredDocumentation","src":"1497:734:27","text":"@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"nextInitializedTickWithinOneWord","nodeType":"FunctionDefinition","parameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"self","nodeType":"VariableDeclaration","scope":6513,"src":"2289:38:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"typeName":{"id":6338,"keyType":{"id":6336,"name":"int16","nodeType":"ElementaryTypeName","src":"2297:5:27","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Mapping","src":"2289:25:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_int16_$_t_uint256_$","typeString":"mapping(int16 => uint256)"},"valueType":{"id":6337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":6341,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6513,"src":"2338:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6340,"name":"int24","nodeType":"ElementaryTypeName","src":"2338:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6343,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":6513,"src":"2359:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6342,"name":"int24","nodeType":"ElementaryTypeName","src":"2359:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6345,"mutability":"mutable","name":"lte","nodeType":"VariableDeclaration","scope":6513,"src":"2387:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6344,"name":"bool","nodeType":"ElementaryTypeName","src":"2387:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2278:124:27"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"next","nodeType":"VariableDeclaration","scope":6513,"src":"2426:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6347,"name":"int24","nodeType":"ElementaryTypeName","src":"2426:5:27","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":6350,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":6513,"src":"2438:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6349,"name":"bool","nodeType":"ElementaryTypeName","src":"2438:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2425:30:27"},"scope":6514,"src":"2237:1956:27","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6515,"src":"347:3849:27"}],"src":"46:4152:27"},"id":27},"contracts/libraries/TickMath.sol":{"ast":{"absolutePath":"contracts/libraries/TickMath.sol","exportedSymbols":{"TickMath":[7049]},"id":7050,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":6516,"literals":["solidity",">=","0.5",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"46:31:28"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"81:238:28","text":"@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"},"fullyImplemented":true,"id":7049,"linearizedBaseContracts":[7049],"name":"TickMath","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"343:108:28","text":"@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"},"id":6522,"mutability":"constant","name":"MIN_TICK","nodeType":"VariableDeclaration","scope":7049,"src":"457:42:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6519,"name":"int24","nodeType":"ElementaryTypeName","src":"457:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"id":6521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"492:7:28","subExpression":{"hexValue":"383837323732","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"493:6:28","typeDescriptions":{"typeIdentifier":"t_rational_887272_by_1","typeString":"int_const 887272"},"value":"887272"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_887272_by_1","typeString":"int_const -887272"}},"visibility":"internal"},{"constant":true,"documentation":{"id":6523,"nodeType":"StructuredDocumentation","src":"506:107:28","text":"@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"},"id":6527,"mutability":"constant","name":"MAX_TICK","nodeType":"VariableDeclaration","scope":7049,"src":"619:44:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6524,"name":"int24","nodeType":"ElementaryTypeName","src":"619:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"654:9:28","subExpression":{"id":6525,"name":"MIN_TICK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6522,"src":"655:8:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":true,"documentation":{"id":6528,"nodeType":"StructuredDocumentation","src":"672:116:28","text":"@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"},"id":6531,"mutability":"constant","name":"MIN_SQRT_RATIO","nodeType":"VariableDeclaration","scope":7049,"src":"794:53:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6529,"name":"uint160","nodeType":"ElementaryTypeName","src":"794:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"34323935313238373339","id":6530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4295128739_by_1","typeString":"int_const 4295128739"},"value":"4295128739"},"visibility":"internal"},{"constant":true,"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"854:116:28","text":"@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"},"id":6535,"mutability":"constant","name":"MAX_SQRT_RATIO","nodeType":"VariableDeclaration","scope":7049,"src":"976:92:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6533,"name":"uint160","nodeType":"ElementaryTypeName","src":"976:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1019:49:28","typeDescriptions":{"typeIdentifier":"t_rational_1461446703485210103287273052203988822378723970342_by_1","typeString":"int_const 1461...(41 digits omitted)...0342"},"value":"1461446703485210103287273052203988822378723970342"},"visibility":"internal"},{"body":{"id":6908,"nodeType":"Block","src":"1469:2526:28","statements":[{"assignments":[6544],"declarations":[{"constant":false,"id":6544,"mutability":"mutable","name":"absTick","nodeType":"VariableDeclaration","scope":6908,"src":"1480:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1480:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6564,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6545,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"1498:4:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1505:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1498:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":6560,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"1549:4:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1542:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6558,"name":"int256","nodeType":"ElementaryTypeName","src":"1542:6:28","typeDescriptions":{}}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1542:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1534:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:28","typeDescriptions":{}}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1534:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1498:57:28","trueExpression":{"arguments":[{"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1517:13:28","subExpression":{"arguments":[{"id":6552,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"1525:4:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1518:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6550,"name":"int256","nodeType":"ElementaryTypeName","src":"1518:6:28","typeDescriptions":{}}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1518:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1509:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1509:7:28","typeDescriptions":{}}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1509:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1480:75:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6566,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"1574:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":6569,"name":"MAX_TICK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"1593:8:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1585:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:28","typeDescriptions":{}}},"id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1585:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1574:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1604:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc","typeString":"literal_string \"T\""},"value":"T"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc","typeString":"literal_string \"T\""}],"id":6565,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1566:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1566:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6574,"nodeType":"ExpressionStatement","src":"1566:42:28"},{"assignments":[6576],"declarations":[{"constant":false,"id":6576,"mutability":"mutable","name":"ratio","nodeType":"VariableDeclaration","scope":6908,"src":"1621:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6585,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6577,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"1637:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:3:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"1637:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1654:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1637:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1695:35:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1637:93:28","trueExpression":{"hexValue":"30786666666362393333626436666164333761613264313632643161353934303031","id":6582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340265354078544963557816517032075149313_by_1","typeString":"int_const 3402...(31 digits omitted)...9313"},"value":"0xfffcb933bd6fad37aa2d162d1a594001"},"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"nodeType":"VariableDeclarationStatement","src":"1621:109:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"1745:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832","id":6587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:3:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"1745:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1762:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1745:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6600,"nodeType":"IfStatement","src":"1741:83:28","trueBody":{"expression":{"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6591,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"1765:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6592,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"1774:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666663937323732333733643431333235396134363939303538306532313361","id":6593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1782:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340248342086729790484326174814286782778_by_1","typeString":"int_const 3402...(31 digits omitted)...2778"},"value":"0xfff97272373d413259a46990580e213a"},"src":"1774:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1773:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1821:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"1773:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1765:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6599,"nodeType":"ExpressionStatement","src":"1765:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6601,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"1839:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1849:3:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"1839:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1856:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1839:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6615,"nodeType":"IfStatement","src":"1835:83:28","trueBody":{"expression":{"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6606,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"1859:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6607,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"1868:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666663265353066356636353639333265663132333537636633633766646363","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340214320654664324051920982716015181260_by_1","typeString":"int_const 3402...(31 digits omitted)...1260"},"value":"0xfff2e50f5f656932ef12357cf3c7fdcc"},"src":"1868:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1867:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"1867:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6614,"nodeType":"ExpressionStatement","src":"1859:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"1933:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1943:3:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"1933:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1933:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6630,"nodeType":"IfStatement","src":"1929:83:28","trueBody":{"expression":{"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6621,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"1953:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6622,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"1962:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666653563616361376531306534653631633336323465616130393431636430","id":6623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1970:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340146287995602323631171512101879684304_by_1","typeString":"int_const 3401...(31 digits omitted)...4304"},"value":"0xffe5caca7e10e4e61c3624eaa0941cd0"},"src":"1962:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1961:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2009:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"1961:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1953:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6629,"nodeType":"ExpressionStatement","src":"1953:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6631,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2027:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130","id":6632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2037:4:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"2027:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2027:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6645,"nodeType":"IfStatement","src":"2023:84:28","trueBody":{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6636,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2048:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2057:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666636239383433643630663631353963396462353838333563393236363434","id":6638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2065:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340010263488231146823593991679159461444_by_1","typeString":"int_const 3400...(31 digits omitted)...1444"},"value":"0xffcb9843d60f6159c9db58835c926644"},"src":"2057:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2056:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2056:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2048:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6644,"nodeType":"ExpressionStatement","src":"2048:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2122:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2132:4:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"2122:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2140:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2122:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6660,"nodeType":"IfStatement","src":"2118:84:28","trueBody":{"expression":{"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6651,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2143:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2152:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666393733623431666139386330383134373265363839366466623235346330","id":6653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2160:34:28","typeDescriptions":{"typeIdentifier":"t_rational_339738377640345403697157401104375502016_by_1","typeString":"int_const 3397...(31 digits omitted)...2016"},"value":"0xff973b41fa98c081472e6896dfb254c0"},"src":"2152:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2151:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2151:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2143:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6659,"nodeType":"ExpressionStatement","src":"2143:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6661,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2217:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2227:4:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"2217:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2235:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2217:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6675,"nodeType":"IfStatement","src":"2213:84:28","trueBody":{"expression":{"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6666,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2238:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2247:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666326561313634363663393661333834336563373862333236623532383631","id":6668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:34:28","typeDescriptions":{"typeIdentifier":"t_rational_339195258003219555707034227454543997025_by_1","typeString":"int_const 3391...(31 digits omitted)...7025"},"value":"0xff2ea16466c96a3843ec78b326b52861"},"src":"2247:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2246:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2294:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2246:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6674,"nodeType":"ExpressionStatement","src":"2238:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6676,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2312:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2322:4:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"2312:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2330:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2312:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6690,"nodeType":"IfStatement","src":"2308:84:28","trueBody":{"expression":{"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6681,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2333:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6682,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2342:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786665356465653034366139396132613831316334363166313936396333303533","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2350:34:28","typeDescriptions":{"typeIdentifier":"t_rational_338111622100601834656805679988414885971_by_1","typeString":"int_const 3381...(31 digits omitted)...5971"},"value":"0xfe5dee046a99a2a811c461f1969c3053"},"src":"2342:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2341:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2389:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2341:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2333:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6689,"nodeType":"ExpressionStatement","src":"2333:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6691,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2407:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2417:5:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"2407:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2426:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2407:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6705,"nodeType":"IfStatement","src":"2403:85:28","trueBody":{"expression":{"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6696,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2429:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6697,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2438:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786663626538366337393030613838616564636666633833623437396161336134","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2446:34:28","typeDescriptions":{"typeIdentifier":"t_rational_335954724994790223023589805789778977700_by_1","typeString":"int_const 3359...(31 digits omitted)...7700"},"value":"0xfcbe86c7900a88aedcffc83b479aa3a4"},"src":"2438:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2437:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2485:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2437:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2429:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6704,"nodeType":"ExpressionStatement","src":"2429:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6706,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2503:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030","id":6707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2513:5:28","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"0x200"},"src":"2503:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2522:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2503:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6720,"nodeType":"IfStatement","src":"2499:85:28","trueBody":{"expression":{"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6711,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2525:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6712,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2534:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786639383761373235336163343133313736663262303734636637383135653534","id":6713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:34:28","typeDescriptions":{"typeIdentifier":"t_rational_331682121138379247127172139078559817300_by_1","typeString":"int_const 3316...(31 digits omitted)...7300"},"value":"0xf987a7253ac413176f2b074cf7815e54"},"src":"2534:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2533:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2533:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2525:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6719,"nodeType":"ExpressionStatement","src":"2525:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2599:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030","id":6722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2609:5:28","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"0x400"},"src":"2599:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2618:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2599:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6735,"nodeType":"IfStatement","src":"2595:85:28","trueBody":{"expression":{"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6726,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2621:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2630:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786633333932623038323262373030303539343063376133393865346237306633","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:34:28","typeDescriptions":{"typeIdentifier":"t_rational_323299236684853023288211250268160618739_by_1","typeString":"int_const 3232...(31 digits omitted)...8739"},"value":"0xf3392b0822b70005940c7a398e4b70f3"},"src":"2630:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2629:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2677:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2629:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2621:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6734,"nodeType":"ExpressionStatement","src":"2621:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6736,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2695:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030","id":6737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:5:28","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"0x800"},"src":"2695:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2714:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2695:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6750,"nodeType":"IfStatement","src":"2691:85:28","trueBody":{"expression":{"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6741,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2717:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2726:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786537313539343735613263323962373434336232396337666136653838396439","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2734:34:28","typeDescriptions":{"typeIdentifier":"t_rational_307163716377032989948697243942600083929_by_1","typeString":"int_const 3071...(31 digits omitted)...3929"},"value":"0xe7159475a2c29b7443b29c7fa6e889d9"},"src":"2726:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2725:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2773:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2725:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2717:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6749,"nodeType":"ExpressionStatement","src":"2717:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6751,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2791:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030","id":6752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2801:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"value":"0x1000"},"src":"2791:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2791:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6765,"nodeType":"IfStatement","src":"2787:86:28","trueBody":{"expression":{"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6756,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2814:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2823:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786430393766336264666432303232623838343561643866373932616135383235","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2831:34:28","typeDescriptions":{"typeIdentifier":"t_rational_277268403626896220162999269216087595045_by_1","typeString":"int_const 2772...(31 digits omitted)...5045"},"value":"0xd097f3bdfd2022b8845ad8f792aa5825"},"src":"2823:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2822:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2822:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2814:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6764,"nodeType":"ExpressionStatement","src":"2814:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2888:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2898:6:28","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"0x2000"},"src":"2888:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2888:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6780,"nodeType":"IfStatement","src":"2884:86:28","trueBody":{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6771,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2911:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6772,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2920:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786139663734363436326438373066646638613635646331663930653036316535","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2928:34:28","typeDescriptions":{"typeIdentifier":"t_rational_225923453940442621947126027127485391333_by_1","typeString":"int_const 2259...(31 digits omitted)...1333"},"value":"0xa9f746462d870fdf8a65dc1f90e061e5"},"src":"2920:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2919:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2967:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2919:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6779,"nodeType":"ExpressionStatement","src":"2911:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6781,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2985:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2995:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16384_by_1","typeString":"int_const 16384"},"value":"0x4000"},"src":"2985:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3005:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2985:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6795,"nodeType":"IfStatement","src":"2981:86:28","trueBody":{"expression":{"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6786,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3008:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6787,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3017:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783730643836396131353664326131623839306262336466363262616633326637","id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3025:34:28","typeDescriptions":{"typeIdentifier":"t_rational_149997214084966997727330242082538205943_by_1","typeString":"int_const 1499...(31 digits omitted)...5943"},"value":"0x70d869a156d2a1b890bb3df62baf32f7"},"src":"3017:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3016:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3064:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3016:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3008:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6794,"nodeType":"ExpressionStatement","src":"3008:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3082:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030","id":6797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:6:28","typeDescriptions":{"typeIdentifier":"t_rational_32768_by_1","typeString":"int_const 32768"},"value":"0x8000"},"src":"3082:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3102:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3082:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6810,"nodeType":"IfStatement","src":"3078:86:28","trueBody":{"expression":{"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6801,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3105:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6802,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3114:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783331626531333566393764303866643938313233313530353534326663666136","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3122:34:28","typeDescriptions":{"typeIdentifier":"t_rational_66119101136024775622716233608466517926_by_1","typeString":"int_const 6611...(30 digits omitted)...7926"},"value":"0x31be135f97d08fd981231505542fcfa6"},"src":"3114:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3113:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3161:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3113:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3105:59:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6809,"nodeType":"ExpressionStatement","src":"3105:59:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3179:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030","id":6812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3189:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"3179:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3200:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6825,"nodeType":"IfStatement","src":"3175:86:28","trueBody":{"expression":{"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6816,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3203:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6817,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3212:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"307839616135303862356237613834653163363737646535346633653939626339","id":6818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3220:33:28","typeDescriptions":{"typeIdentifier":"t_rational_12847376061809297530290974190478138313_by_1","typeString":"int_const 1284...(30 digits omitted)...8313"},"value":"0x9aa508b5b7a84e1c677de54f3e99bc9"},"src":"3212:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6820,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3211:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3258:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3211:50:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3203:58:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6824,"nodeType":"ExpressionStatement","src":"3203:58:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6826,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3276:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3286:7:28","typeDescriptions":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"},"value":"0x20000"},"src":"3276:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3297:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3276:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6840,"nodeType":"IfStatement","src":"3272:85:28","trueBody":{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6831,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3300:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3309:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078356436616638646564623831313936363939633332393232356565363034","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3317:32:28","typeDescriptions":{"typeIdentifier":"t_rational_485053260817066172746253684029974020_by_1","typeString":"int_const 4850...(28 digits omitted)...4020"},"value":"0x5d6af8dedb81196699c329225ee604"},"src":"3309:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3308:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3354:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3308:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3300:57:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6839,"nodeType":"ExpressionStatement","src":"3300:57:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3372:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3382:7:28","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"0x40000"},"src":"3372:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3393:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3372:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6855,"nodeType":"IfStatement","src":"3368:83:28","trueBody":{"expression":{"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6846,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3396:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6847,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3405:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"307832323136653538346635666131656139323630343162656466653938","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3413:30:28","typeDescriptions":{"typeIdentifier":"t_rational_691415978906521570653435304214168_by_1","typeString":"int_const 6914...(25 digits omitted)...4168"},"value":"0x2216e584f5fa1ea926041bedfe98"},"src":"3405:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3404:40:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3448:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3404:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3396:55:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6854,"nodeType":"ExpressionStatement","src":"3396:55:28"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6856,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3466:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030","id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3476:7:28","typeDescriptions":{"typeIdentifier":"t_rational_524288_by_1","typeString":"int_const 524288"},"value":"0x80000"},"src":"3466:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3487:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3466:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6870,"nodeType":"IfStatement","src":"3462:78:28","trueBody":{"expression":{"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6861,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3490:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6862,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3499:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783438613137303339316637646334323434346538666132","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3507:25:28","typeDescriptions":{"typeIdentifier":"t_rational_1404880482679654955896180642_by_1","typeString":"int_const 1404880482679654955896180642"},"value":"0x48a170391f7dc42444e8fa2"},"src":"3499:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3498:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3537:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3498:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3490:50:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6869,"nodeType":"ExpressionStatement","src":"3490:50:28"}},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6871,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"3557:4:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3564:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3557:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6884,"nodeType":"IfStatement","src":"3553:47:28","trueBody":{"expression":{"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6874,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3567:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3580:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3575:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3575:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3575:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6880,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3595:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3575:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3567:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6883,"nodeType":"ExpressionStatement","src":"3567:33:28"}},{"expression":{"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6885,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"3915:12:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6888,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3939:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3948:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3939:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3938:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6892,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"3955:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3964:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3969:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3964:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3963:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"3955:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3976:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3955:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3984:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3955:30:28","trueExpression":{"hexValue":"30","id":6900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3980:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3954:32:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3938:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3930:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6886,"name":"uint160","nodeType":"ElementaryTypeName","src":"3930:7:28","typeDescriptions":{}}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3930:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3915:72:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":6907,"nodeType":"ExpressionStatement","src":"3915:72:28"}]},"documentation":{"id":6536,"nodeType":"StructuredDocumentation","src":"1077:301:28","text":"@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"},"id":6909,"implemented":true,"kind":"function","modifiers":[],"name":"getSqrtRatioAtTick","nodeType":"FunctionDefinition","parameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":6909,"src":"1412:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6537,"name":"int24","nodeType":"ElementaryTypeName","src":"1412:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1411:12:28"},"returnParameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":6909,"src":"1447:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6540,"name":"uint160","nodeType":"ElementaryTypeName","src":"1447:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1446:22:28"},"scope":7049,"src":"1384:2611:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7047,"nodeType":"Block","src":"4506:4339:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"4625:12:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6919,"name":"MIN_SQRT_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"4641:14:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4625:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6921,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"4659:12:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6922,"name":"MAX_SQRT_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6535,"src":"4674:14:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4659:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4625:63:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52","id":6925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4690:3:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2","typeString":"literal_string \"R\""},"value":"R"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2","typeString":"literal_string \"R\""}],"id":6917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4617:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:77:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6927,"nodeType":"ExpressionStatement","src":"4617:77:28"},{"assignments":[6929],"declarations":[{"constant":false,"id":6929,"mutability":"mutable","name":"ratio","nodeType":"VariableDeclaration","scope":7047,"src":"4705:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4705:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6936,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6932,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"4729:12:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4721:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6930,"name":"uint256","nodeType":"ElementaryTypeName","src":"4721:7:28","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4721:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4746:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4721:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4705:43:28"},{"assignments":[6938],"declarations":[{"constant":false,"id":6938,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":7047,"src":"4761:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6937,"name":"uint256","nodeType":"ElementaryTypeName","src":"4761:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6940,"initialValue":{"id":6939,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"4773:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4761:17:28"},{"assignments":[6942],"declarations":[{"constant":false,"id":6942,"mutability":"mutable","name":"msb","nodeType":"VariableDeclaration","scope":7047,"src":"4789:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"4789:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6944,"initialValue":{"hexValue":"30","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4789:15:28"},{"AST":{"nodeType":"YulBlock","src":"4826:143:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4841:58:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4854:1:28","type":"","value":"7"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"4860:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"4863:34:28","type":"","value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4857:2:28"},"nodeType":"YulFunctionCall","src":"4857:41:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4850:3:28"},"nodeType":"YulFunctionCall","src":"4850:49:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"4845:1:28","type":""}]},{"nodeType":"YulAssignment","src":"4913:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"4923:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"4928:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4920:2:28"},"nodeType":"YulFunctionCall","src":"4920:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"4913:3:28"}]},{"nodeType":"YulAssignment","src":"4944:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"4953:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"4956:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4949:3:28"},"nodeType":"YulFunctionCall","src":"4949:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4944:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"4913:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"4923:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"4860:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"4944:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"4956:1:28","valueSize":1}],"id":6945,"nodeType":"InlineAssembly","src":"4817:152:28"},{"AST":{"nodeType":"YulBlock","src":"4988:127:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5003:42:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5016:1:28","type":"","value":"6"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5022:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5025:18:28","type":"","value":"0xFFFFFFFFFFFFFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5019:2:28"},"nodeType":"YulFunctionCall","src":"5019:25:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5012:3:28"},"nodeType":"YulFunctionCall","src":"5012:33:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5007:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5059:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5069:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5074:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5066:2:28"},"nodeType":"YulFunctionCall","src":"5066:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5059:3:28"}]},{"nodeType":"YulAssignment","src":"5090:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5099:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"5102:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5095:3:28"},"nodeType":"YulFunctionCall","src":"5095:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5090:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5059:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5069:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5022:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5090:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5102:1:28","valueSize":1}],"id":6946,"nodeType":"InlineAssembly","src":"4979:136:28"},{"AST":{"nodeType":"YulBlock","src":"5134:119:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5149:34:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5162:1:28","type":"","value":"5"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5168:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5171:10:28","type":"","value":"0xFFFFFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5165:2:28"},"nodeType":"YulFunctionCall","src":"5165:17:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5158:3:28"},"nodeType":"YulFunctionCall","src":"5158:25:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5153:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5197:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5207:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5212:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5204:2:28"},"nodeType":"YulFunctionCall","src":"5204:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5197:3:28"}]},{"nodeType":"YulAssignment","src":"5228:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5237:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"5240:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5233:3:28"},"nodeType":"YulFunctionCall","src":"5233:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5228:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5197:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5207:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5168:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5228:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5240:1:28","valueSize":1}],"id":6947,"nodeType":"InlineAssembly","src":"5125:128:28"},{"AST":{"nodeType":"YulBlock","src":"5272:115:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5287:30:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5300:1:28","type":"","value":"4"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5306:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5309:6:28","type":"","value":"0xFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5303:2:28"},"nodeType":"YulFunctionCall","src":"5303:13:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5296:3:28"},"nodeType":"YulFunctionCall","src":"5296:21:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5291:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5331:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5341:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5346:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5338:2:28"},"nodeType":"YulFunctionCall","src":"5338:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5331:3:28"}]},{"nodeType":"YulAssignment","src":"5362:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5371:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"5374:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5367:3:28"},"nodeType":"YulFunctionCall","src":"5367:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5362:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5331:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5341:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5306:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5362:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5374:1:28","valueSize":1}],"id":6948,"nodeType":"InlineAssembly","src":"5263:124:28"},{"AST":{"nodeType":"YulBlock","src":"5406:113:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5421:28:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5434:1:28","type":"","value":"3"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5440:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5443:4:28","type":"","value":"0xFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5437:2:28"},"nodeType":"YulFunctionCall","src":"5437:11:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5430:3:28"},"nodeType":"YulFunctionCall","src":"5430:19:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5425:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5463:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5473:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5478:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5470:2:28"},"nodeType":"YulFunctionCall","src":"5470:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5463:3:28"}]},{"nodeType":"YulAssignment","src":"5494:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5503:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"5506:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5499:3:28"},"nodeType":"YulFunctionCall","src":"5499:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5494:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5463:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5473:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5440:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5494:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5506:1:28","valueSize":1}],"id":6949,"nodeType":"InlineAssembly","src":"5397:122:28"},{"AST":{"nodeType":"YulBlock","src":"5538:112:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5553:27:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5566:1:28","type":"","value":"2"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5572:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5575:3:28","type":"","value":"0xF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5569:2:28"},"nodeType":"YulFunctionCall","src":"5569:10:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5562:3:28"},"nodeType":"YulFunctionCall","src":"5562:18:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5557:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5594:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5604:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5609:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5601:2:28"},"nodeType":"YulFunctionCall","src":"5601:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5594:3:28"}]},{"nodeType":"YulAssignment","src":"5625:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5634:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"5637:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5630:3:28"},"nodeType":"YulFunctionCall","src":"5630:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5625:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5594:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5604:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5572:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5625:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5637:1:28","valueSize":1}],"id":6950,"nodeType":"InlineAssembly","src":"5529:121:28"},{"AST":{"nodeType":"YulBlock","src":"5669:112:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5684:27:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5697:1:28","type":"","value":"1"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5703:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5706:3:28","type":"","value":"0x3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5700:2:28"},"nodeType":"YulFunctionCall","src":"5700:10:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5693:3:28"},"nodeType":"YulFunctionCall","src":"5693:18:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5688:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5725:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5735:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5740:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5732:2:28"},"nodeType":"YulFunctionCall","src":"5732:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5725:3:28"}]},{"nodeType":"YulAssignment","src":"5756:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5765:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"5768:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5761:3:28"},"nodeType":"YulFunctionCall","src":"5761:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5756:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5725:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5735:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5703:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5756:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5768:1:28","valueSize":1}],"id":6951,"nodeType":"InlineAssembly","src":"5660:121:28"},{"AST":{"nodeType":"YulBlock","src":"5800:76:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5815:19:28","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5827:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5830:3:28","type":"","value":"0x1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5824:2:28"},"nodeType":"YulFunctionCall","src":"5824:10:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5819:1:28","type":""}]},{"nodeType":"YulAssignment","src":"5848:17:28","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5858:3:28"},{"name":"f","nodeType":"YulIdentifier","src":"5863:1:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5855:2:28"},"nodeType":"YulFunctionCall","src":"5855:10:28"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5848:3:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5848:3:28","valueSize":1},{"declaration":6942,"isOffset":false,"isSlot":false,"src":"5858:3:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"5827:1:28","valueSize":1}],"id":6952,"nodeType":"InlineAssembly","src":"5791:85:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6953,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"5892:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313238","id":6954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5899:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"5892:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6965,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"5944:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6966,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"5948:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313237","id":6967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5958:3:28","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6968,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"5964:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5958:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5957:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5948:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5944:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6973,"nodeType":"ExpressionStatement","src":"5944:24:28"},"id":6974,"nodeType":"IfStatement","src":"5888:80:28","trueBody":{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6956,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"5904:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"5908:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6958,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"5918:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"313237","id":6959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5924:3:28","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"5918:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5917:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5908:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5904:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6964,"nodeType":"ExpressionStatement","src":"5904:24:28"}},{"assignments":[6976],"declarations":[{"constant":false,"id":6976,"mutability":"mutable","name":"log_2","nodeType":"VariableDeclaration","scope":7047,"src":"5981:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6975,"name":"int256","nodeType":"ElementaryTypeName","src":"5981:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6986,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6979,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"6004:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5997:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6977,"name":"int256","nodeType":"ElementaryTypeName","src":"5997:6:28","typeDescriptions":{}}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5997:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"313238","id":6981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6011:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"5997:17:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6983,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5996:19:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6019:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5996:25:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5981:40:28"},{"AST":{"nodeType":"YulBlock","src":"6043:156:28","statements":[{"nodeType":"YulAssignment","src":"6058:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6067:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6076:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6079:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6072:3:28"},"nodeType":"YulFunctionCall","src":"6072:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6063:3:28"},"nodeType":"YulFunctionCall","src":"6063:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6058:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"6096:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6109:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6114:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6105:3:28"},"nodeType":"YulFunctionCall","src":"6105:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6100:1:28","type":""}]},{"nodeType":"YulAssignment","src":"6130:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6142:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6153:2:28","type":"","value":"63"},{"name":"f","nodeType":"YulIdentifier","src":"6157:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6149:3:28"},"nodeType":"YulFunctionCall","src":"6149:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6139:2:28"},"nodeType":"YulFunctionCall","src":"6139:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6130:5:28"}]},{"nodeType":"YulAssignment","src":"6174:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6183:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6186:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6179:3:28"},"nodeType":"YulFunctionCall","src":"6179:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6174:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6130:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6142:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6058:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6076:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6079:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6114:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6174:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6186:1:28","valueSize":1}],"id":6987,"nodeType":"InlineAssembly","src":"6034:165:28"},{"AST":{"nodeType":"YulBlock","src":"6218:156:28","statements":[{"nodeType":"YulAssignment","src":"6233:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6242:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6251:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6254:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6247:3:28"},"nodeType":"YulFunctionCall","src":"6247:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6238:3:28"},"nodeType":"YulFunctionCall","src":"6238:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6233:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"6271:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6284:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6289:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6280:3:28"},"nodeType":"YulFunctionCall","src":"6280:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6275:1:28","type":""}]},{"nodeType":"YulAssignment","src":"6305:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6317:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6328:2:28","type":"","value":"62"},{"name":"f","nodeType":"YulIdentifier","src":"6332:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6324:3:28"},"nodeType":"YulFunctionCall","src":"6324:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6314:2:28"},"nodeType":"YulFunctionCall","src":"6314:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6305:5:28"}]},{"nodeType":"YulAssignment","src":"6349:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6358:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6361:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6354:3:28"},"nodeType":"YulFunctionCall","src":"6354:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6349:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6305:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6317:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6233:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6251:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6254:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6289:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6349:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6361:1:28","valueSize":1}],"id":6988,"nodeType":"InlineAssembly","src":"6209:165:28"},{"AST":{"nodeType":"YulBlock","src":"6393:156:28","statements":[{"nodeType":"YulAssignment","src":"6408:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6417:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6426:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6429:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6422:3:28"},"nodeType":"YulFunctionCall","src":"6422:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6413:3:28"},"nodeType":"YulFunctionCall","src":"6413:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6408:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"6446:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6459:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6464:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6455:3:28"},"nodeType":"YulFunctionCall","src":"6455:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6450:1:28","type":""}]},{"nodeType":"YulAssignment","src":"6480:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6492:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6503:2:28","type":"","value":"61"},{"name":"f","nodeType":"YulIdentifier","src":"6507:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6499:3:28"},"nodeType":"YulFunctionCall","src":"6499:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6489:2:28"},"nodeType":"YulFunctionCall","src":"6489:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6480:5:28"}]},{"nodeType":"YulAssignment","src":"6524:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6533:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6536:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6529:3:28"},"nodeType":"YulFunctionCall","src":"6529:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6524:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6480:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6492:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6408:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6426:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6429:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6464:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6524:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6536:1:28","valueSize":1}],"id":6989,"nodeType":"InlineAssembly","src":"6384:165:28"},{"AST":{"nodeType":"YulBlock","src":"6568:156:28","statements":[{"nodeType":"YulAssignment","src":"6583:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6592:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6601:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6604:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6597:3:28"},"nodeType":"YulFunctionCall","src":"6597:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6588:3:28"},"nodeType":"YulFunctionCall","src":"6588:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6583:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"6621:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6634:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6639:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6630:3:28"},"nodeType":"YulFunctionCall","src":"6630:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6625:1:28","type":""}]},{"nodeType":"YulAssignment","src":"6655:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6667:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6678:2:28","type":"","value":"60"},{"name":"f","nodeType":"YulIdentifier","src":"6682:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6674:3:28"},"nodeType":"YulFunctionCall","src":"6674:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6664:2:28"},"nodeType":"YulFunctionCall","src":"6664:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6655:5:28"}]},{"nodeType":"YulAssignment","src":"6699:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6708:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6711:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6704:3:28"},"nodeType":"YulFunctionCall","src":"6704:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6699:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6655:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6667:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6583:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6601:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6604:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6639:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6699:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6711:1:28","valueSize":1}],"id":6990,"nodeType":"InlineAssembly","src":"6559:165:28"},{"AST":{"nodeType":"YulBlock","src":"6743:156:28","statements":[{"nodeType":"YulAssignment","src":"6758:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6767:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6776:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6779:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6772:3:28"},"nodeType":"YulFunctionCall","src":"6772:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6763:3:28"},"nodeType":"YulFunctionCall","src":"6763:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6758:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"6796:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6809:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6814:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6805:3:28"},"nodeType":"YulFunctionCall","src":"6805:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6800:1:28","type":""}]},{"nodeType":"YulAssignment","src":"6830:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6842:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6853:2:28","type":"","value":"59"},{"name":"f","nodeType":"YulIdentifier","src":"6857:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6849:3:28"},"nodeType":"YulFunctionCall","src":"6849:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6839:2:28"},"nodeType":"YulFunctionCall","src":"6839:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6830:5:28"}]},{"nodeType":"YulAssignment","src":"6874:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6883:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6886:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6879:3:28"},"nodeType":"YulFunctionCall","src":"6879:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6874:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6830:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"6842:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6758:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6776:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6779:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6814:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6874:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6886:1:28","valueSize":1}],"id":6991,"nodeType":"InlineAssembly","src":"6734:165:28"},{"AST":{"nodeType":"YulBlock","src":"6918:156:28","statements":[{"nodeType":"YulAssignment","src":"6933:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6942:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6951:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"6954:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6947:3:28"},"nodeType":"YulFunctionCall","src":"6947:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6938:3:28"},"nodeType":"YulFunctionCall","src":"6938:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6933:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"6971:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6984:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6989:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6980:3:28"},"nodeType":"YulFunctionCall","src":"6980:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6975:1:28","type":""}]},{"nodeType":"YulAssignment","src":"7005:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7017:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7028:2:28","type":"","value":"58"},{"name":"f","nodeType":"YulIdentifier","src":"7032:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7024:3:28"},"nodeType":"YulFunctionCall","src":"7024:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7014:2:28"},"nodeType":"YulFunctionCall","src":"7014:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7005:5:28"}]},{"nodeType":"YulAssignment","src":"7049:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7058:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7061:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7054:3:28"},"nodeType":"YulFunctionCall","src":"7054:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7049:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7005:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7017:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6933:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6951:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6954:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"6989:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7049:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7061:1:28","valueSize":1}],"id":6992,"nodeType":"InlineAssembly","src":"6909:165:28"},{"AST":{"nodeType":"YulBlock","src":"7093:156:28","statements":[{"nodeType":"YulAssignment","src":"7108:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7117:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7126:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7129:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7122:3:28"},"nodeType":"YulFunctionCall","src":"7122:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7113:3:28"},"nodeType":"YulFunctionCall","src":"7113:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7108:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"7146:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7159:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7164:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7155:3:28"},"nodeType":"YulFunctionCall","src":"7155:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7150:1:28","type":""}]},{"nodeType":"YulAssignment","src":"7180:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7192:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7203:2:28","type":"","value":"57"},{"name":"f","nodeType":"YulIdentifier","src":"7207:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7199:3:28"},"nodeType":"YulFunctionCall","src":"7199:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7189:2:28"},"nodeType":"YulFunctionCall","src":"7189:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7180:5:28"}]},{"nodeType":"YulAssignment","src":"7224:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7233:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7236:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7229:3:28"},"nodeType":"YulFunctionCall","src":"7229:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7224:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7180:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7192:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7108:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7126:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7129:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7164:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7224:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7236:1:28","valueSize":1}],"id":6993,"nodeType":"InlineAssembly","src":"7084:165:28"},{"AST":{"nodeType":"YulBlock","src":"7268:156:28","statements":[{"nodeType":"YulAssignment","src":"7283:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7292:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7301:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7304:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7297:3:28"},"nodeType":"YulFunctionCall","src":"7297:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7288:3:28"},"nodeType":"YulFunctionCall","src":"7288:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7283:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"7321:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7334:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7339:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7330:3:28"},"nodeType":"YulFunctionCall","src":"7330:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7325:1:28","type":""}]},{"nodeType":"YulAssignment","src":"7355:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7367:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7378:2:28","type":"","value":"56"},{"name":"f","nodeType":"YulIdentifier","src":"7382:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7374:3:28"},"nodeType":"YulFunctionCall","src":"7374:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7364:2:28"},"nodeType":"YulFunctionCall","src":"7364:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7355:5:28"}]},{"nodeType":"YulAssignment","src":"7399:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7408:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7411:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7404:3:28"},"nodeType":"YulFunctionCall","src":"7404:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7399:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7355:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7367:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7283:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7301:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7304:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7339:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7399:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7411:1:28","valueSize":1}],"id":6994,"nodeType":"InlineAssembly","src":"7259:165:28"},{"AST":{"nodeType":"YulBlock","src":"7443:156:28","statements":[{"nodeType":"YulAssignment","src":"7458:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7467:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7476:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7479:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7472:3:28"},"nodeType":"YulFunctionCall","src":"7472:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7463:3:28"},"nodeType":"YulFunctionCall","src":"7463:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7458:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"7496:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7509:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7514:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7505:3:28"},"nodeType":"YulFunctionCall","src":"7505:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7500:1:28","type":""}]},{"nodeType":"YulAssignment","src":"7530:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7542:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7553:2:28","type":"","value":"55"},{"name":"f","nodeType":"YulIdentifier","src":"7557:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7549:3:28"},"nodeType":"YulFunctionCall","src":"7549:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7539:2:28"},"nodeType":"YulFunctionCall","src":"7539:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7530:5:28"}]},{"nodeType":"YulAssignment","src":"7574:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7583:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7586:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7579:3:28"},"nodeType":"YulFunctionCall","src":"7579:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7574:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7530:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7542:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7458:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7476:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7479:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7514:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7574:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7586:1:28","valueSize":1}],"id":6995,"nodeType":"InlineAssembly","src":"7434:165:28"},{"AST":{"nodeType":"YulBlock","src":"7618:156:28","statements":[{"nodeType":"YulAssignment","src":"7633:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7642:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7651:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7654:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7647:3:28"},"nodeType":"YulFunctionCall","src":"7647:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7638:3:28"},"nodeType":"YulFunctionCall","src":"7638:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7633:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"7671:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7684:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7689:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7680:3:28"},"nodeType":"YulFunctionCall","src":"7680:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7675:1:28","type":""}]},{"nodeType":"YulAssignment","src":"7705:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7717:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7728:2:28","type":"","value":"54"},{"name":"f","nodeType":"YulIdentifier","src":"7732:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7724:3:28"},"nodeType":"YulFunctionCall","src":"7724:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7714:2:28"},"nodeType":"YulFunctionCall","src":"7714:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7705:5:28"}]},{"nodeType":"YulAssignment","src":"7749:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7758:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7761:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7754:3:28"},"nodeType":"YulFunctionCall","src":"7754:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7749:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7705:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7717:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7633:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7651:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7654:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7689:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7749:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7761:1:28","valueSize":1}],"id":6996,"nodeType":"InlineAssembly","src":"7609:165:28"},{"AST":{"nodeType":"YulBlock","src":"7793:156:28","statements":[{"nodeType":"YulAssignment","src":"7808:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7817:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7826:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7829:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7822:3:28"},"nodeType":"YulFunctionCall","src":"7822:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7813:3:28"},"nodeType":"YulFunctionCall","src":"7813:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7808:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"7846:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7859:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7864:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7855:3:28"},"nodeType":"YulFunctionCall","src":"7855:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7850:1:28","type":""}]},{"nodeType":"YulAssignment","src":"7880:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7892:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7903:2:28","type":"","value":"53"},{"name":"f","nodeType":"YulIdentifier","src":"7907:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7899:3:28"},"nodeType":"YulFunctionCall","src":"7899:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7889:2:28"},"nodeType":"YulFunctionCall","src":"7889:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7880:5:28"}]},{"nodeType":"YulAssignment","src":"7924:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7933:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"7936:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7929:3:28"},"nodeType":"YulFunctionCall","src":"7929:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7924:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7880:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"7892:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7808:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7826:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7829:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7864:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7924:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7936:1:28","valueSize":1}],"id":6997,"nodeType":"InlineAssembly","src":"7784:165:28"},{"AST":{"nodeType":"YulBlock","src":"7968:156:28","statements":[{"nodeType":"YulAssignment","src":"7983:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7992:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"8001:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"8004:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7997:3:28"},"nodeType":"YulFunctionCall","src":"7997:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7988:3:28"},"nodeType":"YulFunctionCall","src":"7988:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7983:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"8021:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8034:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"8039:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8030:3:28"},"nodeType":"YulFunctionCall","src":"8030:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"8025:1:28","type":""}]},{"nodeType":"YulAssignment","src":"8055:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"8067:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8078:2:28","type":"","value":"52"},{"name":"f","nodeType":"YulIdentifier","src":"8082:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8074:3:28"},"nodeType":"YulFunctionCall","src":"8074:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8064:2:28"},"nodeType":"YulFunctionCall","src":"8064:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"8055:5:28"}]},{"nodeType":"YulAssignment","src":"8099:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"8108:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"8111:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8104:3:28"},"nodeType":"YulFunctionCall","src":"8104:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8099:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"8055:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"8067:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"7983:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8001:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8004:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8039:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8099:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8111:1:28","valueSize":1}],"id":6998,"nodeType":"InlineAssembly","src":"7959:165:28"},{"AST":{"nodeType":"YulBlock","src":"8143:156:28","statements":[{"nodeType":"YulAssignment","src":"8158:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8167:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"8176:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"8179:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8172:3:28"},"nodeType":"YulFunctionCall","src":"8172:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8163:3:28"},"nodeType":"YulFunctionCall","src":"8163:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8158:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"8196:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8209:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"8214:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8205:3:28"},"nodeType":"YulFunctionCall","src":"8205:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"8200:1:28","type":""}]},{"nodeType":"YulAssignment","src":"8230:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"8242:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8253:2:28","type":"","value":"51"},{"name":"f","nodeType":"YulIdentifier","src":"8257:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8249:3:28"},"nodeType":"YulFunctionCall","src":"8249:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8239:2:28"},"nodeType":"YulFunctionCall","src":"8239:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"8230:5:28"}]},{"nodeType":"YulAssignment","src":"8274:14:28","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"8283:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"8286:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8279:3:28"},"nodeType":"YulFunctionCall","src":"8279:9:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8274:1:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"8230:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"8242:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8158:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8176:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8179:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8214:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8274:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8286:1:28","valueSize":1}],"id":6999,"nodeType":"InlineAssembly","src":"8134:165:28"},{"AST":{"nodeType":"YulBlock","src":"8318:128:28","statements":[{"nodeType":"YulAssignment","src":"8333:24:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8342:3:28","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"8351:1:28"},{"name":"r","nodeType":"YulIdentifier","src":"8354:1:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8347:3:28"},"nodeType":"YulFunctionCall","src":"8347:9:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8338:3:28"},"nodeType":"YulFunctionCall","src":"8338:19:28"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8333:1:28"}]},{"nodeType":"YulVariableDeclaration","src":"8371:20:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8384:3:28","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"8389:1:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8380:3:28"},"nodeType":"YulFunctionCall","src":"8380:11:28"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"8375:1:28","type":""}]},{"nodeType":"YulAssignment","src":"8405:30:28","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"8417:5:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8428:2:28","type":"","value":"50"},{"name":"f","nodeType":"YulIdentifier","src":"8432:1:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8424:3:28"},"nodeType":"YulFunctionCall","src":"8424:10:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8414:2:28"},"nodeType":"YulFunctionCall","src":"8414:21:28"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"8405:5:28"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":6976,"isOffset":false,"isSlot":false,"src":"8405:5:28","valueSize":1},{"declaration":6976,"isOffset":false,"isSlot":false,"src":"8417:5:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8333:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8351:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8354:1:28","valueSize":1},{"declaration":6938,"isOffset":false,"isSlot":false,"src":"8389:1:28","valueSize":1}],"id":7000,"nodeType":"InlineAssembly","src":"8309:137:28"},{"assignments":[7002],"declarations":[{"constant":false,"id":7002,"mutability":"mutable","name":"log_sqrt10001","nodeType":"VariableDeclaration","scope":7047,"src":"8458:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7001,"name":"int256","nodeType":"ElementaryTypeName","src":"8458:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7006,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7003,"name":"log_2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"8481:5:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"323535373338393538393939363033383236333437313431","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8489:24:28","typeDescriptions":{"typeIdentifier":"t_rational_255738958999603826347141_by_1","typeString":"int_const 255738958999603826347141"},"value":"255738958999603826347141"},"src":"8481:32:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"8458:55:28"},{"assignments":[7008],"declarations":[{"constant":false,"id":7008,"mutability":"mutable","name":"tickLow","nodeType":"VariableDeclaration","scope":7047,"src":"8544:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7007,"name":"int24","nodeType":"ElementaryTypeName","src":"8544:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":7018,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7011,"name":"log_sqrt10001","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"8567:13:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"33343032393932393536383039313332343138353936313430313030363630323437323130","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8583:37:28","typeDescriptions":{"typeIdentifier":"t_rational_3402992956809132418596140100660247210_by_1","typeString":"int_const 3402...(29 digits omitted)...7210"},"value":"3402992956809132418596140100660247210"},"src":"8567:53:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8566:55:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8625:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8566:62:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8560:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7009,"name":"int24","nodeType":"ElementaryTypeName","src":"8560:5:28","typeDescriptions":{}}},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"8544:85:28"},{"assignments":[7020],"declarations":[{"constant":false,"id":7020,"mutability":"mutable","name":"tickHi","nodeType":"VariableDeclaration","scope":7047,"src":"8640:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7019,"name":"int24","nodeType":"ElementaryTypeName","src":"8640:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":7030,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7023,"name":"log_sqrt10001","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7002,"src":"8662:13:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323931333339343634373731393839363232393037303237363231313533333938303838343935","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8678:39:28","typeDescriptions":{"typeIdentifier":"t_rational_291339464771989622907027621153398088495_by_1","typeString":"int_const 2913...(31 digits omitted)...8495"},"value":"291339464771989622907027621153398088495"},"src":"8662:55:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8661:57:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8722:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8661:64:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8655:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7021,"name":"int24","nodeType":"ElementaryTypeName","src":"8655:5:28","typeDescriptions":{}}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8655:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"8640:86:28"},{"expression":{"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7031,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"8739:4:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7032,"name":"tickLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"8746:7:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7033,"name":"tickHi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"8757:6:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8746:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7037,"name":"tickHi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"8795:6:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":7036,"name":"getSqrtRatioAtTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"8776:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8776:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7039,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"8806:12:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"8776:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7042,"name":"tickLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"8830:7:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8776:61:28","trueExpression":{"id":7041,"name":"tickHi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"8821:6:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8746:91:28","trueExpression":{"id":7035,"name":"tickLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"8766:7:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8739:98:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7046,"nodeType":"ExpressionStatement","src":"8739:98:28"}]},"documentation":{"id":6910,"nodeType":"StructuredDocumentation","src":"4003:412:28","text":"@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"},"id":7048,"implemented":true,"kind":"function","modifiers":[],"name":"getTickAtSqrtRatio","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6912,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":7048,"src":"4449:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6911,"name":"uint160","nodeType":"ElementaryTypeName","src":"4449:7:28","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"4448:22:28"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":7048,"src":"4494:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6914,"name":"int24","nodeType":"ElementaryTypeName","src":"4494:5:28","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"4493:12:28"},"scope":7049,"src":"4421:4424:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7050,"src":"319:8529:28"}],"src":"46:8804:28"},"id":28},"contracts/libraries/TransferHelper.sol":{"ast":{"absolutePath":"contracts/libraries/TransferHelper.sol","exportedSymbols":{"IERC20Minimal":[2928],"TransferHelper":[7100]},"id":7101,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":7051,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"46:24:29"},{"absolutePath":"contracts/interfaces/IERC20Minimal.sol","file":"../interfaces/IERC20Minimal.sol","id":7052,"nodeType":"ImportDirective","scope":7101,"sourceUnit":2929,"src":"74:41:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":7053,"nodeType":"StructuredDocumentation","src":"119:141:29","text":"@title TransferHelper\n @notice Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false"},"fullyImplemented":true,"id":7100,"linearizedBaseContracts":[7100],"name":"TransferHelper","nodeType":"ContractDefinition","nodes":[{"body":{"id":7098,"nodeType":"Block","src":"722:240:29","statements":[{"assignments":[7064,7066],"declarations":[{"constant":false,"id":7064,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":7098,"src":"734:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7063,"name":"bool","nodeType":"ElementaryTypeName","src":"734:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7066,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":7098,"src":"748:17:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7065,"name":"bytes","nodeType":"ElementaryTypeName","src":"748:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7078,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":7071,"name":"IERC20Minimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"817:13:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Minimal_$2928_$","typeString":"type(contract IERC20Minimal)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"817:22:29","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20Minimal.transfer(address,uint256) returns (bool)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"817:31:29","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":7074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"850:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"854:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7069,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"794:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"794:22:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"794:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7067,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"769:5:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"769:10:29","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"769:102:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"733:138:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7080,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"890:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7081,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"902:4:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"902:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"917:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"902:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":7087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"933:4:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":7089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"940:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":7088,"name":"bool","nodeType":"ElementaryTypeName","src":"940:4:29","typeDescriptions":{}}}],"id":7090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"939:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":7085,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"922:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"922:10:29","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"902:44:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":7093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"901:46:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"890:57:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5446","id":7095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:4:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0","typeString":"literal_string \"TF\""},"value":"TF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cebb2b2e317200ffcf39e4291b6400d95f06e73adfd258bd495d227b7d846ff0","typeString":"literal_string \"TF\""}],"id":7079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"882:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"882:72:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7097,"nodeType":"ExpressionStatement","src":"882:72:29"}]},"documentation":{"id":7054,"nodeType":"StructuredDocumentation","src":"290:319:29","text":"@notice Transfers tokens from msg.sender to a recipient\n @dev Calls transfer on token contract, errors with TF if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"},"id":7099,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":7099,"src":"647:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7055,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7058,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":7099,"src":"671:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7057,"name":"address","nodeType":"ElementaryTypeName","src":"671:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7060,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":7099,"src":"692:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7059,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:76:29"},"returnParameters":{"id":7062,"nodeType":"ParameterList","parameters":[],"src":"722:0:29"},"scope":7100,"src":"615:347:29","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7101,"src":"260:705:29"}],"src":"46:921:29"},"id":29},"contracts/libraries/UnsafeMath.sol":{"ast":{"absolutePath":"contracts/libraries/UnsafeMath.sol","exportedSymbols":{"UnsafeMath":[7116]},"id":7117,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":7102,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"46:24:30"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":7103,"nodeType":"StructuredDocumentation","src":"74:175:30","text":"@title Math functions that do not check inputs or outputs\n @notice Contains methods that perform common math functions but do not do any overflow or underflow checks"},"fullyImplemented":true,"id":7116,"linearizedBaseContracts":[7116],"name":"UnsafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":7114,"nodeType":"Block","src":"582:90:30","statements":[{"AST":{"nodeType":"YulBlock","src":"602:63:30","statements":[{"nodeType":"YulAssignment","src":"617:37:30","value":{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"630:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"633:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"626:3:30"},"nodeType":"YulFunctionCall","src":"626:9:30"},{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"644:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"647:1:30"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"640:3:30"},"nodeType":"YulFunctionCall","src":"640:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"651:1:30","type":"","value":"0"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"637:2:30"},"nodeType":"YulFunctionCall","src":"637:16:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"622:3:30"},"nodeType":"YulFunctionCall","src":"622:32:30"},"variableNames":[{"name":"z","nodeType":"YulIdentifier","src":"617:1:30"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":7106,"isOffset":false,"isSlot":false,"src":"630:1:30","valueSize":1},{"declaration":7106,"isOffset":false,"isSlot":false,"src":"644:1:30","valueSize":1},{"declaration":7108,"isOffset":false,"isSlot":false,"src":"633:1:30","valueSize":1},{"declaration":7108,"isOffset":false,"isSlot":false,"src":"647:1:30","valueSize":1},{"declaration":7111,"isOffset":false,"isSlot":false,"src":"617:1:30","valueSize":1}],"id":7113,"nodeType":"InlineAssembly","src":"593:72:30"}]},"documentation":{"id":7104,"nodeType":"StructuredDocumentation","src":"275:222:30","text":"@notice Returns ceil(x / y)\n @dev division by 0 has unspecified behavior, and must be checked externally\n @param x The dividend\n @param y The divisor\n @return z The quotient, ceil(x / y)"},"id":7115,"implemented":true,"kind":"function","modifiers":[],"name":"divRoundingUp","nodeType":"FunctionDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7106,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":7115,"src":"526:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7108,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":7115,"src":"537:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7107,"name":"uint256","nodeType":"ElementaryTypeName","src":"537:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:22:30"},"returnParameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"z","nodeType":"VariableDeclaration","scope":7115,"src":"571:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"571:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"570:11:30"},"scope":7116,"src":"503:169:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7117,"src":"249:426:30"}],"src":"46:631:30"},"id":30}},"contracts":{"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol":{"IBubblySwapLmPool":{"abi":[{"inputs":[{"internalType":"uint32","name":"currTimestamp","type":"uint32"}],"name":"accumulateReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"bool","name":"zeroForOne","type":"bool"}],"name":"crossLmTick","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"accumulateReward(uint32)":"214a6fe2","crossLmTick(int24,bool)":"a4984633"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"currTimestamp\",\"type\":\"uint32\"}],\"name\":\"accumulateReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"}],\"name\":\"crossLmTick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol\":\"IBubblySwapLmPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol\":{\"keccak256\":\"0x76ab49314fc5c8efadfcbcdce2b71acb0a1effbdf5e6fdb93d211655d82176b1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dcdb849ebe2a8e13109926de517835d8721e1d91e9e9007dacc7e65ede679192\",\"dweb:/ipfs/QmSAwjrxiRQtaHfnNfQWwA2H8wRvneZsZfqCUe5zxHKTRx\"]}},\"version\":1}"}},"contracts/BubblySwapPool.sol":{"BubblySwapPool":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"feeProtocol0Old","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol1Old","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol0New","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol1New","type":"uint32"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"}],"name":"SetLmPoolEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"protocolFeesToken0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"protocolFeesToken1","type":"uint128"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lmPool","outputs":[{"internalType":"contract IBubblySwapLmPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"feeProtocol0","type":"uint32"},{"internalType":"uint32","name":"feeProtocol1","type":"uint32"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lmPool","type":"address"}],"name":"setLmPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint32","name":"feeProtocol","type":"uint32"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"6101406040523480156200001257600080fd5b506000336001600160a01b031663890357306040518163ffffffff1660e01b815260040160a06040518083038186803b1580156200004f57600080fd5b505afa15801562000064573d6000803e3d6000fd5b505050506040513d60a08110156200007b57600080fd5b50805160208083015160408401516060808601516080968701516001600160e81b031960e892831b1660e0526001600160601b031993831b841660c05293821b831660a05294901b16909352600283810b900b90911b61010052909150620000ee90829062002eee62000106821b17901c565b60801b6001600160801b031916610120525062000174565b60008082600281900b620d89e719816200011c57fe5b05029050600083600281900b620d89e8816200013457fe5b0502905060008460020b83830360020b816200014c57fe5b0560010190508062ffffff166001600160801b038016816200016a57fe5b0495945050505050565b60805160601c60a05160601c60c05160601c60e05160e81c6101005160e81c6101205160801c6158be6200025c600039806121035280614de65280614e1d525080610c415280612b795280614e515280614e83525080610d305280611ad75280611b0e5280612bc15280612d905280612dd25280612e195280612e605250806112a45280611b915280611ff852806123885280612b9d528061412c5250806108a452806113d25280611b605280611f9252806123025280613fe352508061218652806121af5280612865528061288e5280612a335280612a605280612a8952506158be6000f3fe608060405234801561001057600080fd5b50600436106101545760003560e01c80630dfe168114610159578063128acb081461017d5780631a6865021461022a5780631ad8b03b1461024e578063252c09d71461028557806332148f67146102dc5780633850c7bd146102ff5780633c8a7d8d1461035b57806346141319146103fb578063490e6cbc146104155780634f1eb3d81461049f578063514ea4bf146104f05780635339c29614610549578063540d49181461056957806370cf754a1461057157806385b6672914610579578063883bdbfd146105b6578063a34123a7146106bd578063a38807f2146106f7578063b0d0d21114610752578063c45a01551461077d578063cc7e7fa214610785578063d0c93a7c146107ab578063d21220a7146107ca578063ddca3f43146107d2578063f3058399146107f2578063f30dba93146107fa578063f637731d1461087c575b600080fd5b6101616108a2565b604080516001600160a01b039092168252519081900360200190f35b610211600480360360a081101561019357600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b8111156101d357600080fd5b8201836020820111156101e557600080fd5b803590602001918460018302840111600160201b8311171561020657600080fd5b5090925090506108c6565b6040805192835260208301919091528051918290030190f35b6102326115c3565b604080516001600160801b039092168252519081900360200190f35b6102566115d2565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6102a26004803603602081101561029b57600080fd5b50356115ec565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6102fd600480360360208110156102f257600080fd5b503561ffff16611631565b005b610307611723565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015263ffffffff90911660a0840152151560c0830152519081900360e00190f35b610211600480360360a081101561037157600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103bd57600080fd5b8201836020820111156103cf57600080fd5b803590602001918460018302840111600160201b831117156103f057600080fd5b509092509050611778565b610403611a36565b60408051918252519081900360200190f35b6102fd6004803603608081101561042b57600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561046157600080fd5b82018360208201111561047357600080fd5b803590602001918460018302840111600160201b8311171561049457600080fd5b509092509050611a3c565b610256600480360360a08110156104b557600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611e83565b61050d6004803603602081101561050657600080fd5b50356120a1565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b6104036004803603602081101561055f57600080fd5b503560010b6120de565b6101616120f0565b610232612101565b6102566004803603606081101561058f57600080fd5b506001600160a01b03813516906001600160801b0360208201358116916040013516612125565b610624600480360360208110156105cc57600080fd5b810190602081018135600160201b8111156105e657600080fd5b8201836020820111156105f857600080fd5b803590602001918460208302840111600160201b8311171561061957600080fd5b509092509050612420565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610668578181015183820152602001610650565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106a757818101518382015260200161068f565b5050505090500194505050505060405180910390f35b610211600480360360608110156106d357600080fd5b508035600290810b91602081013590910b90604001356001600160801b03166124a5565b6107216004803603604081101561070d57600080fd5b508035600290810b9160200135900b612621565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b6102fd6004803603604081101561076857600080fd5b5063ffffffff81358116916020013516612809565b610161612a31565b6102fd6004803603602081101561079b57600080fd5b50356001600160a01b0316612a55565b6107b3612b77565b6040805160029290920b8252519081900360200190f35b610161612b9b565b6107da612bbf565b6040805162ffffff9092168252519081900360200190f35b610403612be3565b61081a6004803603602081101561081057600080fd5b503560020b612be9565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6102fd6004803603602081101561089257600080fd5b50356001600160a01b0316612c55565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008085610900576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b9004909116608082015260015463ffffffff811660a083015260ff600160201b90910416151560c082018190526109b8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b87610a035780600001516001600160a01b0316866001600160a01b03161180156109fe575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610a35565b80600001516001600160a01b0316866001600160a01b0316108015610a3557506401000276a36001600160a01b038716115b610a6c576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6001805460ff60201b191690556040805160c08101909152600090808a610aa15760108460a0015163ffffffff16901c610aab565b60a084015161ffff165b63ffffffff1681526005546001600160801b03166020820152604001610acf612f5a565b63ffffffff1681526000602082018190526040820181905260609091015262010008549091506001600160a01b031615610b7557620100085460408083015181516310a537f160e11b815263ffffffff909116600482015290516001600160a01b039092169163214a6fe29160248082019260009290919082900301818387803b158015610b5c57600080fd5b505af1158015610b70573d6000803e3d6000fd5b505050505b6000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610bc357600354610bc7565b6002545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610c165750886001600160a01b031681604001516001600160a01b031614155b1561108557610c2361584e565b60408201516001600160a01b031681526060820151610c66906007907f00000000000000000000000000000000000000000000000000000000000000008f612f5e565b15156040830152600290810b810b60208301819052620d89e719910b1215610c9757620d89e7196020820152610cb6565b6020810151620d89e860029190910b1315610cb657620d89e860208201525b610cc381602001516130a0565b6001600160a01b031660608201526040820151610d54908d610cfd578b6001600160a01b031683606001516001600160a01b031611610d17565b8b6001600160a01b031683606001516001600160a01b0316105b610d25578260600151610d27565b8b5b60c085015185517f00000000000000000000000000000000000000000000000000000000000000006133c7565b60c085015260a084015260808301526001600160a01b031660408301528215610db657610d8a8160c001518260800151016135b9565b825103825260a0810151610dac90610da1906135b9565b6020840151906135cf565b6020830152610df1565b610dc38160a001516135b9565b825101825260c08101516080820151610deb91610de091016135b9565b6020840151906135eb565b60208301525b835163ffffffff1615610e51576000612710610e24866000015163ffffffff168460c0015161360190919063ffffffff16565b81610e2b57fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610e9057610e848160c00151600160801b8460c001516001600160801b0316613625565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b031614156110445780604001511561101b578360a00151610f1a57610ef8846040015160008760200151886040015188602001518a6060015160096136d5909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b62010008546001600160a01b031615610fa557620100085460208201516040805163a498463360e01b815260029290920b60048301528e15156024830152516001600160a01b039092169163a49846339160448082019260009290919082900301818387803b158015610f8c57600080fd5b505af1158015610fa0573d6000803e3d6000fd5b505050505b6000610ff182602001518e610fbc57600254610fc2565b84608001515b8f610fd1578560800151610fd5565b6003545b608089015160608a015160408b01516006959493929190613867565b90508c15610ffd576000035b61100b8360c0015182613921565b6001600160801b031660c0840152505b8b61102a578060200151611033565b60018160200151035b600290810b900b606083015261107f565b80600001516001600160a01b031682604001516001600160a01b03161461107f5761107282604001516139d7565b600290810b900b60608301525b50610bf0565b836020015160020b816060015160020b14611153576000806110d386604001518660400151886020015188602001518a606001518b608001516009613cc2909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b03909116179055506111789050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146111be5760c0810151600580546001600160801b0319166001600160801b039092169190911790555b6000808c1561121857608083015160025560a08301516001600160801b03161561120c5760a0830151600480546001600160801b031981166001600160801b03918216909301169190911790555b8260a001519150611265565b608083015160035560a08301516001600160801b03161561125e5760a0830151600480546001600160801b03808216600160801b92839004821690940116029190911790555b5060a08201515b8315158d15151461127e57602083015183518d0361128b565b82600001518c0383602001515b90985096508c156113c45760008712156112cd576112cd7f00000000000000000000000000000000000000000000000000000000000000008f89600003613e47565b60006112d7613f95565b9050336001600160a01b031663ce41b35a8a8a8e8e6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561135b57600080fd5b505af115801561136f573d6000803e3d6000fd5b5050505061137b613f95565b611385828b6140ce565b11156113be576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b506114ee565b60008812156113fb576113fb7f00000000000000000000000000000000000000000000000000000000000000008f8a600003613e47565b60006114056140de565b9050336001600160a01b031663ce41b35a8a8a8e8e6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561148957600080fd5b505af115801561149d573d6000803e3d6000fd5b505050506114a96140de565b6114b3828a6140ce565b11156114ec576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b8d6001600160a01b0316336001600160a01b03167f19b47279256b2a23a1665c810c8d55a1758940ee09377d4f8d26497a3577dc838a8a87604001518860c001518960600151898960405180888152602001878152602001866001600160a01b03168152602001856001600160801b031681526020018460020b8152602001836001600160801b03168152602001826001600160801b0316815260200197505050505050505060405180910390a350506001805460ff60201b1916600160201b17905550939a92995091975050505050505050565b6005546001600160801b031681565b6004546001600160801b0380821691600160801b90041682565b60098161ffff81106115fd57600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600154600160201b900460ff16611675576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b1916905560008054600160d81b900461ffff169061169e60098385614176565b6000805461ffff808416600160d81b810261ffff60d81b199093169290921790925591925083161461170b576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506001805460ff60201b1916600160201b17905550565b6000546001546001600160a01b03821691600160a01b810460020b9161ffff600160b81b8304811692600160c81b8104821692600160d81b9091049091169063ffffffff81169060ff600160201b9091041687565b6001546000908190600160201b900460ff166117c1576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b191690556001600160801b0385166117e157600080fd5b60008061182f60405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b81526020016118258a6001600160801b0316614219565b600f0b905261422a565b925092505081935080925060008060008611156118515761184e613f95565b91505b84156118625761185f6140de565b90505b336001600160a01b031663724ffb8187878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156118e457600080fd5b505af11580156118f8573d6000803e3d6000fd5b50505050600086111561194f5761190d613f95565b61191783886140ce565b111561194f576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b841561199f5761195d6140de565b61196782876140ce565b111561199f576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506001805460ff60201b1916600160201b17905550919890975095505050505050565b60035481565b600154600160201b900460ff16611a80576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b191690556005546001600160801b031680611acf576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b6000611b04867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f4240614460565b90506000611b3b867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f4240614460565b90506000611b47613f95565b90506000611b536140de565b90508815611b8657611b867f00000000000000000000000000000000000000000000000000000000000000008b8b613e47565b8715611bb757611bb77f00000000000000000000000000000000000000000000000000000000000000008b8a613e47565b336001600160a01b0316636a9b97f085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611c3957600080fd5b505af1158015611c4d573d6000803e3d6000fd5b505050506000611c5b613f95565b90506000611c676140de565b905081611c7485886140ce565b1115611cac576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611cb784876140ce565b1115611cef576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611d785760015461ffff1660008115611d1c5761271063ffffffff8316850204611d1f565b60005b90506001600160801b03811615611d5257600480546001600160801b038082168401166001600160801b03199091161790555b611d6c818503600160801b8d6001600160801b0316613625565b60028054909101905550505b8015611dfd5760015460101c61ffff1660008115611da25761271063ffffffff8316840204611da5565b60005b90506001600160801b03811615611dd757600480546001600160801b03600160801b8083048216850182160291161790555b611df1818403600160801b8d6001600160801b0316613625565b60038054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506001805460ff60201b1916600160201b179055505050505050505050505050565b6001546000908190600160201b900460ff16611ecc576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b191690556000611ee8600833898961449a565b60038101549091506001600160801b0390811690861611611f095784611f18565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611f405783611f56565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611fbb576003810180546001600160801b031981166001600160801b03918216869003821617909155611fbb907f0000000000000000000000000000000000000000000000000000000000000000908a908616613e47565b6001600160801b03821615612021576003810180546001600160801b03600160801b808304821686900382160291811691909117909155612021907f0000000000000000000000000000000000000000000000000000000000000000908a908516613e47565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506001805460ff60201b1916600160201b17905590969095509350505050565b60086020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60076020526000908152604090205481565b62010008546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546000908190600160201b900460ff1661216e576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b19169055336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061223e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561220657600080fd5b505afa15801561221a573d6000803e3d6000fd5b505050506040513d602081101561223057600080fd5b50516001600160a01b031633145b61224757600080fd5b6004546001600160801b03908116908516116122635783612270565b6004546001600160801b03165b6004549092506001600160801b03600160801b90910481169084161161229657826122aa565b600454600160801b90046001600160801b03165b90506001600160801b0382161561232b576004546001600160801b03838116911614156122d957600019909101905b600480546001600160801b031981166001600160801b0391821685900382161790915561232b907f00000000000000000000000000000000000000000000000000000000000000009087908516613e47565b6001600160801b038116156123b1576004546001600160801b03828116600160801b90920416141561235c57600019015b600480546001600160801b03600160801b8083048216859003821602918116919091179091556123b1907f00000000000000000000000000000000000000000000000000000000000000009087908416613e47565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36001805460ff60201b1916600160201b1790559094909350915050565b60608061249a61242e612f5a565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600554600996959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b9004166144f9565b915091509250929050565b6001546000908190600160201b900460ff166124ee576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b1916905560408051608081018252338152600287810b602083015286900b918101919091526000908190819061254a906060810161253d6001600160801b038a16614219565b600003600f0b905261422a565b925092509250816000039450806000039350600085118061256b5750600084115b156125aa576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506001805460ff60201b1916600160201b179055509094909350915050565b60008060006126308585614651565b600285810b810b600090815260066020819052604080832088850b90940b8352822060038401549182900b93600160381b83046001600160a01b0316928492600160d81b820463ffffffff16928492909190600160f81b900460ff168061269657600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff16806126d757600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b909204909316608083015260015463ffffffff811660a084015260ff600160201b90910416151560c08301529093508e820b910b1215905061277f57509390940396509003935090039050612802565b8a60020b816020015160020b12156127f357600061279b612f5a565b60208301516040840151600554606086015193945060009384936127d1936009938893879392916001600160801b0316906136d5565b9a9003989098039b505094909603929092039650909103039250612802915050565b50949093039650039350900390505b9250925092565b600154600160201b900460ff1661284d576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b19169055336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061291d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e557600080fd5b505afa1580156128f9573d6000803e3d6000fd5b505050506040513d602081101561290f57600080fd5b50516001600160a01b031633145b61292657600080fd5b63ffffffff8216158061295457506103e88263ffffffff16101580156129545750610fa08263ffffffff1611155b8015612989575063ffffffff8116158061298957506103e88163ffffffff16101580156129895750610fa08163ffffffff1611155b61299257600080fd5b6001805465ffffffff0000601084901b16840163ffffffff90811663ffffffff19831617909255167fb3159fed3ddfba67bae294599eafe2d0ec98c08bb38e0e5fb87d33154b6e05aa62010000826040805163ffffffff939092068316825261ffff601086901c16602083015286831682820152918516606082015290519081900360800190a150506001805460ff60201b1916600160201b17905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480612b1857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ae057600080fd5b505afa158015612af4573d6000803e3d6000fd5b505050506040513d6020811015612b0a57600080fd5b50516001600160a01b031633145b612b2157600080fd5b6201000880546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f29983690a85a11696ce8a357993744f8d5a74fde14653e517cc2f8608a7235e99181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b60066020819052600091825260409091208054600182015460028301546003909301546001600160801b03831694600160801b909304600f0b93919281900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b031615612c98576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b6000612ca3826139d7565b9050600080612cbb612cb3612f5a565b60099061471a565b6040805160e0810182526001600160a01b038816808252600288810b60208401819052600094840185905261ffff8781166060860181905290871660808601819052630c800c8060a08701819052600160c090970187905287546001600160a01b03191690951762ffffff60a01b1916600160a01b62ffffff9490950b8416949094029390931763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b909202919091179093558154600160201b63ffffffff1990911690911760ff60201b191617905591935091507f00000000000000000000000000000000000000000000000000000000000000001660641415612dd0576001805463ffffffff1916630ce40ce4179055612ea1565b7f000000000000000000000000000000000000000000000000000000000000000062ffffff166101f41415612e17576001805463ffffffff1916630d480d48179055612ea1565b7f000000000000000000000000000000000000000000000000000000000000000062ffffff166109c41415612e5e576001805463ffffffff1916630c800c80179055612ea1565b7f000000000000000000000000000000000000000000000000000000000000000062ffffff166127101415612ea1576001805463ffffffff1916630c800c801790555b604080516001600160a01b0386168152600285900b602082015281517f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95929181900390910190a150505050565b60008082600281900b620d89e71981612f0357fe5b05029050600083600281900b620d89e881612f1a57fe5b0502905060008460020b83830360020b81612f3157fe5b0560010190508062ffffff166001600160801b03801681612f4e57fe5b0493505050505b919050565b4290565b60008060008460020b8660020b81612f7257fe5b05905060008660020b128015612f9957508460020b8660020b81612f9257fe5b0760020b15155b15612fa357600019015b831561301857600080612fb583614766565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612ffa57888360ff1686030261300d565b8861300482614778565b840360ff168603025b965050505050613096565b60008061302783600101614766565b91509150600060018260ff166001901b031990506000818b60008660010b60010b815260200190815260200160002054169050806000141595508561307957888360ff0360ff1686600101010261308f565b888361308483614812565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b126130b7578260020b6130bf565b8260020b6000035b9050620d89e88111156130fd576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b60006001821661311157600160801b613123565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b03169050600282161561314d576ffff97272373d413259a46990580e213a0260801c5b600482161561316c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561318b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156131aa576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156131c9576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156131e8576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613207576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613227576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613247576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613267576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613287576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156132a7576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156132c7576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156132e7576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613307576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613328576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613348576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613367576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613384576b048a170391f7dc42444e8fa20260801c5b60008460020b131561339f57806000198161339b57fe5b0490505b600160201b8106156133b25760016133b5565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061344c5760006134008989620f42400362ffffff16620f4240613625565b905082613419576134148c8c8c60016148fb565b613426565b6134268b8d8c6001614976565b9550858110613437578a9650613446565b6134438c8b8386614a21565b96505b50613496565b816134635761345e8b8b8b6000614976565b613470565b6134708a8c8b60006148fb565b935083886000031061348457899550613496565b6134938b8a8a60000385614a6d565b95505b6001600160a01b038a81169087161482156134f9578080156134b55750815b6134cb576134c6878d8c6001614976565b6134cd565b855b95508080156134da575081155b6134f0576134eb878d8c60006148fb565b6134f2565b845b9450613543565b8080156135035750815b613519576135148c888c60016148fb565b61351b565b855b9550808015613528575081155b61353e576135398c888c6000614976565b613540565b845b94505b8115801561355357508860000385115b1561355f578860000394505b81801561357e57508a6001600160a01b0316876001600160a01b031614155b1561358d5785890393506135aa565b6135a7868962ffffff168a620f42400362ffffff16614460565b93505b50505095509550955095915050565b6000600160ff1b82106135cb57600080fd5b5090565b808203828113156000831215146135e557600080fd5b92915050565b818101828112156000831215146135e557600080fd5b600082158061361c5750508181028183828161361957fe5b04145b6135e557600080fd5b600080806000198587098686029250828110908390030390508061365b576000841161365057600080fd5b5082900490506136ce565b80841161366757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff871661377b576000898661ffff1661ffff81106136f657fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a161461376757613764818a8988614ab9565b90505b80602001518160400151925092505061385b565b8688036000806137908c8c858c8c8c8c614b5c565b91509150816000015163ffffffff168363ffffffff1614156137c257816020015182604001519450945050505061385b565b805163ffffffff848116911614156137ea57806020015181604001519450945050505061385b565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b8161381857fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b0316028161384a57fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561398657826001600160801b03168260000384039150816001600160801b031610613981576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b6135e5565b826001600160801b03168284019150816001600160801b031610156135e5576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b03831610801590613a13575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613a48576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b600160201b600160c01b03602083901b166001600160801b03811160071b81811c6001600160401b03811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110613ada57607f810383901c9150613ae4565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c6001603f1b161760c19b909b1c6001603e1b169a909a1760c29990991c6001603d1b169890981760c39790971c6001603c1b169690961760c49590951c6001603b1b169490941760c59390931c6001603a1b169290921760c69190911c600160391b161760c79190911c600160381b161760c89190911c600160371b161760c99190911c600160361b161760ca9190911c600160351b161760cb9190911c600160341b161760cc9190911c600160331b161760cd9190911c600160321b1617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613cb357886001600160a01b0316613c97826130a0565b6001600160a01b03161115613cac5781613cae565b805b613cb5565b815b9998505050505050505050565b6000806000898961ffff1661ffff8110613cd857fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff161515606083015290925089161415613d47578885925092505061385b565b8461ffff168461ffff16118015613d6857506001850361ffff168961ffff16145b15613d7557839150613d79565b8491505b8161ffff168960010161ffff1681613d8d57fe5b069250613d9c81898989614ab9565b8a8461ffff1661ffff8110613dad57fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b02600160581b600160f81b031960069390930b66ffffffffffffff16600160201b0266ffffffffffffff60201b1963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613ec35780518252601f199092019160209182019101613ea4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613f25576040519150601f19603f3d011682016040523d82523d6000602084013e613f2a565b606091505b5091509150818015613f58575080511580613f585750808060200190516020811015613f5557600080fd5b50515b613f8e576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b6020831061402e5780518252601f19909201916020918201910161400f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461408e576040519150601f19603f3d011682016040523d82523d6000602084013e614093565b606091505b50915091508180156140a757506020815110155b6140b057600080fd5b8080602001905160208110156140c557600080fd5b50519250505090565b808201828110156135e557600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083836020831061402e5780518252601f19909201916020918201910161400f565b6000808361ffff16116141b4576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff16116141ca5750816136ce565b825b8261ffff168161ffff161015614210576001858261ffff1661ffff81106141ef57fe5b01805463ffffffff191663ffffffff929092169190911790556001016141cc565b50909392505050565b80600f81900b8114612f5557600080fd5b600080600061424184602001518560400151614651565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b90940416608085015260015463ffffffff811660a086015260ff600160201b90910416151560c0850152885190890151948901519289015193946142e39491939092909190614d56565b93508460600151600f0b60001461445857846020015160020b816020015160020b12156143385761433161431a86602001516130a0565b61432787604001516130a0565b8760600151614f0b565b9250614458565b846040015160020b816020015160020b121561442e5760055460408201516001600160801b039091169061438a9061436e612f5a565b6020850151606086015160808701516009949392918791613cc2565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b9390921692909202179055815160408701516143da91906143d0906130a0565b8860600151614f0b565b93506143f86143ec87602001516130a0565b83516060890151614f4f565b9250614408818760600151613921565b600580546001600160801b0319166001600160801b039290921691909117905550614458565b61445561443e86602001516130a0565b61444b87604001516130a0565b8760600151614f4f565b91505b509193909250565b600061446d848484613625565b90506000828061447957fe5b84860911156136ce57600019811061449057600080fd5b6001019392505050565b6040805160609490941b6001600160601b031916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff1611614539576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b86516001600160401b038111801561455057600080fd5b5060405190808252806020026020018201604052801561457a578160200160208202803683370190505b50915086516001600160401b038111801561459457600080fd5b506040519080825280602002602001820160405280156145be578160200160208202803683370190505b50905060005b8751811015614644576145ef8a8a8a84815181106145de57fe5b60200260200101518a8a8a8a6136d5565b8483815181106145fb57fe5b6020026020010184848151811061460e57fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b815250505080806001019150506145c4565b5097509795505050505050565b8060020b8260020b12614691576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b12156146d4576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b1315614716576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b600080821161478657600080fd5b600160801b821061479957608091821c91015b600160401b82106147ac57604091821c91015b600160201b82106147bf57602091821c91015b6201000082106147d157601091821c91015b61010082106147e257600891821c91015b601082106147f257600491821c91015b6004821061480257600291821c91015b60028210612f5557600101919050565b600080821161482057600080fd5b5060ff6001600160801b0382161561483b57607f1901614843565b608082901c91505b6001600160401b0382161561485b57603f1901614863565b604082901c91505b63ffffffff82161561487857601f1901614880565b602082901c91505b61ffff82161561489357600f190161489b565b601082901c91505b60ff8216156148ad57600719016148b5565b600882901c91505b600f8216156148c757600319016148cf565b600482901c91505b60038216156148e157600119016148e9565b600282901c91505b6001821615612f555760001901919050565b6000836001600160a01b0316856001600160a01b0316111561491b579293925b8161494857614943836001600160801b03168686036001600160a01b0316600160601b613625565b61496b565b61496b836001600160801b03168686036001600160a01b0316600160601b614460565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115614996579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166149c057600080fd5b836149f057866001600160a01b03166149e38383896001600160a01b0316613625565b816149ea57fe5b04614a16565b614a16614a078383896001600160a01b0316614460565b886001600160a01b0316614f7e565b979650505050505050565b600080856001600160a01b031611614a3857600080fd5b6000846001600160801b031611614a4e57600080fd5b81614a60576149438585856001614f89565b61496b858585600161506a565b600080856001600160a01b031611614a8457600080fd5b6000846001600160801b031611614a9a57600080fd5b81614aac57614943858585600061506a565b61496b8585856000614f89565b614ac161588a565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b031611614b15576001614b17565b845b6001600160801b031663ffffffff60801b608085901b1681614b3557fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b614b6461588a565b614b6c61588a565b888561ffff1661ffff8110614b7d57fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff16151560608201529250614be19089908961514d565b15614c19578663ffffffff16826000015163ffffffff161415614c035761385b565b81614c1083898988614ab9565b9150915061385b565b888361ffff168660010161ffff1681614c2e57fe5b0661ffff1661ffff8110614c3e57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909250614cf357604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b614d028883600001518961514d565b614d39576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b614d46898989888761520e565b9150915097509795505050505050565b6000614d65600887878761449a565b60025460035491925090600080600f87900b15614eab576000614d86612f5a565b6000805460055492935090918291614dd09160099186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b9004166136d5565b9092509050614e0a60068d8b8d8b8b87898b60007f00000000000000000000000000000000000000000000000000000000000000006153ac565b9450614e4160068c8b8d8b8b87898b60017f00000000000000000000000000000000000000000000000000000000000000006153ac565b93508415614e7557614e7560078d7f0000000000000000000000000000000000000000000000000000000000000000615565565b8315614ea757614ea760078c7f0000000000000000000000000000000000000000000000000000000000000000615565565b5050505b600080614ebd60068c8c8b8a8a6155cb565b9092509050614ece878a8484615677565b600089600f0b1215614efc578315614eeb57614eeb60068c61580c565b8215614efc57614efc60068b61580c565b50505050505095945050505050565b60008082600f0b12614f3157614f2c614f278585856001614976565b6135b9565b61496e565b614f44614f278585856000036000614976565b600003949350505050565b60008082600f0b12614f6b57614f2c614f2785858560016148fb565b614f44614f2785858560000360006148fb565b808204910615150190565b60008115614ffc5760006001600160a01b03841115614fbf57614fba84600160601b876001600160801b0316613625565b614fd7565b6001600160801b038516606085901b81614fd557fe5b045b9050614ff4614fef6001600160a01b038816836140ce565b615838565b91505061496e565b60006001600160a01b0384111561502a5761502584600160601b876001600160801b0316614460565b615041565b615041606085901b6001600160801b038716614f7e565b905080866001600160a01b03161161505857600080fd5b6001600160a01b03861603905061496e565b60008261507857508361496e565b600160601b600160e01b03606085901b168215615106576001600160a01b038616848102908582816150a657fe5b0414156150d7578181018281106150d5576150cb83896001600160a01b031683614460565b935050505061496e565b505b6150fd826150f8878a6001600160a01b031686816150f157fe5b04906140ce565b614f7e565b9250505061496e565b6001600160a01b0386168481029085828161511d57fe5b0414801561512a57508082115b61513357600080fd5b8082036150cb614fef846001600160a01b038b1684614460565b60008363ffffffff168363ffffffff161115801561517757508363ffffffff168263ffffffff1611155b15615193578163ffffffff168363ffffffff16111590506136ce565b60008463ffffffff168463ffffffff16116151ba578363ffffffff16600160201b016151c2565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff16116151f2578363ffffffff16600160201b016151fa565b8363ffffffff165b64ffffffffff169091111595945050505050565b61521661588a565b61521e61588a565b60008361ffff168560010161ffff168161523457fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff8716828161526157fe5b0661ffff811061526d57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b909104161515606082018190529095506152d75780600101925061524c565b898661ffff1682600101816152e857fe5b0661ffff81106152f457fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b9091041615156060820152855190945060009061535e908b908b61514d565b905080801561537757506153778a8a876000015161514d565b15615382575061539f565b8061539257600182039250615399565b8160010193505b5061524c565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b0316826153d7828d613921565b9050846001600160801b0316816001600160801b03161115615425576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b0382811615908216158114159450156154ca578c60020b8e60020b136154b257600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b0382161783558561551357825461550e9061550990600160801b9004600f90810b810b908f900b6135eb565b614219565b615534565b82546155349061550990600160801b9004600f90810b810b908f900b6135cf565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b8161557457fe5b0760020b1561558257600080fd5b60008061559d8360020b8560020b8161559757fe5b05614766565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b1261561157505060018201546002830154615624565b8360010154880391508360020154870390505b6000808b60020b8b60020b121561564657505060018301546002840154615659565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b6157165781516001600160801b031661570e576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b508051615725565b81516157229086613921565b90505b60006157498360200151860384600001516001600160801b0316600160801b613625565b9050600061576f8460400151860385600001516001600160801b0316600160801b613625565b905086600f0b6000146157965787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b0382161515806157c457506000816001600160801b0316115b15615802576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612f5557600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea164736f6c6343000706000a","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x89035730 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH3 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP7 ADD MLOAD PUSH1 0x80 SWAP7 DUP8 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT PUSH1 0xE8 SWAP3 DUP4 SHL AND PUSH1 0xE0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP4 DUP4 SHL DUP5 AND PUSH1 0xC0 MSTORE SWAP4 DUP3 SHL DUP4 AND PUSH1 0xA0 MSTORE SWAP5 SWAP1 SHL AND SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP1 SWAP2 SHL PUSH2 0x100 MSTORE SWAP1 SWAP2 POP PUSH3 0xEE SWAP1 DUP3 SWAP1 PUSH3 0x2EEE PUSH3 0x106 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x80 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH2 0x120 MSTORE POP PUSH3 0x174 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH3 0xD89E7 NOT DUP2 PUSH3 0x11C JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH3 0xD89E8 DUP2 PUSH3 0x134 JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND DUP4 DUP4 SUB PUSH1 0x2 SIGNEXTEND DUP2 PUSH3 0x14C JUMPI INVALID JUMPDEST SDIV PUSH1 0x1 ADD SWAP1 POP DUP1 PUSH3 0xFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 PUSH3 0x16A JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0xE8 SHR PUSH2 0x100 MLOAD PUSH1 0xE8 SHR PUSH2 0x120 MLOAD PUSH1 0x80 SHR PUSH2 0x58BE PUSH3 0x25C PUSH1 0x0 CODECOPY DUP1 PUSH2 0x2103 MSTORE DUP1 PUSH2 0x4DE6 MSTORE DUP1 PUSH2 0x4E1D MSTORE POP DUP1 PUSH2 0xC41 MSTORE DUP1 PUSH2 0x2B79 MSTORE DUP1 PUSH2 0x4E51 MSTORE DUP1 PUSH2 0x4E83 MSTORE POP DUP1 PUSH2 0xD30 MSTORE DUP1 PUSH2 0x1AD7 MSTORE DUP1 PUSH2 0x1B0E MSTORE DUP1 PUSH2 0x2BC1 MSTORE DUP1 PUSH2 0x2D90 MSTORE DUP1 PUSH2 0x2DD2 MSTORE DUP1 PUSH2 0x2E19 MSTORE DUP1 PUSH2 0x2E60 MSTORE POP DUP1 PUSH2 0x12A4 MSTORE DUP1 PUSH2 0x1B91 MSTORE DUP1 PUSH2 0x1FF8 MSTORE DUP1 PUSH2 0x2388 MSTORE DUP1 PUSH2 0x2B9D MSTORE DUP1 PUSH2 0x412C MSTORE POP DUP1 PUSH2 0x8A4 MSTORE DUP1 PUSH2 0x13D2 MSTORE DUP1 PUSH2 0x1B60 MSTORE DUP1 PUSH2 0x1F92 MSTORE DUP1 PUSH2 0x2302 MSTORE DUP1 PUSH2 0x3FE3 MSTORE POP DUP1 PUSH2 0x2186 MSTORE DUP1 PUSH2 0x21AF MSTORE DUP1 PUSH2 0x2865 MSTORE DUP1 PUSH2 0x288E MSTORE DUP1 PUSH2 0x2A33 MSTORE DUP1 PUSH2 0x2A60 MSTORE DUP1 PUSH2 0x2A89 MSTORE POP PUSH2 0x58BE PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x154 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x128ACB08 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1AD8B03B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x252C09D7 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x32148F67 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x46141319 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x490E6CBC EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x4F1EB3D8 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0x540D4918 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x70CF754A EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0x85B66729 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x883BDBFD EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xA34123A7 EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xA38807F2 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xB0D0D211 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xCC7E7FA2 EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0xF3058399 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xF637731D EQ PUSH2 0x87C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x2 SWAP7 SWAP1 SWAP7 SIGNEXTEND PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0xFFFF SWAP5 DUP6 AND DUP8 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x403 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x60 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x80 ADD CALLDATALOAD AND PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x50D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 SIGNEXTEND PUSH2 0x20DE JUMP JUMPDEST PUSH2 0x161 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x2125 JUMP JUMPDEST PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x668 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x650 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x68F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 ADD CALLDATALOAD SWAP1 SIGNEXTEND PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 SWAP5 SWAP1 SWAP5 SIGNEXTEND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0xFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A55 JUMP JUMPDEST PUSH2 0x7B3 PUSH2 0x2B77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2B9B JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0x2BE3 JUMP JUMPDEST PUSH2 0x81A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0x2BE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP10 AND DUP10 MSTORE PUSH1 0xF SWAP8 SWAP1 SWAP8 SIGNEXTEND PUSH1 0x20 DUP10 ADD MSTORE DUP8 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x100 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C55 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH2 0x900 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP2 DIV DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x9B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH2 0xA03 JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0x9FE JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND LT JUMPDEST PUSH2 0xA35 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP1 ISZERO PUSH2 0xA35 JUMPI POP PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GT JUMPDEST PUSH2 0xA6C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x14D413 PUSH1 0xEA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP1 DUP11 PUSH2 0xAA1 JUMPI PUSH1 0x10 DUP5 PUSH1 0xA0 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH2 0xAAB JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD PUSH2 0xFFFF AND JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH2 0xACF PUSH2 0x2F5A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE PUSH3 0x10008 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB75 JUMPI PUSH3 0x10008 SLOAD PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP2 MLOAD PUSH4 0x10A537F1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x214A6FE2 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP1 DUP10 SGT SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH2 0xBC3 JUMPI PUSH1 0x3 SLOAD PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP SWAP1 POP JUMPDEST DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC16 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1085 JUMPI PUSH2 0xC23 PUSH2 0x584E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC66 SWAP1 PUSH1 0x7 SWAP1 PUSH32 0x0 DUP16 PUSH2 0x2F5E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH3 0xD89E7 NOT SWAP2 SIGNEXTEND SLT ISZERO PUSH2 0xC97 JUMPI PUSH3 0xD89E7 NOT PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH3 0xD89E8 PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND SGT ISZERO PUSH2 0xCB6 JUMPI PUSH3 0xD89E8 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0xCC3 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD54 SWAP1 DUP14 PUSH2 0xCFD JUMPI DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0xD17 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT JUMPDEST PUSH2 0xD25 JUMPI DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xD27 JUMP JUMPDEST DUP12 JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD DUP6 MLOAD PUSH32 0x0 PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE DUP3 ISZERO PUSH2 0xDB6 JUMPI PUSH2 0xD8A DUP2 PUSH1 0xC0 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD ADD PUSH2 0x35B9 JUMP JUMPDEST DUP3 MLOAD SUB DUP3 MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0xDAC SWAP1 PUSH2 0xDA1 SWAP1 PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH2 0x35CF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xDC3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH2 0x35B9 JUMP JUMPDEST DUP3 MLOAD ADD DUP3 MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xDEB SWAP2 PUSH2 0xDE0 SWAP2 ADD PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH2 0x35EB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST DUP4 MLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 PUSH2 0x2710 PUSH2 0xE24 DUP7 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x3601 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0xE2B JUMPI INVALID JUMPDEST PUSH1 0xC0 DUP5 ADD DUP1 MLOAD SWAP3 SWAP1 SWAP2 DIV SWAP2 DUP3 SWAP1 SUB SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP1 MLOAD SWAP1 SWAP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE POP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE84 DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x80 SHL DUP5 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD DUP1 MLOAD SWAP1 SWAP2 ADD SWAP1 MSTORE JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1044 JUMPI DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x101B JUMPI DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0xF1A JUMPI PUSH2 0xEF8 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD PUSH1 0x9 PUSH2 0x36D5 SWAP1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE JUMPDEST PUSH3 0x10008 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xFA5 JUMPI PUSH3 0x10008 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA4984633 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE DUP15 ISZERO ISZERO PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA4984633 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xFF1 DUP3 PUSH1 0x20 ADD MLOAD DUP15 PUSH2 0xFBC JUMPI PUSH1 0x2 SLOAD PUSH2 0xFC2 JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD JUMPDEST DUP16 PUSH2 0xFD1 JUMPI DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x40 DUP12 ADD MLOAD PUSH1 0x6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3867 JUMP JUMPDEST SWAP1 POP DUP13 ISZERO PUSH2 0xFFD JUMPI PUSH1 0x0 SUB JUMPDEST PUSH2 0x100B DUP4 PUSH1 0xC0 ADD MLOAD DUP3 PUSH2 0x3921 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE POP JUMPDEST DUP12 PUSH2 0x102A JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD SUB JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x107F JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x107F JUMPI PUSH2 0x1072 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE JUMPDEST POP PUSH2 0xBF0 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x2 SIGNEXTEND EQ PUSH2 0x1153 JUMPI PUSH1 0x0 DUP1 PUSH2 0x10D3 DUP7 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP12 PUSH1 0x80 ADD MLOAD PUSH1 0x9 PUSH2 0x3CC2 SWAP1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xC8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL PUSH2 0xFFFF SWAP6 DUP7 AND MUL OR PUSH2 0xFFFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL SWAP6 SWAP1 SWAP5 AND SWAP5 SWAP1 SWAP5 MUL SWAP3 SWAP1 SWAP3 OR PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH3 0xFFFFFF PUSH1 0x2 SWAP5 SWAP1 SWAP5 SIGNEXTEND SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x1178 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ PUSH2 0x11BE JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 DUP13 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0x120C JUMPI PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP1 SWAP4 ADD AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xA0 ADD MLOAD SWAP2 POP PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0x125E JUMPI PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND SWAP1 SWAP5 ADD AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD JUMPDEST DUP4 ISZERO ISZERO DUP14 ISZERO ISZERO EQ PUSH2 0x127E JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD DUP14 SUB PUSH2 0x128B JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP13 SUB DUP4 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP1 SWAP9 POP SWAP7 POP DUP13 ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP8 SLT ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CD PUSH32 0x0 DUP16 DUP10 PUSH1 0x0 SUB PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D7 PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCE41B35A DUP11 DUP11 DUP15 DUP15 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x137B PUSH2 0x3F95 JUMP JUMPDEST PUSH2 0x1385 DUP3 DUP12 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x13BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x494941 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x0 DUP9 SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FB PUSH32 0x0 DUP16 DUP11 PUSH1 0x0 SUB PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1405 PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCE41B35A DUP11 DUP11 DUP15 DUP15 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x14A9 PUSH2 0x40DE JUMP JUMPDEST PUSH2 0x14B3 DUP3 DUP11 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x14EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x494941 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x19B47279256B2A23A1665C810C8D55A1758940EE09377D4F8D26497A3577DC83 DUP11 DUP11 DUP8 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP2 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x9 DUP2 PUSH2 0xFFFF DUP2 LT PUSH2 0x15FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1675 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x169E PUSH1 0x9 DUP4 DUP6 PUSH2 0x4176 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP5 AND PUSH1 0x1 PUSH1 0xD8 SHL DUP2 MUL PUSH2 0xFFFF PUSH1 0xD8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE SWAP2 SWAP3 POP DUP4 AND EQ PUSH2 0x170B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xAC49E518F90A358F652E4400164F05A5D8F7E35E7747279BC3A93DBF584E125A SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SIGNEXTEND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xC8 SHL DUP2 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x182F PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1825 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x4219 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 MSTORE PUSH2 0x422A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP DUP2 SWAP4 POP DUP1 SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x184E PUSH2 0x3F95 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 ISZERO PUSH2 0x1862 JUMPI PUSH2 0x185F PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x724FFB81 DUP8 DUP8 DUP12 DUP12 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x194F JUMPI PUSH2 0x190D PUSH2 0x3F95 JUMP JUMPDEST PUSH2 0x1917 DUP4 DUP9 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x194F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4D3 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 ISZERO PUSH2 0x199F JUMPI PUSH2 0x195D PUSH2 0x40DE JUMP JUMPDEST PUSH2 0x1967 DUP3 DUP8 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x199F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4D31 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP10 PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP14 DUP12 DUP12 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP1 PUSH2 0x1ACF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B04 DUP7 PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x4460 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B3B DUP7 PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x4460 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B47 PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B53 PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP DUP9 ISZERO PUSH2 0x1B86 JUMPI PUSH2 0x1B86 PUSH32 0x0 DUP12 DUP12 PUSH2 0x3E47 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB7 PUSH32 0x0 DUP12 DUP11 PUSH2 0x3E47 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A9B97F0 DUP6 DUP6 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x1C5B PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C67 PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x1C74 DUP6 DUP9 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x463 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1CB7 DUP5 DUP8 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x1CEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4631 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP3 SUB DUP4 DUP3 SUB DUP2 ISZERO PUSH2 0x1D78 JUMPI PUSH1 0x1 SLOAD PUSH2 0xFFFF AND PUSH1 0x0 DUP2 ISZERO PUSH2 0x1D1C JUMPI PUSH2 0x2710 PUSH4 0xFFFFFFFF DUP4 AND DUP6 MUL DIV PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 ADD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1D6C DUP2 DUP6 SUB PUSH1 0x1 PUSH1 0x80 SHL DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP JUMPDEST DUP1 ISZERO PUSH2 0x1DFD JUMPI PUSH1 0x1 SLOAD PUSH1 0x10 SHR PUSH2 0xFFFF AND PUSH1 0x0 DUP2 ISZERO PUSH2 0x1DA2 JUMPI PUSH2 0x2710 PUSH4 0xFFFFFFFF DUP4 AND DUP5 MUL DIV PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP3 AND DUP6 ADD DUP3 AND MUL SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1DF1 DUP2 DUP5 SUB PUSH1 0x1 PUSH1 0x80 SHL DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP JUMPDEST DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBDBDB71D7860376BA52B25A5028BEEA23581364A40522F6BCFB86BB1F2DCA633 DUP16 DUP16 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1ECC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1EE8 PUSH1 0x8 CALLER DUP10 DUP10 PUSH2 0x449A JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND GT PUSH2 0x1F09 JUMPI DUP5 PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND GT PUSH2 0x1F40 JUMPI DUP4 PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP7 SWAP1 SUB DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x1FBB SWAP1 PUSH32 0x0 SWAP1 DUP11 SWAP1 DUP7 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x2021 JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP3 AND DUP7 SWAP1 SUB DUP3 AND MUL SWAP2 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x2021 SWAP1 PUSH32 0x0 SWAP1 DUP11 SWAP1 DUP6 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x2 DUP9 DUP2 SIGNEXTEND SWAP3 SWAP1 DUP11 SWAP1 SIGNEXTEND SWAP2 CALLER SWAP2 PUSH32 0x70935338E69775456A85DDEF226C395FB668B63FA0115F5F20610B388E6CA9C0 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG4 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 DUP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x10008 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x216E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x223E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x221A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND GT PUSH2 0x2263 JUMPI DUP4 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP5 AND GT PUSH2 0x2296 JUMPI DUP3 PUSH2 0x22AA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x232B JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x22D9 JUMPI PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP6 SWAP1 SUB DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x232B SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP6 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x23B1 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x235C JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP3 AND DUP6 SWAP1 SUB DUP3 AND MUL SWAP2 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x23B1 SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP5 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 CALLER SWAP3 PUSH32 0x596B573906218D3411850B26A6B437D6C4522FDB43D2D2386263F86D50B8B151 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x249A PUSH2 0x242E PUSH2 0x2F5A JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD PUSH1 0x5 SLOAD PUSH1 0x9 SWAP7 SWAP6 SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH1 0x2 SIGNEXTEND SWAP4 POP PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP4 DIV DUP2 AND SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV AND PUSH2 0x44F9 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x2 DUP8 DUP2 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE DUP7 SWAP1 SIGNEXTEND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x254A SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0x253D PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND PUSH2 0x4219 JUMP JUMPDEST PUSH1 0x0 SUB PUSH1 0xF SIGNEXTEND SWAP1 MSTORE PUSH2 0x422A JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP2 PUSH1 0x0 SUB SWAP5 POP DUP1 PUSH1 0x0 SUB SWAP4 POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0x256B JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x25AA JUMPI PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP10 ADD DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP4 DUP5 SWAP1 DIV DUP4 AND DUP10 ADD SWAP1 SWAP3 AND SWAP1 SWAP3 MUL SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x2 DUP10 DUP2 SIGNEXTEND SWAP3 SWAP1 DUP12 SWAP1 SIGNEXTEND SWAP2 CALLER SWAP2 PUSH32 0xC396CD989A39F4459B5FA1AED6A9A8DCDBC45908ACFD67E028CD568DA98982C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2630 DUP6 DUP6 PUSH2 0x4651 JUMP JUMPDEST PUSH1 0x2 DUP6 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP6 SIGNEXTEND SWAP1 SWAP5 SIGNEXTEND DUP4 MSTORE DUP3 KECCAK256 PUSH1 0x3 DUP5 ADD SLOAD SWAP2 DUP3 SWAP1 SIGNEXTEND SWAP4 PUSH1 0x1 PUSH1 0x38 SHL DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0xD8 SHL DUP3 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x6 DUP2 SWAP1 SIGNEXTEND SWAP9 POP PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 POP PUSH1 0x1 PUSH1 0xD8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP5 POP PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP5 DIV DUP2 AND SWAP6 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP4 DIV DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP3 DIV SWAP1 SWAP4 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SWAP1 SWAP4 POP DUP15 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND SLT ISZERO SWAP1 POP PUSH2 0x277F JUMPI POP SWAP4 SWAP1 SWAP5 SUB SWAP7 POP SWAP1 SUB SWAP4 POP SWAP1 SUB SWAP1 POP PUSH2 0x2802 JUMP JUMPDEST DUP11 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x27F3 JUMPI PUSH1 0x0 PUSH2 0x279B PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x5 SLOAD PUSH1 0x60 DUP7 ADD MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH2 0x27D1 SWAP4 PUSH1 0x9 SWAP4 DUP9 SWAP4 DUP8 SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x36D5 JUMP JUMPDEST SWAP11 SWAP1 SUB SWAP9 SWAP1 SWAP9 SUB SWAP12 POP POP SWAP5 SWAP1 SWAP7 SUB SWAP3 SWAP1 SWAP3 SUB SWAP7 POP SWAP1 SWAP2 SUB SUB SWAP3 POP PUSH2 0x2802 SWAP2 POP POP JUMP JUMPDEST POP SWAP5 SWAP1 SWAP4 SUB SWAP7 POP SUB SWAP4 POP SWAP1 SUB SWAP1 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x284D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x291D JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x290F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO DUP1 PUSH2 0x2954 JUMPI POP PUSH2 0x3E8 DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x2954 JUMPI POP PUSH2 0xFA0 DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2989 JUMPI POP PUSH4 0xFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0x2989 JUMPI POP PUSH2 0x3E8 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x2989 JUMPI POP PUSH2 0xFA0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0x2992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 PUSH1 0x10 DUP5 SWAP1 SHL AND DUP5 ADD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH4 0xFFFFFFFF NOT DUP4 AND OR SWAP1 SWAP3 SSTORE AND PUSH32 0xB3159FED3DDFBA67BAE294599EAFE2D0EC98C08BB38E0E5FB87D33154B6E05AA PUSH3 0x10000 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP3 MOD DUP4 AND DUP3 MSTORE PUSH2 0xFFFF PUSH1 0x10 DUP7 SWAP1 SHR AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 DUP4 AND DUP3 DUP3 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x2B18 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x10008 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x29983690A85A11696CE8A357993744F8D5A74FDE14653E517CC2F8608A7235E9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND SWAP5 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP4 DIV PUSH1 0xF SIGNEXTEND SWAP4 SWAP2 SWAP3 DUP2 SWAP1 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0xD8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2C98 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4149 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CA3 DUP3 PUSH2 0x39D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2CBB PUSH2 0x2CB3 PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x9 SWAP1 PUSH2 0x471A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP3 MSTORE PUSH1 0x2 DUP9 DUP2 SIGNEXTEND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH2 0xFFFF DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 DUP8 AND PUSH1 0x80 DUP7 ADD DUP2 SWAP1 MSTORE PUSH4 0xC800C80 PUSH1 0xA0 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xC0 SWAP1 SWAP8 ADD DUP8 SWAP1 MSTORE DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP6 OR PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP6 SIGNEXTEND DUP5 AND SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR PUSH4 0xFFFFFFFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 MUL OR PUSH2 0xFFFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x20 SHL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND SWAP1 SWAP2 OR PUSH1 0xFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH32 0x0 AND PUSH1 0x64 EQ ISZERO PUSH2 0x2DD0 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xCE40CE4 OR SWAP1 SSTORE PUSH2 0x2EA1 JUMP JUMPDEST PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH2 0x1F4 EQ ISZERO PUSH2 0x2E17 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xD480D48 OR SWAP1 SSTORE PUSH2 0x2EA1 JUMP JUMPDEST PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH2 0x9C4 EQ ISZERO PUSH2 0x2E5E JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xC800C80 OR SWAP1 SSTORE PUSH2 0x2EA1 JUMP JUMPDEST PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH2 0x2710 EQ ISZERO PUSH2 0x2EA1 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xC800C80 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x2 DUP6 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x98636036CB66A9C19A37435EFC1E90142190214E8ABEB821BDBA3F2990DD4C95 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH3 0xD89E7 NOT DUP2 PUSH2 0x2F03 JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH3 0xD89E8 DUP2 PUSH2 0x2F1A JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND DUP4 DUP4 SUB PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2F31 JUMPI INVALID JUMPDEST SDIV PUSH1 0x1 ADD SWAP1 POP DUP1 PUSH3 0xFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 PUSH2 0x2F4E JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2F72 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x2F99 JUMPI POP DUP5 PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2F92 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2FA3 JUMPI PUSH1 0x0 NOT ADD JUMPDEST DUP4 ISZERO PUSH2 0x3018 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2FB5 DUP4 PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP4 AND SWAP2 SWAP1 SWAP2 SHL DUP1 ADD PUSH1 0x0 NOT ADD SWAP1 DUP2 AND DUP1 ISZERO ISZERO SWAP8 POP SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 DUP6 PUSH2 0x2FFA JUMPI DUP9 DUP4 PUSH1 0xFF AND DUP7 SUB MUL PUSH2 0x300D JUMP JUMPDEST DUP9 PUSH2 0x3004 DUP3 PUSH2 0x4778 JUMP JUMPDEST DUP5 SUB PUSH1 0xFF AND DUP7 SUB MUL JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x3096 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3027 DUP4 PUSH1 0x1 ADD PUSH2 0x4766 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SUB NOT SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH1 0x0 DUP7 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP DUP1 PUSH1 0x0 EQ ISZERO SWAP6 POP DUP6 PUSH2 0x3079 JUMPI DUP9 DUP4 PUSH1 0xFF SUB PUSH1 0xFF AND DUP7 PUSH1 0x1 ADD ADD MUL PUSH2 0x308F JUMP JUMPDEST DUP9 DUP4 PUSH2 0x3084 DUP4 PUSH2 0x4812 JUMP JUMPDEST SUB PUSH1 0xFF AND DUP7 PUSH1 0x1 ADD ADD MUL JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x30B7 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x30BF JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x30FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x3111 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3123 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x88 SHL SUB AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x314D JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x316C JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x318B JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x31AA JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x31C9 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x31E8 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x3207 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x3227 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3247 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x3267 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x3287 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x32A7 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x32C7 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x32E7 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x3307 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x3328 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x3348 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x3367 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x3384 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x339F JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x339B JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL DUP2 MOD ISZERO PUSH2 0x33B2 JUMPI PUSH1 0x1 PUSH2 0x33B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP1 DUP11 AND LT ISZERO DUP2 DUP8 SLT DUP1 ISZERO SWAP1 PUSH2 0x344C JUMPI PUSH1 0x0 PUSH2 0x3400 DUP10 DUP10 PUSH3 0xF4240 SUB PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x3419 JUMPI PUSH2 0x3414 DUP13 DUP13 DUP13 PUSH1 0x1 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x3426 JUMP JUMPDEST PUSH2 0x3426 DUP12 DUP14 DUP13 PUSH1 0x1 PUSH2 0x4976 JUMP JUMPDEST SWAP6 POP DUP6 DUP2 LT PUSH2 0x3437 JUMPI DUP11 SWAP7 POP PUSH2 0x3446 JUMP JUMPDEST PUSH2 0x3443 DUP13 DUP12 DUP4 DUP7 PUSH2 0x4A21 JUMP JUMPDEST SWAP7 POP JUMPDEST POP PUSH2 0x3496 JUMP JUMPDEST DUP2 PUSH2 0x3463 JUMPI PUSH2 0x345E DUP12 DUP12 DUP12 PUSH1 0x0 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x3470 JUMP JUMPDEST PUSH2 0x3470 DUP11 DUP13 DUP12 PUSH1 0x0 PUSH2 0x48FB JUMP JUMPDEST SWAP4 POP DUP4 DUP9 PUSH1 0x0 SUB LT PUSH2 0x3484 JUMPI DUP10 SWAP6 POP PUSH2 0x3496 JUMP JUMPDEST PUSH2 0x3493 DUP12 DUP11 DUP11 PUSH1 0x0 SUB DUP6 PUSH2 0x4A6D JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP1 DUP8 AND EQ DUP3 ISZERO PUSH2 0x34F9 JUMPI DUP1 DUP1 ISZERO PUSH2 0x34B5 JUMPI POP DUP2 JUMPDEST PUSH2 0x34CB JUMPI PUSH2 0x34C6 DUP8 DUP14 DUP13 PUSH1 0x1 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x34CD JUMP JUMPDEST DUP6 JUMPDEST SWAP6 POP DUP1 DUP1 ISZERO PUSH2 0x34DA JUMPI POP DUP2 ISZERO JUMPDEST PUSH2 0x34F0 JUMPI PUSH2 0x34EB DUP8 DUP14 DUP13 PUSH1 0x0 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x34F2 JUMP JUMPDEST DUP5 JUMPDEST SWAP5 POP PUSH2 0x3543 JUMP JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x3503 JUMPI POP DUP2 JUMPDEST PUSH2 0x3519 JUMPI PUSH2 0x3514 DUP13 DUP9 DUP13 PUSH1 0x1 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x351B JUMP JUMPDEST DUP6 JUMPDEST SWAP6 POP DUP1 DUP1 ISZERO PUSH2 0x3528 JUMPI POP DUP2 ISZERO JUMPDEST PUSH2 0x353E JUMPI PUSH2 0x3539 DUP13 DUP9 DUP13 PUSH1 0x0 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x3540 JUMP JUMPDEST DUP5 JUMPDEST SWAP5 POP JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0x3553 JUMPI POP DUP9 PUSH1 0x0 SUB DUP6 GT JUMPDEST ISZERO PUSH2 0x355F JUMPI DUP9 PUSH1 0x0 SUB SWAP5 POP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x357E JUMPI POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x358D JUMPI DUP6 DUP10 SUB SWAP4 POP PUSH2 0x35AA JUMP JUMPDEST PUSH2 0x35A7 DUP7 DUP10 PUSH3 0xFFFFFF AND DUP11 PUSH3 0xF4240 SUB PUSH3 0xFFFFFF AND PUSH2 0x4460 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x35CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x361C JUMPI POP POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x3619 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x365B JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x3650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x36CE JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x3667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF DUP8 AND PUSH2 0x377B JUMPI PUSH1 0x0 DUP10 DUP7 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x36F6 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP4 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP11 AND EQ PUSH2 0x3767 JUMPI PUSH2 0x3764 DUP2 DUP11 DUP10 DUP9 PUSH2 0x4AB9 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP PUSH2 0x385B JUMP JUMPDEST DUP7 DUP9 SUB PUSH1 0x0 DUP1 PUSH2 0x3790 DUP13 DUP13 DUP6 DUP13 DUP13 DUP13 DUP13 PUSH2 0x4B5C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x37C2 JUMPI DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x385B JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x37EA JUMPI DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x385B JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP4 SWAP1 SUB SWAP3 DUP7 SUB SWAP2 PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP3 SWAP1 DUP6 AND SWAP2 SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x3818 JUMPI INVALID JUMPDEST SDIV MUL DUP5 PUSH1 0x20 ADD MLOAD ADD DUP3 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL DUP2 PUSH2 0x384A JUMPI INVALID JUMPDEST DIV DUP6 PUSH1 0x40 ADD MLOAD ADD SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SWAP6 DUP7 SIGNEXTEND DUP7 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 SWAP1 SWAP7 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP1 SWAP6 SUB SWAP1 SWAP5 SSTORE SWAP4 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 SUB SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xD8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x38 SHL DUP1 DUP6 DIV DUP3 AND SWAP1 SWAP7 SUB AND SWAP1 SWAP5 MUL PUSH1 0x1 PUSH1 0x38 SHL PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x6 DUP2 DUP2 SIGNEXTEND SWAP1 SWAP7 SUB SWAP1 SWAP6 SIGNEXTEND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP3 DUP2 DIV DUP6 AND SWAP1 SWAP6 SUB SWAP1 SWAP4 AND MUL PUSH4 0xFFFFFFFF PUSH1 0xD8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x3986 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x0 SUB DUP5 SUB SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x3981 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x35E5 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 DUP5 ADD SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x35E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C41 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT DUP1 ISZERO SWAP1 PUSH2 0x3A13 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT JUMPDEST PUSH2 0x3A48 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0xC0 SHL SUB PUSH1 0x20 DUP4 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT PUSH1 0x7 SHL DUP2 DUP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH1 0x6 SHL SWAP1 DUP2 SHR PUSH4 0xFFFFFFFF DUP2 GT PUSH1 0x5 SHL SWAP1 DUP2 SHR PUSH2 0xFFFF DUP2 GT PUSH1 0x4 SHL SWAP1 DUP2 SHR PUSH1 0xFF DUP2 GT PUSH1 0x3 SWAP1 DUP2 SHL SWAP2 DUP3 SHR PUSH1 0xF DUP2 GT PUSH1 0x2 SHL SWAP1 DUP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP3 DUP4 SHR SWAP8 SWAP1 DUP9 GT SWAP7 OR SWAP1 SWAP5 OR SWAP1 SWAP3 OR OR SWAP1 SWAP2 OR OR OR PUSH1 0x80 DUP2 LT PUSH2 0x3ADA JUMPI PUSH1 0x7F DUP2 SUB DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x3AE4 JUMP JUMPDEST DUP1 PUSH1 0x7F SUB DUP4 SWAP1 SHL SWAP2 POP JUMPDEST SWAP1 DUP1 MUL PUSH1 0x7F DUP2 DUP2 SHR PUSH1 0xFF DUP4 DUP2 SHR SWAP2 SWAP1 SWAP2 SHR DUP1 MUL DUP1 DUP4 SHR DUP2 DUP4 SHR SHR DUP1 MUL DUP1 DUP5 SHR DUP2 DUP5 SHR SHR DUP1 MUL DUP1 DUP6 SHR DUP2 DUP6 SHR SHR DUP1 MUL DUP1 DUP7 SHR DUP2 DUP7 SHR SHR DUP1 MUL DUP1 DUP8 SHR DUP2 DUP8 SHR SHR DUP1 MUL DUP1 DUP9 SHR DUP2 DUP9 SHR SHR DUP1 MUL DUP1 DUP10 SHR DUP2 DUP10 SHR SHR DUP1 MUL DUP1 DUP11 SHR DUP2 DUP11 SHR SHR DUP1 MUL DUP1 DUP12 SHR DUP2 DUP12 SHR SHR DUP1 MUL DUP1 DUP13 SHR DUP2 DUP13 SHR SHR DUP1 MUL DUP1 DUP14 SHR DUP2 DUP14 SHR SHR DUP1 MUL DUP1 DUP15 SHR SWAP13 DUP2 SWAP1 SHR SWAP13 SWAP1 SWAP13 SHR DUP1 MUL SWAP13 DUP14 SWAP1 SHR SWAP15 SWAP14 PUSH1 0x7F NOT DUP16 ADD PUSH1 0x40 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x3F SHL AND OR PUSH1 0xC1 SWAP12 SWAP1 SWAP12 SHR PUSH1 0x1 PUSH1 0x3E SHL AND SWAP11 SWAP1 SWAP11 OR PUSH1 0xC2 SWAP10 SWAP1 SWAP10 SHR PUSH1 0x1 PUSH1 0x3D SHL AND SWAP9 SWAP1 SWAP9 OR PUSH1 0xC3 SWAP8 SWAP1 SWAP8 SHR PUSH1 0x1 PUSH1 0x3C SHL AND SWAP7 SWAP1 SWAP7 OR PUSH1 0xC4 SWAP6 SWAP1 SWAP6 SHR PUSH1 0x1 PUSH1 0x3B SHL AND SWAP5 SWAP1 SWAP5 OR PUSH1 0xC5 SWAP4 SWAP1 SWAP4 SHR PUSH1 0x1 PUSH1 0x3A SHL AND SWAP3 SWAP1 SWAP3 OR PUSH1 0xC6 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x39 SHL AND OR PUSH1 0xC7 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x38 SHL AND OR PUSH1 0xC8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x37 SHL AND OR PUSH1 0xC9 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x36 SHL AND OR PUSH1 0xCA SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x35 SHL AND OR PUSH1 0xCB SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x34 SHL AND OR PUSH1 0xCC SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x33 SHL AND OR PUSH1 0xCD SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x32 SHL AND OR PUSH10 0x3627A301D71055774C85 DUP2 MUL PUSH16 0x28F6481AB7F045A5AF012A19D003AA9 NOT DUP2 ADD PUSH1 0x80 SWAP1 DUP2 SAR SWAP1 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP4 ADD SWAP1 SAR PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND EQ PUSH2 0x3CB3 JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C97 DUP3 PUSH2 0x30A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3CAC JUMPI DUP2 PUSH2 0x3CAE JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3CB5 JUMP JUMPDEST DUP2 JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP10 DUP10 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x3CD8 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP4 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP10 AND EQ ISZERO PUSH2 0x3D47 JUMPI DUP9 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x385B JUMP JUMPDEST DUP5 PUSH2 0xFFFF AND DUP5 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x3D68 JUMPI POP PUSH1 0x1 DUP6 SUB PUSH2 0xFFFF AND DUP10 PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3D75 JUMPI DUP4 SWAP2 POP PUSH2 0x3D79 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP2 PUSH2 0xFFFF AND DUP10 PUSH1 0x1 ADD PUSH2 0xFFFF AND DUP2 PUSH2 0x3D8D JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x3D9C DUP2 DUP10 DUP10 DUP10 PUSH2 0x4AB9 JUMP JUMPDEST DUP11 DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x3DAD JUMPI INVALID JUMPDEST DUP3 MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xF8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH1 0x1 PUSH1 0x58 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0x6 SWAP4 SWAP1 SWAP4 SIGNEXTEND PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x20 SHL NOT PUSH4 0xFFFFFFFF SWAP1 SWAP8 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP6 SWAP1 SWAP6 AND SWAP3 SWAP1 SWAP3 OR AND SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 AND OR SWAP1 SSTORE POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3EC3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3EA4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3F25 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3F2A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x3F58 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x3F58 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x3F8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70A08231 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x402E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x400F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x408E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x40A7 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST PUSH2 0x40B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70A08231 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH2 0x402E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x400F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0xFFFF AND GT PUSH2 0x41B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0xF8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT PUSH2 0x41CA JUMPI POP DUP2 PUSH2 0x36CE JUMP JUMPDEST DUP3 JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x4210 JUMPI PUSH1 0x1 DUP6 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x41EF JUMPI INVALID JUMPDEST ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x41CC JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x2F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4241 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x4651 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP5 DIV DUP2 AND DUP6 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP5 DIV DUP2 AND PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP5 DIV AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE DUP9 MLOAD SWAP1 DUP10 ADD MLOAD SWAP5 DUP10 ADD MLOAD SWAP3 DUP10 ADD MLOAD SWAP4 SWAP5 PUSH2 0x42E3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x4D56 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ PUSH2 0x4458 JUMPI DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x4338 JUMPI PUSH2 0x4331 PUSH2 0x431A DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST PUSH2 0x4327 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x4F0B JUMP JUMPDEST SWAP3 POP PUSH2 0x4458 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x442E JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x438A SWAP1 PUSH2 0x436E PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x9 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 PUSH2 0x3CC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xC8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL PUSH2 0xFFFF SWAP4 DUP5 AND MUL OR PUSH2 0xFFFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x43DA SWAP2 SWAP1 PUSH2 0x43D0 SWAP1 PUSH2 0x30A0 JUMP JUMPDEST DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0x4F0B JUMP JUMPDEST SWAP4 POP PUSH2 0x43F8 PUSH2 0x43EC DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x4F4F JUMP JUMPDEST SWAP3 POP PUSH2 0x4408 DUP2 DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x3921 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0x4458 JUMP JUMPDEST PUSH2 0x4455 PUSH2 0x443E DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST PUSH2 0x444B DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x4F4F JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446D DUP5 DUP5 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0x4479 JUMPI INVALID JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x36CE JUMPI PUSH1 0x0 NOT DUP2 LT PUSH2 0x4490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 SIGNEXTEND PUSH1 0xE8 SWAP1 DUP2 SHL PUSH1 0x34 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SIGNEXTEND SWAP1 SWAP2 SHL PUSH1 0x37 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP5 SUB PUSH1 0x1A ADD DUP2 MSTORE PUSH1 0x3A SWAP1 SWAP4 ADD DUP2 MSTORE DUP3 MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP1 MSTORE SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP4 PUSH2 0xFFFF AND GT PUSH2 0x4539 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0xF8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x457A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x45BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x4644 JUMPI PUSH2 0x45EF DUP11 DUP11 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x45DE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP11 DUP11 DUP11 PUSH2 0x36D5 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x45FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x460E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP3 PUSH1 0x6 SIGNEXTEND PUSH1 0x6 SIGNEXTEND DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x45C4 JUMP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x4691 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x544C55 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E7 NOT PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x46D4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x544C4D PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x4716 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x54554D PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x60 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xF8 SHL OR SWAP1 SWAP2 SSTORE SWAP1 DUP2 SWAP1 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND PUSH1 0x8 DUP2 SWAP1 SAR SWAP2 PUSH2 0x100 SWAP1 SWAP2 SMOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x4799 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT PUSH2 0x47AC JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL DUP3 LT PUSH2 0x47BF JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x47D1 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x47E2 JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x47F2 JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x4802 JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2F55 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x483B JUMPI PUSH1 0x7F NOT ADD PUSH2 0x4843 JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ISZERO PUSH2 0x485B JUMPI PUSH1 0x3F NOT ADD PUSH2 0x4863 JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO PUSH2 0x4878 JUMPI PUSH1 0x1F NOT ADD PUSH2 0x4880 JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH2 0xFFFF DUP3 AND ISZERO PUSH2 0x4893 JUMPI PUSH1 0xF NOT ADD PUSH2 0x489B JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x48AD JUMPI PUSH1 0x7 NOT ADD PUSH2 0x48B5 JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xF DUP3 AND ISZERO PUSH2 0x48C7 JUMPI PUSH1 0x3 NOT ADD PUSH2 0x48CF JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 AND ISZERO PUSH2 0x48E1 JUMPI PUSH1 0x1 NOT ADD PUSH2 0x48E9 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x2F55 JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x491B JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 PUSH2 0x4948 JUMPI PUSH2 0x4943 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x496B JUMP JUMPDEST PUSH2 0x496B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x4460 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x4996 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP7 SUB DUP2 AND SWAP1 DUP8 AND PUSH2 0x49C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x49F0 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49E3 DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST DUP2 PUSH2 0x49EA JUMPI INVALID JUMPDEST DIV PUSH2 0x4A16 JUMP JUMPDEST PUSH2 0x4A16 PUSH2 0x4A07 DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4460 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F7E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x4A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x4A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x4A60 JUMPI PUSH2 0x4943 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x4F89 JUMP JUMPDEST PUSH2 0x496B DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x506A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x4A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x4A9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x4AAC JUMPI PUSH2 0x4943 DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x506A JUMP JUMPDEST PUSH2 0x496B DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x4F89 JUMP JUMPDEST PUSH2 0x4AC1 PUSH2 0x588A JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP6 SUB SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x2 SIGNEXTEND MUL DUP9 PUSH1 0x20 ADD MLOAD ADD PUSH1 0x6 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x4B15 JUMPI PUSH1 0x1 PUSH2 0x4B17 JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH4 0xFFFFFFFF PUSH1 0x80 SHL PUSH1 0x80 DUP6 SWAP1 SHL AND DUP2 PUSH2 0x4B35 JUMPI INVALID JUMPDEST DIV DUP9 PUSH1 0x40 ADD MLOAD ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4B64 PUSH2 0x588A JUMP JUMPDEST PUSH2 0x4B6C PUSH2 0x588A JUMP JUMPDEST DUP9 DUP6 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x4B7D JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP3 POP PUSH2 0x4BE1 SWAP1 DUP10 SWAP1 DUP10 PUSH2 0x514D JUMP JUMPDEST ISZERO PUSH2 0x4C19 JUMPI DUP7 PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x4C03 JUMPI PUSH2 0x385B JUMP JUMPDEST DUP2 PUSH2 0x4C10 DUP4 DUP10 DUP10 DUP9 PUSH2 0x4AB9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x385B JUMP JUMPDEST DUP9 DUP4 PUSH2 0xFFFF AND DUP7 PUSH1 0x1 ADD PUSH2 0xFFFF AND DUP2 PUSH2 0x4C2E JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x4C3E JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH2 0x4CF3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP11 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP2 POP JUMPDEST PUSH2 0x4D02 DUP9 DUP4 PUSH1 0x0 ADD MLOAD DUP10 PUSH2 0x514D JUMP JUMPDEST PUSH2 0x4D39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x13D311 PUSH1 0xEA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4D46 DUP10 DUP10 DUP10 DUP9 DUP8 PUSH2 0x520E JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D65 PUSH1 0x8 DUP8 DUP8 DUP8 PUSH2 0x449A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 PUSH1 0xF DUP8 SWAP1 SIGNEXTEND ISZERO PUSH2 0x4EAB JUMPI PUSH1 0x0 PUSH2 0x4D86 PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x5 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x4DD0 SWAP2 PUSH1 0x9 SWAP2 DUP7 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SIGNEXTEND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV AND PUSH2 0x36D5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4E0A PUSH1 0x6 DUP14 DUP12 DUP14 DUP12 DUP12 DUP8 DUP10 DUP12 PUSH1 0x0 PUSH32 0x0 PUSH2 0x53AC JUMP JUMPDEST SWAP5 POP PUSH2 0x4E41 PUSH1 0x6 DUP13 DUP12 DUP14 DUP12 DUP12 DUP8 DUP10 DUP12 PUSH1 0x1 PUSH32 0x0 PUSH2 0x53AC JUMP JUMPDEST SWAP4 POP DUP5 ISZERO PUSH2 0x4E75 JUMPI PUSH2 0x4E75 PUSH1 0x7 DUP14 PUSH32 0x0 PUSH2 0x5565 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x4EA7 JUMPI PUSH2 0x4EA7 PUSH1 0x7 DUP13 PUSH32 0x0 PUSH2 0x5565 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EBD PUSH1 0x6 DUP13 DUP13 DUP12 DUP11 DUP11 PUSH2 0x55CB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4ECE DUP8 DUP11 DUP5 DUP5 PUSH2 0x5677 JUMP JUMPDEST PUSH1 0x0 DUP10 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x4EFC JUMPI DUP4 ISZERO PUSH2 0x4EEB JUMPI PUSH2 0x4EEB PUSH1 0x6 DUP13 PUSH2 0x580C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x4EFC JUMPI PUSH2 0x4EFC PUSH1 0x6 DUP12 PUSH2 0x580C JUMP JUMPDEST POP POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x4F31 JUMPI PUSH2 0x4F2C PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x496E JUMP JUMPDEST PUSH2 0x4F44 PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x0 SUB PUSH1 0x0 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x0 SUB SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x4F6B JUMPI PUSH2 0x4F2C PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x4F44 PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x0 SUB PUSH1 0x0 PUSH2 0x48FB JUMP JUMPDEST DUP1 DUP3 DIV SWAP2 MOD ISZERO ISZERO ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x4FFC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 GT ISZERO PUSH2 0x4FBF JUMPI PUSH2 0x4FBA DUP5 PUSH1 0x1 PUSH1 0x60 SHL DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x4FD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH1 0x60 DUP6 SWAP1 SHL DUP2 PUSH2 0x4FD5 JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP1 POP PUSH2 0x4FF4 PUSH2 0x4FEF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 PUSH2 0x40CE JUMP JUMPDEST PUSH2 0x5838 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x496E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 GT ISZERO PUSH2 0x502A JUMPI PUSH2 0x5025 DUP5 PUSH1 0x1 PUSH1 0x60 SHL DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x4460 JUMP JUMPDEST PUSH2 0x5041 JUMP JUMPDEST PUSH2 0x5041 PUSH1 0x60 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH2 0x4F7E JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x5058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SUB SWAP1 POP PUSH2 0x496E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5078 JUMPI POP DUP4 PUSH2 0x496E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x60 DUP6 SWAP1 SHL AND DUP3 ISZERO PUSH2 0x5106 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DUP2 PUSH2 0x50A6 JUMPI INVALID JUMPDEST DIV EQ ISZERO PUSH2 0x50D7 JUMPI DUP2 DUP2 ADD DUP3 DUP2 LT PUSH2 0x50D5 JUMPI PUSH2 0x50CB DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x4460 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x496E JUMP JUMPDEST POP JUMPDEST PUSH2 0x50FD DUP3 PUSH2 0x50F8 DUP8 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP2 PUSH2 0x50F1 JUMPI INVALID JUMPDEST DIV SWAP1 PUSH2 0x40CE JUMP JUMPDEST PUSH2 0x4F7E JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x496E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DUP2 PUSH2 0x511D JUMPI INVALID JUMPDEST DIV EQ DUP1 ISZERO PUSH2 0x512A JUMPI POP DUP1 DUP3 GT JUMPDEST PUSH2 0x5133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB PUSH2 0x50CB PUSH2 0x4FEF DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x5177 JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x5193 JUMPI DUP2 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO SWAP1 POP PUSH2 0x36CE JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT PUSH2 0x51BA JUMPI DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x20 SHL ADD PUSH2 0x51C2 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT PUSH2 0x51F2 JUMPI DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x20 SHL ADD PUSH2 0x51FA JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 SWAP2 GT ISZERO SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5216 PUSH2 0x588A JUMP JUMPDEST PUSH2 0x521E PUSH2 0x588A JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0xFFFF AND DUP6 PUSH1 0x1 ADD PUSH2 0xFFFF AND DUP2 PUSH2 0x5234 JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH2 0xFFFF AND DUP4 ADD SUB SWAP1 POP PUSH1 0x0 JUMPDEST POP PUSH1 0x2 DUP2 DUP4 ADD DIV DUP10 PUSH2 0xFFFF DUP8 AND DUP3 DUP2 PUSH2 0x5261 JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF DUP2 LT PUSH2 0x526D JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP6 POP PUSH2 0x52D7 JUMPI DUP1 PUSH1 0x1 ADD SWAP3 POP PUSH2 0x524C JUMP JUMPDEST DUP10 DUP7 PUSH2 0xFFFF AND DUP3 PUSH1 0x1 ADD DUP2 PUSH2 0x52E8 JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF DUP2 LT PUSH2 0x52F4 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP6 MLOAD SWAP1 SWAP5 POP PUSH1 0x0 SWAP1 PUSH2 0x535E SWAP1 DUP12 SWAP1 DUP12 PUSH2 0x514D JUMP JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x5377 JUMPI POP PUSH2 0x5377 DUP11 DUP11 DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x514D JUMP JUMPDEST ISZERO PUSH2 0x5382 JUMPI POP PUSH2 0x539F JUMP JUMPDEST DUP1 PUSH2 0x5392 JUMPI PUSH1 0x1 DUP3 SUB SWAP3 POP PUSH2 0x5399 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SWAP4 POP JUMPDEST POP PUSH2 0x524C JUMP JUMPDEST POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP11 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH2 0x53D7 DUP3 DUP14 PUSH2 0x3921 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x5425 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C4F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND ISZERO SWAP1 DUP3 AND ISZERO DUP2 EQ ISZERO SWAP5 POP ISZERO PUSH2 0x54CA JUMPI DUP13 PUSH1 0x2 SIGNEXTEND DUP15 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x54B2 JUMPI PUSH1 0x1 DUP4 ADD DUP12 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD DUP11 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x38 SHL PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x38 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF NOT AND PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x6 DUP12 SWAP1 SIGNEXTEND AND OR PUSH4 0xFFFFFFFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL PUSH4 0xFFFFFFFF DUP11 AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH1 0x1 PUSH1 0xF8 SHL OR SWAP1 SSTORE JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND OR DUP4 SSTORE DUP6 PUSH2 0x5513 JUMPI DUP3 SLOAD PUSH2 0x550E SWAP1 PUSH2 0x5509 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP16 SWAP1 SIGNEXTEND PUSH2 0x35EB JUMP JUMPDEST PUSH2 0x4219 JUMP JUMPDEST PUSH2 0x5534 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5534 SWAP1 PUSH2 0x5509 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP16 SWAP1 SIGNEXTEND PUSH2 0x35CF JUMP JUMPDEST DUP4 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP2 AND OR SWAP1 SWAP3 SSTORE POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x5574 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x5582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x559D DUP4 PUSH1 0x2 SIGNEXTEND DUP6 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x5597 JUMPI INVALID JUMPDEST SDIV PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 SWAP1 SWAP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP6 XOR SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP6 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP9 DUP6 SIGNEXTEND DUP6 SIGNEXTEND DUP4 MSTORE SWAP1 DUP3 KECCAK256 SWAP2 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 SWAP2 DUP3 SWAP2 SWAP1 DUP11 SWAP1 SIGNEXTEND SLT PUSH2 0x5611 JUMPI POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x5624 JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP9 SUB SWAP2 POP DUP4 PUSH1 0x2 ADD SLOAD DUP8 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 DUP12 PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x5646 JUMPI POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x5659 JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD DUP11 SUB SWAP2 POP DUP5 PUSH1 0x2 ADD SLOAD DUP10 SUB SWAP1 POP JUMPDEST SWAP3 SWAP1 SWAP9 SUB SWAP8 SWAP1 SWAP8 SUB SWAP12 SWAP7 SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 SUB SWAP9 POP SWAP4 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP8 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP1 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xF DUP6 SWAP1 SIGNEXTEND PUSH2 0x5716 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x570E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E5 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH2 0x5725 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x5722 SWAP1 DUP7 PUSH2 0x3921 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x5749 DUP4 PUSH1 0x20 ADD MLOAD DUP7 SUB DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x576F DUP5 PUSH1 0x40 ADD MLOAD DUP7 SUB DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ PUSH2 0x5796 JUMPI DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND OR DUP9 SSTORE JUMPDEST PUSH1 0x1 DUP9 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP9 ADD DUP6 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO ISZERO DUP1 PUSH2 0x57C4 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x5802 JUMPI PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP6 ADD DUP3 AND OR DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP4 AND DUP6 ADD SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 ADD SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"1021:36739:1:-:0;;;4765:280;;;;;;;;;;4790:18;4890:10;-1:-1:-1;;;;;4866:46:1;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4866:48:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4819:95:1;;;;;;;-1:-1:-1;;;;;;4819:95:1;;;;;;;;;;;;4866:48;4819:95;;;;;;;;4925:26;;;;;;;;;;;4866:48;;-1:-1:-1;4986:51:1;;4866:48;;4986:37;;;;;:51;;:::i;:::-;4964:73;;-1:-1:-1;;;;;;4964:73:1;;;-1:-1:-1;1021:36739:1;;2253:369:26;2337:7;;2409:11;2374:31;;;;-1:-1:-1;;2374:31:26;;;;;;2373:47;;-1:-1:-1;2431:13:26;2483:11;2448:31;;;;654:9:28;2448:31:26;;;;;;2447:47;2431:63;;2505:15;2552:11;2530:33;;2541:7;2531;:17;2530:33;;;;;;;;2567:1;2523:45;2505:63;;2606:8;2586:28;;-1:-1:-1;;;;;2586:28:26;;;;;;;;;2253:369;-1:-1:-1;;;;;2253:369:26:o;1021:36739:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{"78":[{"length":32,"start":8582},{"length":32,"start":8623},{"length":32,"start":10341},{"length":32,"start":10382},{"length":32,"start":10803},{"length":32,"start":10848},{"length":32,"start":10889}],"82":[{"length":32,"start":2212},{"length":32,"start":5074},{"length":32,"start":7008},{"length":32,"start":8082},{"length":32,"start":8962},{"length":32,"start":16355}],"86":[{"length":32,"start":4772},{"length":32,"start":7057},{"length":32,"start":8184},{"length":32,"start":9096},{"length":32,"start":11165},{"length":32,"start":16684}],"90":[{"length":32,"start":3376},{"length":32,"start":6871},{"length":32,"start":6926},{"length":32,"start":11201},{"length":32,"start":11664},{"length":32,"start":11730},{"length":32,"start":11801},{"length":32,"start":11872}],"94":[{"length":32,"start":3137},{"length":32,"start":11129},{"length":32,"start":20049},{"length":32,"start":20099}],"98":[{"length":32,"start":8451},{"length":32,"start":19942},{"length":32,"start":19997}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101545760003560e01c80630dfe168114610159578063128acb081461017d5780631a6865021461022a5780631ad8b03b1461024e578063252c09d71461028557806332148f67146102dc5780633850c7bd146102ff5780633c8a7d8d1461035b57806346141319146103fb578063490e6cbc146104155780634f1eb3d81461049f578063514ea4bf146104f05780635339c29614610549578063540d49181461056957806370cf754a1461057157806385b6672914610579578063883bdbfd146105b6578063a34123a7146106bd578063a38807f2146106f7578063b0d0d21114610752578063c45a01551461077d578063cc7e7fa214610785578063d0c93a7c146107ab578063d21220a7146107ca578063ddca3f43146107d2578063f3058399146107f2578063f30dba93146107fa578063f637731d1461087c575b600080fd5b6101616108a2565b604080516001600160a01b039092168252519081900360200190f35b610211600480360360a081101561019357600080fd5b6001600160a01b0382358116926020810135151592604082013592606083013516919081019060a081016080820135600160201b8111156101d357600080fd5b8201836020820111156101e557600080fd5b803590602001918460018302840111600160201b8311171561020657600080fd5b5090925090506108c6565b6040805192835260208301919091528051918290030190f35b6102326115c3565b604080516001600160801b039092168252519081900360200190f35b6102566115d2565b60405180836001600160801b03168152602001826001600160801b031681526020019250505060405180910390f35b6102a26004803603602081101561029b57600080fd5b50356115ec565b6040805163ffffffff909516855260069390930b60208501526001600160a01b039091168383015215156060830152519081900360800190f35b6102fd600480360360208110156102f257600080fd5b503561ffff16611631565b005b610307611723565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015263ffffffff90911660a0840152151560c0830152519081900360e00190f35b610211600480360360a081101561037157600080fd5b6001600160a01b03823516916020810135600290810b92604083013590910b916001600160801b036060820135169181019060a081016080820135600160201b8111156103bd57600080fd5b8201836020820111156103cf57600080fd5b803590602001918460018302840111600160201b831117156103f057600080fd5b509092509050611778565b610403611a36565b60408051918252519081900360200190f35b6102fd6004803603608081101561042b57600080fd5b6001600160a01b038235169160208101359160408201359190810190608081016060820135600160201b81111561046157600080fd5b82018360208201111561047357600080fd5b803590602001918460018302840111600160201b8311171561049457600080fd5b509092509050611a3c565b610256600480360360a08110156104b557600080fd5b506001600160a01b03813516906020810135600290810b91604081013590910b906001600160801b0360608201358116916080013516611e83565b61050d6004803603602081101561050657600080fd5b50356120a1565b604080516001600160801b0396871681526020810195909552848101939093529084166060840152909216608082015290519081900360a00190f35b6104036004803603602081101561055f57600080fd5b503560010b6120de565b6101616120f0565b610232612101565b6102566004803603606081101561058f57600080fd5b506001600160a01b03813516906001600160801b0360208201358116916040013516612125565b610624600480360360208110156105cc57600080fd5b810190602081018135600160201b8111156105e657600080fd5b8201836020820111156105f857600080fd5b803590602001918460208302840111600160201b8311171561061957600080fd5b509092509050612420565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610668578181015183820152602001610650565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106a757818101518382015260200161068f565b5050505090500194505050505060405180910390f35b610211600480360360608110156106d357600080fd5b508035600290810b91602081013590910b90604001356001600160801b03166124a5565b6107216004803603604081101561070d57600080fd5b508035600290810b9160200135900b612621565b6040805160069490940b84526001600160a01b03909216602084015263ffffffff1682820152519081900360600190f35b6102fd6004803603604081101561076857600080fd5b5063ffffffff81358116916020013516612809565b610161612a31565b6102fd6004803603602081101561079b57600080fd5b50356001600160a01b0316612a55565b6107b3612b77565b6040805160029290920b8252519081900360200190f35b610161612b9b565b6107da612bbf565b6040805162ffffff9092168252519081900360200190f35b610403612be3565b61081a6004803603602081101561081057600080fd5b503560020b612be9565b604080516001600160801b039099168952600f9790970b602089015287870195909552606087019390935260069190910b60808601526001600160a01b031660a085015263ffffffff1660c0840152151560e083015251908190036101000190f35b6102fd6004803603602081101561089257600080fd5b50356001600160a01b0316612c55565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008085610900576040805162461bcd60e51b8152602060048201526002602482015261415360f01b604482015290519081900360640190fd5b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602083015261ffff600160b81b8204811693830193909352600160c81b810483166060830152600160d81b9004909116608082015260015463ffffffff811660a083015260ff600160201b90910416151560c082018190526109b8576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b87610a035780600001516001600160a01b0316866001600160a01b03161180156109fe575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610a35565b80600001516001600160a01b0316866001600160a01b0316108015610a3557506401000276a36001600160a01b038716115b610a6c576040805162461bcd60e51b815260206004820152600360248201526214d41360ea1b604482015290519081900360640190fd5b6001805460ff60201b191690556040805160c08101909152600090808a610aa15760108460a0015163ffffffff16901c610aab565b60a084015161ffff165b63ffffffff1681526005546001600160801b03166020820152604001610acf612f5a565b63ffffffff1681526000602082018190526040820181905260609091015262010008549091506001600160a01b031615610b7557620100085460408083015181516310a537f160e11b815263ffffffff909116600482015290516001600160a01b039092169163214a6fe29160248082019260009290919082900301818387803b158015610b5c57600080fd5b505af1158015610b70573d6000803e3d6000fd5b505050505b6000808913905060006040518060e001604052808b81526020016000815260200185600001516001600160a01b03168152602001856020015160020b81526020018c610bc357600354610bc7565b6002545b815260200160006001600160801b0316815260200184602001516001600160801b031681525090505b805115801590610c165750886001600160a01b031681604001516001600160a01b031614155b1561108557610c2361584e565b60408201516001600160a01b031681526060820151610c66906007907f00000000000000000000000000000000000000000000000000000000000000008f612f5e565b15156040830152600290810b810b60208301819052620d89e719910b1215610c9757620d89e7196020820152610cb6565b6020810151620d89e860029190910b1315610cb657620d89e860208201525b610cc381602001516130a0565b6001600160a01b031660608201526040820151610d54908d610cfd578b6001600160a01b031683606001516001600160a01b031611610d17565b8b6001600160a01b031683606001516001600160a01b0316105b610d25578260600151610d27565b8b5b60c085015185517f00000000000000000000000000000000000000000000000000000000000000006133c7565b60c085015260a084015260808301526001600160a01b031660408301528215610db657610d8a8160c001518260800151016135b9565b825103825260a0810151610dac90610da1906135b9565b6020840151906135cf565b6020830152610df1565b610dc38160a001516135b9565b825101825260c08101516080820151610deb91610de091016135b9565b6020840151906135eb565b60208301525b835163ffffffff1615610e51576000612710610e24866000015163ffffffff168460c0015161360190919063ffffffff16565b81610e2b57fe5b60c0840180519290910491829003905260a0840180519091016001600160801b03169052505b60c08201516001600160801b031615610e9057610e848160c00151600160801b8460c001516001600160801b0316613625565b60808301805190910190525b80606001516001600160a01b031682604001516001600160a01b031614156110445780604001511561101b578360a00151610f1a57610ef8846040015160008760200151886040015188602001518a6060015160096136d5909695949392919063ffffffff16565b6001600160a01b03166080860152600690810b900b6060850152600160a08501525b62010008546001600160a01b031615610fa557620100085460208201516040805163a498463360e01b815260029290920b60048301528e15156024830152516001600160a01b039092169163a49846339160448082019260009290919082900301818387803b158015610f8c57600080fd5b505af1158015610fa0573d6000803e3d6000fd5b505050505b6000610ff182602001518e610fbc57600254610fc2565b84608001515b8f610fd1578560800151610fd5565b6003545b608089015160608a015160408b01516006959493929190613867565b90508c15610ffd576000035b61100b8360c0015182613921565b6001600160801b031660c0840152505b8b61102a578060200151611033565b60018160200151035b600290810b900b606083015261107f565b80600001516001600160a01b031682604001516001600160a01b03161461107f5761107282604001516139d7565b600290810b900b60608301525b50610bf0565b836020015160020b816060015160020b14611153576000806110d386604001518660400151886020015188602001518a606001518b608001516009613cc2909695949392919063ffffffff16565b604085015160608601516000805461ffff60c81b1916600160c81b61ffff958616021761ffff60b81b1916600160b81b95909416949094029290921762ffffff60a01b1916600160a01b62ffffff60029490940b9390931692909202919091176001600160a01b0319166001600160a01b03909116179055506111789050565b6040810151600080546001600160a01b0319166001600160a01b039092169190911790555b8060c001516001600160801b031683602001516001600160801b0316146111be5760c0810151600580546001600160801b0319166001600160801b039092169190911790555b6000808c1561121857608083015160025560a08301516001600160801b03161561120c5760a0830151600480546001600160801b031981166001600160801b03918216909301169190911790555b8260a001519150611265565b608083015160035560a08301516001600160801b03161561125e5760a0830151600480546001600160801b03808216600160801b92839004821690940116029190911790555b5060a08201515b8315158d15151461127e57602083015183518d0361128b565b82600001518c0383602001515b90985096508c156113c45760008712156112cd576112cd7f00000000000000000000000000000000000000000000000000000000000000008f89600003613e47565b60006112d7613f95565b9050336001600160a01b031663ce41b35a8a8a8e8e6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561135b57600080fd5b505af115801561136f573d6000803e3d6000fd5b5050505061137b613f95565b611385828b6140ce565b11156113be576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b506114ee565b60008812156113fb576113fb7f00000000000000000000000000000000000000000000000000000000000000008f8a600003613e47565b60006114056140de565b9050336001600160a01b031663ce41b35a8a8a8e8e6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b15801561148957600080fd5b505af115801561149d573d6000803e3d6000fd5b505050506114a96140de565b6114b3828a6140ce565b11156114ec576040805162461bcd60e51b815260206004820152600360248201526249494160e81b604482015290519081900360640190fd5b505b8d6001600160a01b0316336001600160a01b03167f19b47279256b2a23a1665c810c8d55a1758940ee09377d4f8d26497a3577dc838a8a87604001518860c001518960600151898960405180888152602001878152602001866001600160a01b03168152602001856001600160801b031681526020018460020b8152602001836001600160801b03168152602001826001600160801b0316815260200197505050505050505060405180910390a350506001805460ff60201b1916600160201b17905550939a92995091975050505050505050565b6005546001600160801b031681565b6004546001600160801b0380821691600160801b90041682565b60098161ffff81106115fd57600080fd5b015463ffffffff81169150600160201b810460060b90600160581b81046001600160a01b031690600160f81b900460ff1684565b600154600160201b900460ff16611675576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b1916905560008054600160d81b900461ffff169061169e60098385614176565b6000805461ffff808416600160d81b810261ffff60d81b199093169290921790925591925083161461170b576040805161ffff80851682528316602082015281517fac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a929181900390910190a15b50506001805460ff60201b1916600160201b17905550565b6000546001546001600160a01b03821691600160a01b810460020b9161ffff600160b81b8304811692600160c81b8104821692600160d81b9091049091169063ffffffff81169060ff600160201b9091041687565b6001546000908190600160201b900460ff166117c1576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b191690556001600160801b0385166117e157600080fd5b60008061182f60405180608001604052808c6001600160a01b031681526020018b60020b81526020018a60020b81526020016118258a6001600160801b0316614219565b600f0b905261422a565b925092505081935080925060008060008611156118515761184e613f95565b91505b84156118625761185f6140de565b90505b336001600160a01b031663724ffb8187878b8b6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b1580156118e457600080fd5b505af11580156118f8573d6000803e3d6000fd5b50505050600086111561194f5761190d613f95565b61191783886140ce565b111561194f576040805162461bcd60e51b815260206004820152600260248201526104d360f41b604482015290519081900360640190fd5b841561199f5761195d6140de565b61196782876140ce565b111561199f576040805162461bcd60e51b81526020600482015260026024820152614d3160f01b604482015290519081900360640190fd5b8960020b8b60020b8d6001600160a01b03167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338d8b8b60405180856001600160a01b03168152602001846001600160801b0316815260200183815260200182815260200194505050505060405180910390a450506001805460ff60201b1916600160201b17905550919890975095505050505050565b60035481565b600154600160201b900460ff16611a80576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b191690556005546001600160801b031680611acf576040805162461bcd60e51b81526020600482015260016024820152601360fa1b604482015290519081900360640190fd5b6000611b04867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f4240614460565b90506000611b3b867f000000000000000000000000000000000000000000000000000000000000000062ffffff16620f4240614460565b90506000611b47613f95565b90506000611b536140de565b90508815611b8657611b867f00000000000000000000000000000000000000000000000000000000000000008b8b613e47565b8715611bb757611bb77f00000000000000000000000000000000000000000000000000000000000000008b8a613e47565b336001600160a01b0316636a9b97f085858a8a6040518563ffffffff1660e01b815260040180858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505095505050505050600060405180830381600087803b158015611c3957600080fd5b505af1158015611c4d573d6000803e3d6000fd5b505050506000611c5b613f95565b90506000611c676140de565b905081611c7485886140ce565b1115611cac576040805162461bcd60e51b8152602060048201526002602482015261046360f41b604482015290519081900360640190fd5b80611cb784876140ce565b1115611cef576040805162461bcd60e51b8152602060048201526002602482015261463160f01b604482015290519081900360640190fd5b8382038382038115611d785760015461ffff1660008115611d1c5761271063ffffffff8316850204611d1f565b60005b90506001600160801b03811615611d5257600480546001600160801b038082168401166001600160801b03199091161790555b611d6c818503600160801b8d6001600160801b0316613625565b60028054909101905550505b8015611dfd5760015460101c61ffff1660008115611da25761271063ffffffff8316840204611da5565b60005b90506001600160801b03811615611dd757600480546001600160801b03600160801b8083048216850182160291161790555b611df1818403600160801b8d6001600160801b0316613625565b60038054909101905550505b8d6001600160a01b0316336001600160a01b03167fbdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca6338f8f86866040518085815260200184815260200183815260200182815260200194505050505060405180910390a350506001805460ff60201b1916600160201b179055505050505050505050505050565b6001546000908190600160201b900460ff16611ecc576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b191690556000611ee8600833898961449a565b60038101549091506001600160801b0390811690861611611f095784611f18565b60038101546001600160801b03165b60038201549093506001600160801b03600160801b909104811690851611611f405783611f56565b6003810154600160801b90046001600160801b03165b91506001600160801b03831615611fbb576003810180546001600160801b031981166001600160801b03918216869003821617909155611fbb907f0000000000000000000000000000000000000000000000000000000000000000908a908616613e47565b6001600160801b03821615612021576003810180546001600160801b03600160801b808304821686900382160291811691909117909155612021907f0000000000000000000000000000000000000000000000000000000000000000908a908516613e47565b604080516001600160a01b038a1681526001600160801b0380861660208301528416818301529051600288810b92908a900b9133917f70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0919081900360600190a4506001805460ff60201b1916600160201b17905590969095509350505050565b60086020526000908152604090208054600182015460028301546003909301546001600160801b0392831693919281811691600160801b90041685565b60076020526000908152604090205481565b62010008546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546000908190600160201b900460ff1661216e576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b19169055336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061223e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561220657600080fd5b505afa15801561221a573d6000803e3d6000fd5b505050506040513d602081101561223057600080fd5b50516001600160a01b031633145b61224757600080fd5b6004546001600160801b03908116908516116122635783612270565b6004546001600160801b03165b6004549092506001600160801b03600160801b90910481169084161161229657826122aa565b600454600160801b90046001600160801b03165b90506001600160801b0382161561232b576004546001600160801b03838116911614156122d957600019909101905b600480546001600160801b031981166001600160801b0391821685900382161790915561232b907f00000000000000000000000000000000000000000000000000000000000000009087908516613e47565b6001600160801b038116156123b1576004546001600160801b03828116600160801b90920416141561235c57600019015b600480546001600160801b03600160801b8083048216859003821602918116919091179091556123b1907f00000000000000000000000000000000000000000000000000000000000000009087908416613e47565b604080516001600160801b0380851682528316602082015281516001600160a01b0388169233927f596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151929081900390910190a36001805460ff60201b1916600160201b1790559094909350915050565b60608061249a61242e612f5a565b858580806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054600554600996959450600160a01b820460020b935061ffff600160b81b8304811693506001600160801b0390911691600160c81b9004166144f9565b915091509250929050565b6001546000908190600160201b900460ff166124ee576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b1916905560408051608081018252338152600287810b602083015286900b918101919091526000908190819061254a906060810161253d6001600160801b038a16614219565b600003600f0b905261422a565b925092509250816000039450806000039350600085118061256b5750600084115b156125aa576003830180546001600160801b038082168089018216600160801b93849004831689019092169092029091176001600160801b0319161790555b604080516001600160801b0388168152602081018790528082018690529051600289810b92908b900b9133917f0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c919081900360600190a450506001805460ff60201b1916600160201b179055509094909350915050565b60008060006126308585614651565b600285810b810b600090815260066020819052604080832088850b90940b8352822060038401549182900b93600160381b83046001600160a01b0316928492600160d81b820463ffffffff16928492909190600160f81b900460ff168061269657600080fd5b6003820154600681900b9850600160381b81046001600160a01b03169650600160d81b810463ffffffff169450600160f81b900460ff16806126d757600080fd5b50506040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b810b6020840181905261ffff600160b81b8404811695850195909552600160c81b830485166060850152600160d81b909204909316608083015260015463ffffffff811660a084015260ff600160201b90910416151560c08301529093508e820b910b1215905061277f57509390940396509003935090039050612802565b8a60020b816020015160020b12156127f357600061279b612f5a565b60208301516040840151600554606086015193945060009384936127d1936009938893879392916001600160801b0316906136d5565b9a9003989098039b505094909603929092039650909103039250612802915050565b50949093039650039350900390505b9250925092565b600154600160201b900460ff1661284d576040805162461bcd60e51b81526020600482015260036024820152624c4f4b60e81b604482015290519081900360640190fd5b6001805460ff60201b19169055336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061291d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128e557600080fd5b505afa1580156128f9573d6000803e3d6000fd5b505050506040513d602081101561290f57600080fd5b50516001600160a01b031633145b61292657600080fd5b63ffffffff8216158061295457506103e88263ffffffff16101580156129545750610fa08263ffffffff1611155b8015612989575063ffffffff8116158061298957506103e88163ffffffff16101580156129895750610fa08163ffffffff1611155b61299257600080fd5b6001805465ffffffff0000601084901b16840163ffffffff90811663ffffffff19831617909255167fb3159fed3ddfba67bae294599eafe2d0ec98c08bb38e0e5fb87d33154b6e05aa62010000826040805163ffffffff939092068316825261ffff601086901c16602083015286831682820152918516606082015290519081900360800190a150506001805460ff60201b1916600160201b17905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480612b1857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612ae057600080fd5b505afa158015612af4573d6000803e3d6000fd5b505050506040513d6020811015612b0a57600080fd5b50516001600160a01b031633145b612b2157600080fd5b6201000880546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f29983690a85a11696ce8a357993744f8d5a74fde14653e517cc2f8608a7235e99181900360200190a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b60066020819052600091825260409091208054600182015460028301546003909301546001600160801b03831694600160801b909304600f0b93919281900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b6000546001600160a01b031615612c98576040805162461bcd60e51b8152602060048201526002602482015261414960f01b604482015290519081900360640190fd5b6000612ca3826139d7565b9050600080612cbb612cb3612f5a565b60099061471a565b6040805160e0810182526001600160a01b038816808252600288810b60208401819052600094840185905261ffff8781166060860181905290871660808601819052630c800c8060a08701819052600160c090970187905287546001600160a01b03191690951762ffffff60a01b1916600160a01b62ffffff9490950b8416949094029390931763ffffffff60b81b1916600160c81b9091021761ffff60d81b1916600160d81b909202919091179093558154600160201b63ffffffff1990911690911760ff60201b191617905591935091507f00000000000000000000000000000000000000000000000000000000000000001660641415612dd0576001805463ffffffff1916630ce40ce4179055612ea1565b7f000000000000000000000000000000000000000000000000000000000000000062ffffff166101f41415612e17576001805463ffffffff1916630d480d48179055612ea1565b7f000000000000000000000000000000000000000000000000000000000000000062ffffff166109c41415612e5e576001805463ffffffff1916630c800c80179055612ea1565b7f000000000000000000000000000000000000000000000000000000000000000062ffffff166127101415612ea1576001805463ffffffff1916630c800c801790555b604080516001600160a01b0386168152600285900b602082015281517f98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95929181900390910190a150505050565b60008082600281900b620d89e71981612f0357fe5b05029050600083600281900b620d89e881612f1a57fe5b0502905060008460020b83830360020b81612f3157fe5b0560010190508062ffffff166001600160801b03801681612f4e57fe5b0493505050505b919050565b4290565b60008060008460020b8660020b81612f7257fe5b05905060008660020b128015612f9957508460020b8660020b81612f9257fe5b0760020b15155b15612fa357600019015b831561301857600080612fb583614766565b600182810b810b600090815260208d9052604090205460ff83169190911b80016000190190811680151597509294509092509085612ffa57888360ff1686030261300d565b8861300482614778565b840360ff168603025b965050505050613096565b60008061302783600101614766565b91509150600060018260ff166001901b031990506000818b60008660010b60010b815260200190815260200160002054169050806000141595508561307957888360ff0360ff1686600101010261308f565b888361308483614812565b0360ff168660010101025b9650505050505b5094509492505050565b60008060008360020b126130b7578260020b6130bf565b8260020b6000035b9050620d89e88111156130fd576040805162461bcd60e51b81526020600482015260016024820152601560fa1b604482015290519081900360640190fd5b60006001821661311157600160801b613123565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b03169050600282161561314d576ffff97272373d413259a46990580e213a0260801c5b600482161561316c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561318b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156131aa576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156131c9576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156131e8576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613207576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613227576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613247576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613267576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613287576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156132a7576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156132c7576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156132e7576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613307576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613328576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613348576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613367576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613384576b048a170391f7dc42444e8fa20260801c5b60008460020b131561339f57806000198161339b57fe5b0490505b600160201b8106156133b25760016133b5565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061344c5760006134008989620f42400362ffffff16620f4240613625565b905082613419576134148c8c8c60016148fb565b613426565b6134268b8d8c6001614976565b9550858110613437578a9650613446565b6134438c8b8386614a21565b96505b50613496565b816134635761345e8b8b8b6000614976565b613470565b6134708a8c8b60006148fb565b935083886000031061348457899550613496565b6134938b8a8a60000385614a6d565b95505b6001600160a01b038a81169087161482156134f9578080156134b55750815b6134cb576134c6878d8c6001614976565b6134cd565b855b95508080156134da575081155b6134f0576134eb878d8c60006148fb565b6134f2565b845b9450613543565b8080156135035750815b613519576135148c888c60016148fb565b61351b565b855b9550808015613528575081155b61353e576135398c888c6000614976565b613540565b845b94505b8115801561355357508860000385115b1561355f578860000394505b81801561357e57508a6001600160a01b0316876001600160a01b031614155b1561358d5785890393506135aa565b6135a7868962ffffff168a620f42400362ffffff16614460565b93505b50505095509550955095915050565b6000600160ff1b82106135cb57600080fd5b5090565b808203828113156000831215146135e557600080fd5b92915050565b818101828112156000831215146135e557600080fd5b600082158061361c5750508181028183828161361957fe5b04145b6135e557600080fd5b600080806000198587098686029250828110908390030390508061365b576000841161365057600080fd5b5082900490506136ce565b80841161366757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008063ffffffff871661377b576000898661ffff1661ffff81106136f657fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff16151560608301529092508a161461376757613764818a8988614ab9565b90505b80602001518160400151925092505061385b565b8688036000806137908c8c858c8c8c8c614b5c565b91509150816000015163ffffffff168363ffffffff1614156137c257816020015182604001519450945050505061385b565b805163ffffffff848116911614156137ea57806020015181604001519450945050505061385b565b8151815160208085015190840151918390039286039163ffffffff80841692908516910360060b8161381857fe5b05028460200151018263ffffffff168263ffffffff1686604001518660400151036001600160a01b0316028161384a57fe5b048560400151019650965050505050505b97509795505050505050565b600295860b860b60009081526020979097526040909620600181018054909503909455938301805490920390915560038201805463ffffffff600160d81b6001600160a01b03600160381b808504821690960316909402600160381b600160d81b031990921691909117600681810b90960390950b66ffffffffffffff1666ffffffffffffff199095169490941782810485169095039093160263ffffffff60d81b1990931692909217905554600160801b9004600f0b90565b60008082600f0b121561398657826001600160801b03168260000384039150816001600160801b031610613981576040805162461bcd60e51b81526020600482015260026024820152614c5360f01b604482015290519081900360640190fd5b6135e5565b826001600160801b03168284019150816001600160801b031610156135e5576040805162461bcd60e51b81526020600482015260026024820152614c4160f01b604482015290519081900360640190fd5b60006401000276a36001600160a01b03831610801590613a13575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613a48576040805162461bcd60e51b81526020600482015260016024820152602960f91b604482015290519081900360640190fd5b600160201b600160c01b03602083901b166001600160801b03811160071b81811c6001600160401b03811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110613ada57607f810383901c9150613ae4565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c6001603f1b161760c19b909b1c6001603e1b169a909a1760c29990991c6001603d1b169890981760c39790971c6001603c1b169690961760c49590951c6001603b1b169490941760c59390931c6001603a1b169290921760c69190911c600160391b161760c79190911c600160381b161760c89190911c600160371b161760c99190911c600160361b161760ca9190911c600160351b161760cb9190911c600160341b161760cc9190911c600160331b161760cd9190911c600160321b1617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613cb357886001600160a01b0316613c97826130a0565b6001600160a01b03161115613cac5781613cae565b805b613cb5565b815b9998505050505050505050565b6000806000898961ffff1661ffff8110613cd857fe5b60408051608081018252919092015463ffffffff808216808452600160201b8304600690810b810b900b6020850152600160581b83046001600160a01b031694840194909452600160f81b90910460ff161515606083015290925089161415613d47578885925092505061385b565b8461ffff168461ffff16118015613d6857506001850361ffff168961ffff16145b15613d7557839150613d79565b8491505b8161ffff168960010161ffff1681613d8d57fe5b069250613d9c81898989614ab9565b8a8461ffff1661ffff8110613dad57fe5b825191018054602084015160408501516060909501511515600160f81b026001600160f81b036001600160a01b03909616600160581b02600160581b600160f81b031960069390930b66ffffffffffffff16600160201b0266ffffffffffffff60201b1963ffffffff90971663ffffffff199095169490941795909516929092171692909217929092161790555097509795505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1781529251825160009485949389169392918291908083835b60208310613ec35780518252601f199092019160209182019101613ea4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114613f25576040519150601f19603f3d011682016040523d82523d6000602084013e613f2a565b606091505b5091509150818015613f58575080511580613f585750808060200190516020811015613f5557600080fd5b50515b613f8e576040805162461bcd60e51b81526020600482015260026024820152612a2360f11b604482015290519081900360640190fd5b5050505050565b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083835b6020831061402e5780518252601f19909201916020918201910161400f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461408e576040519150601f19603f3d011682016040523d82523d6000602084013e614093565b606091505b50915091508180156140a757506020815110155b6140b057600080fd5b8080602001905160208110156140c557600080fd5b50519250505090565b808201828110156135e557600080fd5b604080513060248083019190915282518083039091018152604490910182526020810180516001600160e01b03166370a0823160e01b17815291518151600093849384936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693919290918291908083836020831061402e5780518252601f19909201916020918201910161400f565b6000808361ffff16116141b4576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b8261ffff168261ffff16116141ca5750816136ce565b825b8261ffff168161ffff161015614210576001858261ffff1661ffff81106141ef57fe5b01805463ffffffff191663ffffffff929092169190911790556001016141cc565b50909392505050565b80600f81900b8114612f5557600080fd5b600080600061424184602001518560400151614651565b6040805160e0810182526000546001600160a01b0381168252600160a01b8104600290810b810b900b602080840182905261ffff600160b81b8404811685870152600160c81b84048116606080870191909152600160d81b90940416608085015260015463ffffffff811660a086015260ff600160201b90910416151560c0850152885190890151948901519289015193946142e39491939092909190614d56565b93508460600151600f0b60001461445857846020015160020b816020015160020b12156143385761433161431a86602001516130a0565b61432787604001516130a0565b8760600151614f0b565b9250614458565b846040015160020b816020015160020b121561442e5760055460408201516001600160801b039091169061438a9061436e612f5a565b6020850151606086015160808701516009949392918791613cc2565b6000805461ffff60c81b1916600160c81b61ffff938416021761ffff60b81b1916600160b81b9390921692909202179055815160408701516143da91906143d0906130a0565b8860600151614f0b565b93506143f86143ec87602001516130a0565b83516060890151614f4f565b9250614408818760600151613921565b600580546001600160801b0319166001600160801b039290921691909117905550614458565b61445561443e86602001516130a0565b61444b87604001516130a0565b8760600151614f4f565b91505b509193909250565b600061446d848484613625565b90506000828061447957fe5b84860911156136ce57600019811061449057600080fd5b6001019392505050565b6040805160609490941b6001600160601b031916602080860191909152600293840b60e890811b60348701529290930b90911b60378401528051808403601a018152603a90930181528251928201929092206000908152929052902090565b60608060008361ffff1611614539576040805162461bcd60e51b81526020600482015260016024820152604960f81b604482015290519081900360640190fd5b86516001600160401b038111801561455057600080fd5b5060405190808252806020026020018201604052801561457a578160200160208202803683370190505b50915086516001600160401b038111801561459457600080fd5b506040519080825280602002602001820160405280156145be578160200160208202803683370190505b50905060005b8751811015614644576145ef8a8a8a84815181106145de57fe5b60200260200101518a8a8a8a6136d5565b8483815181106145fb57fe5b6020026020010184848151811061460e57fe5b60200260200101826001600160a01b03166001600160a01b03168152508260060b60060b815250505080806001019150506145c4565b5097509795505050505050565b8060020b8260020b12614691576040805162461bcd60e51b8152602060048201526003602482015262544c5560e81b604482015290519081900360640190fd5b620d89e719600283900b12156146d4576040805162461bcd60e51b8152602060048201526003602482015262544c4d60e81b604482015290519081900360640190fd5b620d89e8600282900b1315614716576040805162461bcd60e51b815260206004820152600360248201526254554d60e81b604482015290519081900360640190fd5b5050565b6040805160808101825263ffffffff9283168082526000602083018190529282019290925260016060909101819052835463ffffffff1916909117909116600160f81b17909155908190565b60020b600881901d9161010090910790565b600080821161478657600080fd5b600160801b821061479957608091821c91015b600160401b82106147ac57604091821c91015b600160201b82106147bf57602091821c91015b6201000082106147d157601091821c91015b61010082106147e257600891821c91015b601082106147f257600491821c91015b6004821061480257600291821c91015b60028210612f5557600101919050565b600080821161482057600080fd5b5060ff6001600160801b0382161561483b57607f1901614843565b608082901c91505b6001600160401b0382161561485b57603f1901614863565b604082901c91505b63ffffffff82161561487857601f1901614880565b602082901c91505b61ffff82161561489357600f190161489b565b601082901c91505b60ff8216156148ad57600719016148b5565b600882901c91505b600f8216156148c757600319016148cf565b600482901c91505b60038216156148e157600119016148e9565b600282901c91505b6001821615612f555760001901919050565b6000836001600160a01b0316856001600160a01b0316111561491b579293925b8161494857614943836001600160801b03168686036001600160a01b0316600160601b613625565b61496b565b61496b836001600160801b03168686036001600160a01b0316600160601b614460565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115614996579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166149c057600080fd5b836149f057866001600160a01b03166149e38383896001600160a01b0316613625565b816149ea57fe5b04614a16565b614a16614a078383896001600160a01b0316614460565b886001600160a01b0316614f7e565b979650505050505050565b600080856001600160a01b031611614a3857600080fd5b6000846001600160801b031611614a4e57600080fd5b81614a60576149438585856001614f89565b61496b858585600161506a565b600080856001600160a01b031611614a8457600080fd5b6000846001600160801b031611614a9a57600080fd5b81614aac57614943858585600061506a565b61496b8585856000614f89565b614ac161588a565b600085600001518503905060405180608001604052808663ffffffff1681526020018263ffffffff168660020b0288602001510160060b81526020016000856001600160801b031611614b15576001614b17565b845b6001600160801b031663ffffffff60801b608085901b1681614b3557fe5b048860400151016001600160a01b0316815260200160011515815250915050949350505050565b614b6461588a565b614b6c61588a565b888561ffff1661ffff8110614b7d57fe5b60408051608081018252919092015463ffffffff8116808352600160201b8204600690810b810b900b6020840152600160581b82046001600160a01b031693830193909352600160f81b900460ff16151560608201529250614be19089908961514d565b15614c19578663ffffffff16826000015163ffffffff161415614c035761385b565b81614c1083898988614ab9565b9150915061385b565b888361ffff168660010161ffff1681614c2e57fe5b0661ffff1661ffff8110614c3e57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b90910416151560608201819052909250614cf357604080516080810182528a5463ffffffff81168252600160201b8104600690810b810b900b6020830152600160581b81046001600160a01b031692820192909252600160f81b90910460ff161515606082015291505b614d028883600001518961514d565b614d39576040805162461bcd60e51b815260206004820152600360248201526213d31160ea1b604482015290519081900360640190fd5b614d46898989888761520e565b9150915097509795505050505050565b6000614d65600887878761449a565b60025460035491925090600080600f87900b15614eab576000614d86612f5a565b6000805460055492935090918291614dd09160099186918591600160a01b810460020b9161ffff600160b81b83048116926001600160801b0390921691600160c81b9004166136d5565b9092509050614e0a60068d8b8d8b8b87898b60007f00000000000000000000000000000000000000000000000000000000000000006153ac565b9450614e4160068c8b8d8b8b87898b60017f00000000000000000000000000000000000000000000000000000000000000006153ac565b93508415614e7557614e7560078d7f0000000000000000000000000000000000000000000000000000000000000000615565565b8315614ea757614ea760078c7f0000000000000000000000000000000000000000000000000000000000000000615565565b5050505b600080614ebd60068c8c8b8a8a6155cb565b9092509050614ece878a8484615677565b600089600f0b1215614efc578315614eeb57614eeb60068c61580c565b8215614efc57614efc60068b61580c565b50505050505095945050505050565b60008082600f0b12614f3157614f2c614f278585856001614976565b6135b9565b61496e565b614f44614f278585856000036000614976565b600003949350505050565b60008082600f0b12614f6b57614f2c614f2785858560016148fb565b614f44614f2785858560000360006148fb565b808204910615150190565b60008115614ffc5760006001600160a01b03841115614fbf57614fba84600160601b876001600160801b0316613625565b614fd7565b6001600160801b038516606085901b81614fd557fe5b045b9050614ff4614fef6001600160a01b038816836140ce565b615838565b91505061496e565b60006001600160a01b0384111561502a5761502584600160601b876001600160801b0316614460565b615041565b615041606085901b6001600160801b038716614f7e565b905080866001600160a01b03161161505857600080fd5b6001600160a01b03861603905061496e565b60008261507857508361496e565b600160601b600160e01b03606085901b168215615106576001600160a01b038616848102908582816150a657fe5b0414156150d7578181018281106150d5576150cb83896001600160a01b031683614460565b935050505061496e565b505b6150fd826150f8878a6001600160a01b031686816150f157fe5b04906140ce565b614f7e565b9250505061496e565b6001600160a01b0386168481029085828161511d57fe5b0414801561512a57508082115b61513357600080fd5b8082036150cb614fef846001600160a01b038b1684614460565b60008363ffffffff168363ffffffff161115801561517757508363ffffffff168263ffffffff1611155b15615193578163ffffffff168363ffffffff16111590506136ce565b60008463ffffffff168463ffffffff16116151ba578363ffffffff16600160201b016151c2565b8363ffffffff165b64ffffffffff16905060008563ffffffff168463ffffffff16116151f2578363ffffffff16600160201b016151fa565b8363ffffffff165b64ffffffffff169091111595945050505050565b61521661588a565b61521e61588a565b60008361ffff168560010161ffff168161523457fe5b0661ffff169050600060018561ffff16830103905060005b506002818301048961ffff8716828161526157fe5b0661ffff811061526d57fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b909104161515606082018190529095506152d75780600101925061524c565b898661ffff1682600101816152e857fe5b0661ffff81106152f457fe5b60408051608081018252929091015463ffffffff81168352600160201b8104600690810b810b900b60208401526001600160a01b03600160581b8204169183019190915260ff600160f81b9091041615156060820152855190945060009061535e908b908b61514d565b905080801561537757506153778a8a876000015161514d565b15615382575061539f565b8061539257600182039250615399565b8160010193505b5061524c565b5050509550959350505050565b60028a810b900b600090815260208c90526040812080546001600160801b0316826153d7828d613921565b9050846001600160801b0316816001600160801b03161115615425576040805162461bcd60e51b81526020600482015260026024820152614c4f60f01b604482015290519081900360640190fd5b6001600160801b0382811615908216158114159450156154ca578c60020b8e60020b136154b257600183018b9055600283018a9055600383018054600160381b600160d81b031916600160381b6001600160a01b038c16021766ffffffffffffff191666ffffffffffffff60068b900b161763ffffffff60d81b1916600160d81b63ffffffff8a16021790555b6003830180546001600160f81b0316600160f81b1790555b82546001600160801b0319166001600160801b0382161783558561551357825461550e9061550990600160801b9004600f90810b810b908f900b6135eb565b614219565b615534565b82546155349061550990600160801b9004600f90810b810b908f900b6135cf565b8354600f9190910b6001600160801b03908116600160801b0291161790925550909c9b505050505050505050505050565b8060020b8260020b8161557457fe5b0760020b1561558257600080fd5b60008061559d8360020b8560020b8161559757fe5b05614766565b600191820b820b60009081526020979097526040909620805460ff9097169190911b90951890945550505050565b600285810b80820b60009081526020899052604080822088850b850b83529082209193849391929184918291908a900b1261561157505060018201546002830154615624565b8360010154880391508360020154870390505b6000808b60020b8b60020b121561564657505060018301546002840154615659565b84600101548a0391508460020154890390505b92909803979097039b96909503949094039850939650505050505050565b6040805160a08101825285546001600160801b0390811682526001870154602083015260028701549282019290925260038601548083166060830152600160801b900490911660808201526000600f85900b6157165781516001600160801b031661570e576040805162461bcd60e51b815260206004820152600260248201526104e560f41b604482015290519081900360640190fd5b508051615725565b81516157229086613921565b90505b60006157498360200151860384600001516001600160801b0316600160801b613625565b9050600061576f8460400151860385600001516001600160801b0316600160801b613625565b905086600f0b6000146157965787546001600160801b0319166001600160801b0384161788555b60018801869055600288018590556001600160801b0382161515806157c457506000816001600160801b0316115b15615802576003880180546001600160801b031981166001600160801b039182168501821617808216600160801b9182900483168501909216021790555b5050505050505050565b600290810b810b6000908152602092909252604082208281556001810183905590810182905560030155565b806001600160a01b0381168114612f5557600080fd5b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915290565b6040805160808101825260008082526020820181905291810182905260608101919091529056fea164736f6c6343000706000a","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x154 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x128ACB08 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1AD8B03B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x252C09D7 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x32148F67 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x46141319 EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x490E6CBC EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x4F1EB3D8 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0x540D4918 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x70CF754A EQ PUSH2 0x571 JUMPI DUP1 PUSH4 0x85B66729 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x883BDBFD EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0xA34123A7 EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0xA38807F2 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0xB0D0D211 EQ PUSH2 0x752 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x77D JUMPI DUP1 PUSH4 0xCC7E7FA2 EQ PUSH2 0x785 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x7AB JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0xF3058399 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xF637731D EQ PUSH2 0x87C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFFFF AND PUSH2 0x1631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x307 PUSH2 0x1723 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP9 AND DUP9 MSTORE PUSH1 0x2 SWAP7 SWAP1 SWAP7 SIGNEXTEND PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0xFFFF SWAP5 DUP6 AND DUP8 DUP8 ADD MSTORE SWAP3 DUP5 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0xA0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 PUSH1 0x40 DUP4 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x60 DUP3 ADD CALLDATALOAD AND SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x403 PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1A3C JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x60 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x80 ADD CALLDATALOAD AND PUSH2 0x1E83 JUMP JUMPDEST PUSH2 0x50D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 SIGNEXTEND PUSH2 0x20DE JUMP JUMPDEST PUSH2 0x161 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x232 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 ADD CALLDATALOAD AND PUSH2 0x2125 JUMP JUMPDEST PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x668 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x650 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x68F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x721 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 ADD CALLDATALOAD SWAP1 SIGNEXTEND PUSH2 0x2621 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 SWAP5 SWAP1 SWAP5 SIGNEXTEND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH4 0xFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x2A31 JUMP JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A55 JUMP JUMPDEST PUSH2 0x7B3 PUSH2 0x2B77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x2B9B JUMP JUMPDEST PUSH2 0x7DA PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH3 0xFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x403 PUSH2 0x2BE3 JUMP JUMPDEST PUSH2 0x81A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0x2BE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP10 AND DUP10 MSTORE PUSH1 0xF SWAP8 SWAP1 SWAP8 SIGNEXTEND PUSH1 0x20 DUP10 ADD MSTORE DUP8 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP8 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x100 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C55 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH2 0x900 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4153 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP2 DIV DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x9B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH2 0xA03 JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0x9FE JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND LT JUMPDEST PUSH2 0xA35 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP1 ISZERO PUSH2 0xA35 JUMPI POP PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GT JUMPDEST PUSH2 0xA6C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x14D413 PUSH1 0xEA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP1 DUP11 PUSH2 0xAA1 JUMPI PUSH1 0x10 DUP5 PUSH1 0xA0 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH2 0xAAB JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD MLOAD PUSH2 0xFFFF AND JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH2 0xACF PUSH2 0x2F5A JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE PUSH3 0x10008 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB75 JUMPI PUSH3 0x10008 SLOAD PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP2 MLOAD PUSH4 0x10A537F1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x214A6FE2 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 DUP1 DUP10 SGT SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP12 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP13 PUSH2 0xBC3 JUMPI PUSH1 0x3 SLOAD PUSH2 0xBC7 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP SWAP1 POP JUMPDEST DUP1 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC16 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1085 JUMPI PUSH2 0xC23 PUSH2 0x584E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xC66 SWAP1 PUSH1 0x7 SWAP1 PUSH32 0x0 DUP16 PUSH2 0x2F5E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH3 0xD89E7 NOT SWAP2 SIGNEXTEND SLT ISZERO PUSH2 0xC97 JUMPI PUSH3 0xD89E7 NOT PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH3 0xD89E8 PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND SGT ISZERO PUSH2 0xCB6 JUMPI PUSH3 0xD89E8 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0xCC3 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xD54 SWAP1 DUP14 PUSH2 0xCFD JUMPI DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0xD17 JUMP JUMPDEST DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT JUMPDEST PUSH2 0xD25 JUMPI DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xD27 JUMP JUMPDEST DUP12 JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD DUP6 MLOAD PUSH32 0x0 PUSH2 0x33C7 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE DUP3 ISZERO PUSH2 0xDB6 JUMPI PUSH2 0xD8A DUP2 PUSH1 0xC0 ADD MLOAD DUP3 PUSH1 0x80 ADD MLOAD ADD PUSH2 0x35B9 JUMP JUMPDEST DUP3 MLOAD SUB DUP3 MSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0xDAC SWAP1 PUSH2 0xDA1 SWAP1 PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH2 0x35CF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0xDC3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH2 0x35B9 JUMP JUMPDEST DUP3 MLOAD ADD DUP3 MSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0xDEB SWAP2 PUSH2 0xDE0 SWAP2 ADD PUSH2 0x35B9 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 PUSH2 0x35EB JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE JUMPDEST DUP4 MLOAD PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0xE51 JUMPI PUSH1 0x0 PUSH2 0x2710 PUSH2 0xE24 DUP7 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP5 PUSH1 0xC0 ADD MLOAD PUSH2 0x3601 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0xE2B JUMPI INVALID JUMPDEST PUSH1 0xC0 DUP5 ADD DUP1 MLOAD SWAP3 SWAP1 SWAP2 DIV SWAP2 DUP3 SWAP1 SUB SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD DUP1 MLOAD SWAP1 SWAP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 MSTORE POP JUMPDEST PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0xE90 JUMPI PUSH2 0xE84 DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x80 SHL DUP5 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD DUP1 MLOAD SWAP1 SWAP2 ADD SWAP1 MSTORE JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1044 JUMPI DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x101B JUMPI DUP4 PUSH1 0xA0 ADD MLOAD PUSH2 0xF1A JUMPI PUSH2 0xEF8 DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x0 DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD PUSH1 0x9 PUSH2 0x36D5 SWAP1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP6 ADD MSTORE JUMPDEST PUSH3 0x10008 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xFA5 JUMPI PUSH3 0x10008 SLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA4984633 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE DUP15 ISZERO ISZERO PUSH1 0x24 DUP4 ADD MSTORE MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA4984633 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xFF1 DUP3 PUSH1 0x20 ADD MLOAD DUP15 PUSH2 0xFBC JUMPI PUSH1 0x2 SLOAD PUSH2 0xFC2 JUMP JUMPDEST DUP5 PUSH1 0x80 ADD MLOAD JUMPDEST DUP16 PUSH2 0xFD1 JUMPI DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x40 DUP12 ADD MLOAD PUSH1 0x6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3867 JUMP JUMPDEST SWAP1 POP DUP13 ISZERO PUSH2 0xFFD JUMPI PUSH1 0x0 SUB JUMPDEST PUSH2 0x100B DUP4 PUSH1 0xC0 ADD MLOAD DUP3 PUSH2 0x3921 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE POP JUMPDEST DUP12 PUSH2 0x102A JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD MLOAD SUB JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x107F JUMP JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x107F JUMPI PUSH2 0x1072 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x39D7 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE JUMPDEST POP PUSH2 0xBF0 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x2 SIGNEXTEND EQ PUSH2 0x1153 JUMPI PUSH1 0x0 DUP1 PUSH2 0x10D3 DUP7 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD DUP12 PUSH1 0x80 ADD MLOAD PUSH1 0x9 PUSH2 0x3CC2 SWAP1 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xC8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL PUSH2 0xFFFF SWAP6 DUP7 AND MUL OR PUSH2 0xFFFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL SWAP6 SWAP1 SWAP5 AND SWAP5 SWAP1 SWAP5 MUL SWAP3 SWAP1 SWAP3 OR PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH3 0xFFFFFF PUSH1 0x2 SWAP5 SWAP1 SWAP5 SIGNEXTEND SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE POP PUSH2 0x1178 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND EQ PUSH2 0x11BE JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 DUP13 ISZERO PUSH2 0x1218 JUMPI PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0x120C JUMPI PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP1 SWAP4 ADD AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0xA0 ADD MLOAD SWAP2 POP PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND ISZERO PUSH2 0x125E JUMPI PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP4 SWAP1 DIV DUP3 AND SWAP1 SWAP5 ADD AND MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD JUMPDEST DUP4 ISZERO ISZERO DUP14 ISZERO ISZERO EQ PUSH2 0x127E JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD DUP14 SUB PUSH2 0x128B JUMP JUMPDEST DUP3 PUSH1 0x0 ADD MLOAD DUP13 SUB DUP4 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP1 SWAP9 POP SWAP7 POP DUP13 ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP8 SLT ISZERO PUSH2 0x12CD JUMPI PUSH2 0x12CD PUSH32 0x0 DUP16 DUP10 PUSH1 0x0 SUB PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D7 PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCE41B35A DUP11 DUP11 DUP15 DUP15 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x137B PUSH2 0x3F95 JUMP JUMPDEST PUSH2 0x1385 DUP3 DUP12 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x13BE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x494941 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x0 DUP9 SLT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13FB PUSH32 0x0 DUP16 DUP11 PUSH1 0x0 SUB PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1405 PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCE41B35A DUP11 DUP11 DUP15 DUP15 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x14A9 PUSH2 0x40DE JUMP JUMPDEST PUSH2 0x14B3 DUP3 DUP11 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x14EC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x494941 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMPDEST DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x19B47279256B2A23A1665C810C8D55A1758940EE09377D4F8D26497A3577DC83 DUP11 DUP11 DUP8 PUSH1 0x40 ADD MLOAD DUP9 PUSH1 0xC0 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP2 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x9 DUP2 PUSH2 0xFFFF DUP2 LT PUSH2 0x15FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND SWAP2 POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1675 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x169E PUSH1 0x9 DUP4 DUP6 PUSH2 0x4176 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF DUP1 DUP5 AND PUSH1 0x1 PUSH1 0xD8 SHL DUP2 MUL PUSH2 0xFFFF PUSH1 0xD8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE SWAP2 SWAP3 POP DUP4 AND EQ PUSH2 0x170B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0xAC49E518F90A358F652E4400164F05A5D8F7E35E7747279BC3A93DBF584E125A SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SIGNEXTEND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0xC8 SHL DUP2 DIV DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xFFFFFFFF DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND DUP8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x17C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x182F PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1825 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x4219 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND SWAP1 MSTORE PUSH2 0x422A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP DUP2 SWAP4 POP DUP1 SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x1851 JUMPI PUSH2 0x184E PUSH2 0x3F95 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP5 ISZERO PUSH2 0x1862 JUMPI PUSH2 0x185F PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x724FFB81 DUP8 DUP8 DUP12 DUP12 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP7 GT ISZERO PUSH2 0x194F JUMPI PUSH2 0x190D PUSH2 0x3F95 JUMP JUMPDEST PUSH2 0x1917 DUP4 DUP9 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x194F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4D3 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 ISZERO PUSH2 0x199F JUMPI PUSH2 0x195D PUSH2 0x40DE JUMP JUMPDEST PUSH2 0x1967 DUP3 DUP8 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x199F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4D31 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP10 PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP14 DUP12 DUP12 PUSH1 0x40 MLOAD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP1 PUSH2 0x1ACF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B04 DUP7 PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x4460 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B3B DUP7 PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x4460 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B47 PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B53 PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP DUP9 ISZERO PUSH2 0x1B86 JUMPI PUSH2 0x1B86 PUSH32 0x0 DUP12 DUP12 PUSH2 0x3E47 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x1BB7 JUMPI PUSH2 0x1BB7 PUSH32 0x0 DUP12 DUP11 PUSH2 0x3E47 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A9B97F0 DUP6 DUP6 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x1C5B PUSH2 0x3F95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C67 PUSH2 0x40DE JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x1C74 DUP6 DUP9 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x1CAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x463 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1CB7 DUP5 DUP8 PUSH2 0x40CE JUMP JUMPDEST GT ISZERO PUSH2 0x1CEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4631 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 DUP3 SUB DUP4 DUP3 SUB DUP2 ISZERO PUSH2 0x1D78 JUMPI PUSH1 0x1 SLOAD PUSH2 0xFFFF AND PUSH1 0x0 DUP2 ISZERO PUSH2 0x1D1C JUMPI PUSH2 0x2710 PUSH4 0xFFFFFFFF DUP4 AND DUP6 MUL DIV PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x1D52 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP5 ADD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1D6C DUP2 DUP6 SUB PUSH1 0x1 PUSH1 0x80 SHL DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP JUMPDEST DUP1 ISZERO PUSH2 0x1DFD JUMPI PUSH1 0x1 SLOAD PUSH1 0x10 SHR PUSH2 0xFFFF AND PUSH1 0x0 DUP2 ISZERO PUSH2 0x1DA2 JUMPI PUSH2 0x2710 PUSH4 0xFFFFFFFF DUP4 AND DUP5 MUL DIV PUSH2 0x1DA5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP3 AND DUP6 ADD DUP3 AND MUL SWAP2 AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1DF1 DUP2 DUP5 SUB PUSH1 0x1 PUSH1 0x80 SHL DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP POP JUMPDEST DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xBDBDB71D7860376BA52B25A5028BEEA23581364A40522F6BCFB86BB1F2DCA633 DUP16 DUP16 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1ECC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH2 0x1EE8 PUSH1 0x8 CALLER DUP10 DUP10 PUSH2 0x449A JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND GT PUSH2 0x1F09 JUMPI DUP5 PUSH2 0x1F18 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP6 AND GT PUSH2 0x1F40 JUMPI DUP4 PUSH2 0x1F56 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND ISZERO PUSH2 0x1FBB JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP7 SWAP1 SUB DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x1FBB SWAP1 PUSH32 0x0 SWAP1 DUP11 SWAP1 DUP7 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x2021 JUMPI PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP3 AND DUP7 SWAP1 SUB DUP3 AND MUL SWAP2 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x2021 SWAP1 PUSH32 0x0 SWAP1 DUP11 SWAP1 DUP6 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP7 AND PUSH1 0x20 DUP4 ADD MSTORE DUP5 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH1 0x2 DUP9 DUP2 SIGNEXTEND SWAP3 SWAP1 DUP11 SWAP1 SIGNEXTEND SWAP2 CALLER SWAP2 PUSH32 0x70935338E69775456A85DDEF226C395FB668B63FA0115F5F20610B388E6CA9C0 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG4 POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND SWAP4 SWAP2 SWAP3 DUP2 DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x10008 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x216E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x223E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x221A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 DUP6 AND GT PUSH2 0x2263 JUMPI DUP4 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST PUSH1 0x4 SLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP5 AND GT PUSH2 0x2296 JUMPI DUP3 PUSH2 0x22AA JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x232B JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x22D9 JUMPI PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP6 SWAP1 SUB DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x232B SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP6 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x23B1 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV AND EQ ISZERO PUSH2 0x235C JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP1 DUP4 DIV DUP3 AND DUP6 SWAP1 SUB DUP3 AND MUL SWAP2 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x23B1 SWAP1 PUSH32 0x0 SWAP1 DUP8 SWAP1 DUP5 AND PUSH2 0x3E47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP3 CALLER SWAP3 PUSH32 0x596B573906218D3411850B26A6B437D6C4522FDB43D2D2386263F86D50B8B151 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x249A PUSH2 0x242E PUSH2 0x2F5A JUMP JUMPDEST DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD PUSH1 0x5 SLOAD PUSH1 0x9 SWAP7 SWAP6 SWAP5 POP PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV PUSH1 0x2 SIGNEXTEND SWAP4 POP PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP4 DIV DUP2 AND SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV AND PUSH2 0x44F9 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x24EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE CALLER DUP2 MSTORE PUSH1 0x2 DUP8 DUP2 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE DUP7 SWAP1 SIGNEXTEND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x254A SWAP1 PUSH1 0x60 DUP2 ADD PUSH2 0x253D PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP11 AND PUSH2 0x4219 JUMP JUMPDEST PUSH1 0x0 SUB PUSH1 0xF SIGNEXTEND SWAP1 MSTORE PUSH2 0x422A JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP2 PUSH1 0x0 SUB SWAP5 POP DUP1 PUSH1 0x0 SUB SWAP4 POP PUSH1 0x0 DUP6 GT DUP1 PUSH2 0x256B JUMPI POP PUSH1 0x0 DUP5 GT JUMPDEST ISZERO PUSH2 0x25AA JUMPI PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP3 AND DUP1 DUP10 ADD DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP4 DUP5 SWAP1 DIV DUP4 AND DUP10 ADD SWAP1 SWAP3 AND SWAP1 SWAP3 MUL SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x2 DUP10 DUP2 SIGNEXTEND SWAP3 SWAP1 DUP12 SWAP1 SIGNEXTEND SWAP2 CALLER SWAP2 PUSH32 0xC396CD989A39F4459B5FA1AED6A9A8DCDBC45908ACFD67E028CD568DA98982C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG4 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP SWAP1 SWAP5 SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2630 DUP6 DUP6 PUSH2 0x4651 JUMP JUMPDEST PUSH1 0x2 DUP6 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP6 SIGNEXTEND SWAP1 SWAP5 SIGNEXTEND DUP4 MSTORE DUP3 KECCAK256 PUSH1 0x3 DUP5 ADD SLOAD SWAP2 DUP3 SWAP1 SIGNEXTEND SWAP4 PUSH1 0x1 PUSH1 0x38 SHL DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0xD8 SHL DUP3 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x6 DUP2 SWAP1 SIGNEXTEND SWAP9 POP PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 POP PUSH1 0x1 PUSH1 0xD8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP5 POP PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP5 DIV DUP2 AND SWAP6 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP4 DIV DUP6 AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP3 DIV SWAP1 SWAP4 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE SWAP1 SWAP4 POP DUP15 DUP3 SIGNEXTEND SWAP2 SIGNEXTEND SLT ISZERO SWAP1 POP PUSH2 0x277F JUMPI POP SWAP4 SWAP1 SWAP5 SUB SWAP7 POP SWAP1 SUB SWAP4 POP SWAP1 SUB SWAP1 POP PUSH2 0x2802 JUMP JUMPDEST DUP11 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x27F3 JUMPI PUSH1 0x0 PUSH2 0x279B PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x5 SLOAD PUSH1 0x60 DUP7 ADD MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH2 0x27D1 SWAP4 PUSH1 0x9 SWAP4 DUP9 SWAP4 DUP8 SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH2 0x36D5 JUMP JUMPDEST SWAP11 SWAP1 SUB SWAP9 SWAP1 SWAP9 SUB SWAP12 POP POP SWAP5 SWAP1 SWAP7 SUB SWAP3 SWAP1 SWAP3 SUB SWAP7 POP SWAP1 SWAP2 SUB SUB SWAP3 POP PUSH2 0x2802 SWAP2 POP POP JUMP JUMPDEST POP SWAP5 SWAP1 SWAP4 SUB SWAP7 POP SUB SWAP4 POP SWAP1 SUB SWAP1 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x284D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x4C4F4B PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x291D JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x290F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO DUP1 PUSH2 0x2954 JUMPI POP PUSH2 0x3E8 DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x2954 JUMPI POP PUSH2 0xFA0 DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2989 JUMPI POP PUSH4 0xFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0x2989 JUMPI POP PUSH2 0x3E8 DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x2989 JUMPI POP PUSH2 0xFA0 DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST PUSH2 0x2992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH6 0xFFFFFFFF0000 PUSH1 0x10 DUP5 SWAP1 SHL AND DUP5 ADD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH4 0xFFFFFFFF NOT DUP4 AND OR SWAP1 SWAP3 SSTORE AND PUSH32 0xB3159FED3DDFBA67BAE294599EAFE2D0EC98C08BB38E0E5FB87D33154B6E05AA PUSH3 0x10000 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP3 MOD DUP4 AND DUP3 MSTORE PUSH2 0xFFFF PUSH1 0x10 DUP7 SWAP1 SHR AND PUSH1 0x20 DUP4 ADD MSTORE DUP7 DUP4 AND DUP3 DUP3 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND PUSH1 0x1 PUSH1 0x20 SHL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x2B18 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x10008 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0x29983690A85A11696CE8A357993744F8D5A74FDE14653E517CC2F8608A7235E9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND SWAP5 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP4 DIV PUSH1 0xF SIGNEXTEND SWAP4 SWAP2 SWAP3 DUP2 SWAP1 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0x38 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x1 PUSH1 0xD8 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND DUP9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2C98 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4149 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CA3 DUP3 PUSH2 0x39D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2CBB PUSH2 0x2CB3 PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x9 SWAP1 PUSH2 0x471A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP3 MSTORE PUSH1 0x2 DUP9 DUP2 SIGNEXTEND PUSH1 0x20 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE PUSH2 0xFFFF DUP8 DUP2 AND PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 DUP8 AND PUSH1 0x80 DUP7 ADD DUP2 SWAP1 MSTORE PUSH4 0xC800C80 PUSH1 0xA0 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xC0 SWAP1 SWAP8 ADD DUP8 SWAP1 MSTORE DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP6 OR PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP6 SIGNEXTEND DUP5 AND SWAP5 SWAP1 SWAP5 MUL SWAP4 SWAP1 SWAP4 OR PUSH4 0xFFFFFFFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 SWAP2 MUL OR PUSH2 0xFFFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP4 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x20 SHL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND SWAP1 SWAP2 OR PUSH1 0xFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE SWAP2 SWAP4 POP SWAP2 POP PUSH32 0x0 AND PUSH1 0x64 EQ ISZERO PUSH2 0x2DD0 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xCE40CE4 OR SWAP1 SSTORE PUSH2 0x2EA1 JUMP JUMPDEST PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH2 0x1F4 EQ ISZERO PUSH2 0x2E17 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xD480D48 OR SWAP1 SSTORE PUSH2 0x2EA1 JUMP JUMPDEST PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH2 0x9C4 EQ ISZERO PUSH2 0x2E5E JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xC800C80 OR SWAP1 SSTORE PUSH2 0x2EA1 JUMP JUMPDEST PUSH32 0x0 PUSH3 0xFFFFFF AND PUSH2 0x2710 EQ ISZERO PUSH2 0x2EA1 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xC800C80 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x2 DUP6 SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x98636036CB66A9C19A37435EFC1E90142190214E8ABEB821BDBA3F2990DD4C95 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH3 0xD89E7 NOT DUP2 PUSH2 0x2F03 JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND PUSH3 0xD89E8 DUP2 PUSH2 0x2F1A JUMPI INVALID JUMPDEST SDIV MUL SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND DUP4 DUP4 SUB PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2F31 JUMPI INVALID JUMPDEST SDIV PUSH1 0x1 ADD SWAP1 POP DUP1 PUSH3 0xFFFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 AND DUP2 PUSH2 0x2F4E JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2F72 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x2F99 JUMPI POP DUP5 PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2F92 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x2FA3 JUMPI PUSH1 0x0 NOT ADD JUMPDEST DUP4 ISZERO PUSH2 0x3018 JUMPI PUSH1 0x0 DUP1 PUSH2 0x2FB5 DUP4 PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP14 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP4 AND SWAP2 SWAP1 SWAP2 SHL DUP1 ADD PUSH1 0x0 NOT ADD SWAP1 DUP2 AND DUP1 ISZERO ISZERO SWAP8 POP SWAP3 SWAP5 POP SWAP1 SWAP3 POP SWAP1 DUP6 PUSH2 0x2FFA JUMPI DUP9 DUP4 PUSH1 0xFF AND DUP7 SUB MUL PUSH2 0x300D JUMP JUMPDEST DUP9 PUSH2 0x3004 DUP3 PUSH2 0x4778 JUMP JUMPDEST DUP5 SUB PUSH1 0xFF AND DUP7 SUB MUL JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x3096 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3027 DUP4 PUSH1 0x1 ADD PUSH2 0x4766 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SUB NOT SWAP1 POP PUSH1 0x0 DUP2 DUP12 PUSH1 0x0 DUP7 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 POP DUP1 PUSH1 0x0 EQ ISZERO SWAP6 POP DUP6 PUSH2 0x3079 JUMPI DUP9 DUP4 PUSH1 0xFF SUB PUSH1 0xFF AND DUP7 PUSH1 0x1 ADD ADD MUL PUSH2 0x308F JUMP JUMPDEST DUP9 DUP4 PUSH2 0x3084 DUP4 PUSH2 0x4812 JUMP JUMPDEST SUB PUSH1 0xFF AND DUP7 PUSH1 0x1 ADD ADD MUL JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x30B7 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x30BF JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x30FD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x3111 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3123 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x88 SHL SUB AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x314D JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x316C JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x318B JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x31AA JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x31C9 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x31E8 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x3207 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x3227 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3247 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x3267 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x3287 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x32A7 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x32C7 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x32E7 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x3307 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x3328 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x3348 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x3367 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x3384 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x339F JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x339B JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL DUP2 MOD ISZERO PUSH2 0x33B2 JUMPI PUSH1 0x1 PUSH2 0x33B5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP1 DUP11 AND LT ISZERO DUP2 DUP8 SLT DUP1 ISZERO SWAP1 PUSH2 0x344C JUMPI PUSH1 0x0 PUSH2 0x3400 DUP10 DUP10 PUSH3 0xF4240 SUB PUSH3 0xFFFFFF AND PUSH3 0xF4240 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x3419 JUMPI PUSH2 0x3414 DUP13 DUP13 DUP13 PUSH1 0x1 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x3426 JUMP JUMPDEST PUSH2 0x3426 DUP12 DUP14 DUP13 PUSH1 0x1 PUSH2 0x4976 JUMP JUMPDEST SWAP6 POP DUP6 DUP2 LT PUSH2 0x3437 JUMPI DUP11 SWAP7 POP PUSH2 0x3446 JUMP JUMPDEST PUSH2 0x3443 DUP13 DUP12 DUP4 DUP7 PUSH2 0x4A21 JUMP JUMPDEST SWAP7 POP JUMPDEST POP PUSH2 0x3496 JUMP JUMPDEST DUP2 PUSH2 0x3463 JUMPI PUSH2 0x345E DUP12 DUP12 DUP12 PUSH1 0x0 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x3470 JUMP JUMPDEST PUSH2 0x3470 DUP11 DUP13 DUP12 PUSH1 0x0 PUSH2 0x48FB JUMP JUMPDEST SWAP4 POP DUP4 DUP9 PUSH1 0x0 SUB LT PUSH2 0x3484 JUMPI DUP10 SWAP6 POP PUSH2 0x3496 JUMP JUMPDEST PUSH2 0x3493 DUP12 DUP11 DUP11 PUSH1 0x0 SUB DUP6 PUSH2 0x4A6D JUMP JUMPDEST SWAP6 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND SWAP1 DUP8 AND EQ DUP3 ISZERO PUSH2 0x34F9 JUMPI DUP1 DUP1 ISZERO PUSH2 0x34B5 JUMPI POP DUP2 JUMPDEST PUSH2 0x34CB JUMPI PUSH2 0x34C6 DUP8 DUP14 DUP13 PUSH1 0x1 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x34CD JUMP JUMPDEST DUP6 JUMPDEST SWAP6 POP DUP1 DUP1 ISZERO PUSH2 0x34DA JUMPI POP DUP2 ISZERO JUMPDEST PUSH2 0x34F0 JUMPI PUSH2 0x34EB DUP8 DUP14 DUP13 PUSH1 0x0 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x34F2 JUMP JUMPDEST DUP5 JUMPDEST SWAP5 POP PUSH2 0x3543 JUMP JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x3503 JUMPI POP DUP2 JUMPDEST PUSH2 0x3519 JUMPI PUSH2 0x3514 DUP13 DUP9 DUP13 PUSH1 0x1 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x351B JUMP JUMPDEST DUP6 JUMPDEST SWAP6 POP DUP1 DUP1 ISZERO PUSH2 0x3528 JUMPI POP DUP2 ISZERO JUMPDEST PUSH2 0x353E JUMPI PUSH2 0x3539 DUP13 DUP9 DUP13 PUSH1 0x0 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x3540 JUMP JUMPDEST DUP5 JUMPDEST SWAP5 POP JUMPDEST DUP2 ISZERO DUP1 ISZERO PUSH2 0x3553 JUMPI POP DUP9 PUSH1 0x0 SUB DUP6 GT JUMPDEST ISZERO PUSH2 0x355F JUMPI DUP9 PUSH1 0x0 SUB SWAP5 POP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x357E JUMPI POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x358D JUMPI DUP6 DUP10 SUB SWAP4 POP PUSH2 0x35AA JUMP JUMPDEST PUSH2 0x35A7 DUP7 DUP10 PUSH3 0xFFFFFF AND DUP11 PUSH3 0xF4240 SUB PUSH3 0xFFFFFF AND PUSH2 0x4460 JUMP JUMPDEST SWAP4 POP JUMPDEST POP POP POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x35CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0x361C JUMPI POP POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0x3619 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x365B JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x3650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x36CE JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x3667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0xFFFFFFFF DUP8 AND PUSH2 0x377B JUMPI PUSH1 0x0 DUP10 DUP7 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x36F6 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP4 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP11 AND EQ PUSH2 0x3767 JUMPI PUSH2 0x3764 DUP2 DUP11 DUP10 DUP9 PUSH2 0x4AB9 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP SWAP3 POP POP PUSH2 0x385B JUMP JUMPDEST DUP7 DUP9 SUB PUSH1 0x0 DUP1 PUSH2 0x3790 DUP13 DUP13 DUP6 DUP13 DUP13 DUP13 DUP13 PUSH2 0x4B5C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x37C2 JUMPI DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x385B JUMP JUMPDEST DUP1 MLOAD PUSH4 0xFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x37EA JUMPI DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x385B JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP5 ADD MLOAD SWAP2 DUP4 SWAP1 SUB SWAP3 DUP7 SUB SWAP2 PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP3 SWAP1 DUP6 AND SWAP2 SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x3818 JUMPI INVALID JUMPDEST SDIV MUL DUP5 PUSH1 0x20 ADD MLOAD ADD DUP3 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL DUP2 PUSH2 0x384A JUMPI INVALID JUMPDEST DIV DUP6 PUSH1 0x40 ADD MLOAD ADD SWAP7 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SWAP6 DUP7 SIGNEXTEND DUP7 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 SWAP1 SWAP7 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP1 SWAP6 SUB SWAP1 SWAP5 SSTORE SWAP4 DUP4 ADD DUP1 SLOAD SWAP1 SWAP3 SUB SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xD8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x38 SHL DUP1 DUP6 DIV DUP3 AND SWAP1 SWAP7 SUB AND SWAP1 SWAP5 MUL PUSH1 0x1 PUSH1 0x38 SHL PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x6 DUP2 DUP2 SIGNEXTEND SWAP1 SWAP7 SUB SWAP1 SWAP6 SIGNEXTEND PUSH7 0xFFFFFFFFFFFFFF AND PUSH7 0xFFFFFFFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP3 DUP2 DIV DUP6 AND SWAP1 SWAP6 SUB SWAP1 SWAP4 AND MUL PUSH4 0xFFFFFFFF PUSH1 0xD8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x3986 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x0 SUB DUP5 SUB SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x3981 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C53 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x35E5 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 DUP5 ADD SWAP2 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH2 0x35E5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C41 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT DUP1 ISZERO SWAP1 PUSH2 0x3A13 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT JUMPDEST PUSH2 0x3A48 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0xC0 SHL SUB PUSH1 0x20 DUP4 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT PUSH1 0x7 SHL DUP2 DUP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH1 0x6 SHL SWAP1 DUP2 SHR PUSH4 0xFFFFFFFF DUP2 GT PUSH1 0x5 SHL SWAP1 DUP2 SHR PUSH2 0xFFFF DUP2 GT PUSH1 0x4 SHL SWAP1 DUP2 SHR PUSH1 0xFF DUP2 GT PUSH1 0x3 SWAP1 DUP2 SHL SWAP2 DUP3 SHR PUSH1 0xF DUP2 GT PUSH1 0x2 SHL SWAP1 DUP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP3 DUP4 SHR SWAP8 SWAP1 DUP9 GT SWAP7 OR SWAP1 SWAP5 OR SWAP1 SWAP3 OR OR SWAP1 SWAP2 OR OR OR PUSH1 0x80 DUP2 LT PUSH2 0x3ADA JUMPI PUSH1 0x7F DUP2 SUB DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x3AE4 JUMP JUMPDEST DUP1 PUSH1 0x7F SUB DUP4 SWAP1 SHL SWAP2 POP JUMPDEST SWAP1 DUP1 MUL PUSH1 0x7F DUP2 DUP2 SHR PUSH1 0xFF DUP4 DUP2 SHR SWAP2 SWAP1 SWAP2 SHR DUP1 MUL DUP1 DUP4 SHR DUP2 DUP4 SHR SHR DUP1 MUL DUP1 DUP5 SHR DUP2 DUP5 SHR SHR DUP1 MUL DUP1 DUP6 SHR DUP2 DUP6 SHR SHR DUP1 MUL DUP1 DUP7 SHR DUP2 DUP7 SHR SHR DUP1 MUL DUP1 DUP8 SHR DUP2 DUP8 SHR SHR DUP1 MUL DUP1 DUP9 SHR DUP2 DUP9 SHR SHR DUP1 MUL DUP1 DUP10 SHR DUP2 DUP10 SHR SHR DUP1 MUL DUP1 DUP11 SHR DUP2 DUP11 SHR SHR DUP1 MUL DUP1 DUP12 SHR DUP2 DUP12 SHR SHR DUP1 MUL DUP1 DUP13 SHR DUP2 DUP13 SHR SHR DUP1 MUL DUP1 DUP14 SHR DUP2 DUP14 SHR SHR DUP1 MUL DUP1 DUP15 SHR SWAP13 DUP2 SWAP1 SHR SWAP13 SWAP1 SWAP13 SHR DUP1 MUL SWAP13 DUP14 SWAP1 SHR SWAP15 SWAP14 PUSH1 0x7F NOT DUP16 ADD PUSH1 0x40 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x3F SHL AND OR PUSH1 0xC1 SWAP12 SWAP1 SWAP12 SHR PUSH1 0x1 PUSH1 0x3E SHL AND SWAP11 SWAP1 SWAP11 OR PUSH1 0xC2 SWAP10 SWAP1 SWAP10 SHR PUSH1 0x1 PUSH1 0x3D SHL AND SWAP9 SWAP1 SWAP9 OR PUSH1 0xC3 SWAP8 SWAP1 SWAP8 SHR PUSH1 0x1 PUSH1 0x3C SHL AND SWAP7 SWAP1 SWAP7 OR PUSH1 0xC4 SWAP6 SWAP1 SWAP6 SHR PUSH1 0x1 PUSH1 0x3B SHL AND SWAP5 SWAP1 SWAP5 OR PUSH1 0xC5 SWAP4 SWAP1 SWAP4 SHR PUSH1 0x1 PUSH1 0x3A SHL AND SWAP3 SWAP1 SWAP3 OR PUSH1 0xC6 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x39 SHL AND OR PUSH1 0xC7 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x38 SHL AND OR PUSH1 0xC8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x37 SHL AND OR PUSH1 0xC9 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x36 SHL AND OR PUSH1 0xCA SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x35 SHL AND OR PUSH1 0xCB SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x34 SHL AND OR PUSH1 0xCC SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x33 SHL AND OR PUSH1 0xCD SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x32 SHL AND OR PUSH10 0x3627A301D71055774C85 DUP2 MUL PUSH16 0x28F6481AB7F045A5AF012A19D003AA9 NOT DUP2 ADD PUSH1 0x80 SWAP1 DUP2 SAR SWAP1 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP4 ADD SWAP1 SAR PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND EQ PUSH2 0x3CB3 JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C97 DUP3 PUSH2 0x30A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3CAC JUMPI DUP2 PUSH2 0x3CAE JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3CB5 JUMP JUMPDEST DUP2 JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP10 DUP10 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x3CD8 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP4 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP4 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP3 POP DUP10 AND EQ ISZERO PUSH2 0x3D47 JUMPI DUP9 DUP6 SWAP3 POP SWAP3 POP POP PUSH2 0x385B JUMP JUMPDEST DUP5 PUSH2 0xFFFF AND DUP5 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x3D68 JUMPI POP PUSH1 0x1 DUP6 SUB PUSH2 0xFFFF AND DUP10 PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0x3D75 JUMPI DUP4 SWAP2 POP PUSH2 0x3D79 JUMP JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP2 PUSH2 0xFFFF AND DUP10 PUSH1 0x1 ADD PUSH2 0xFFFF AND DUP2 PUSH2 0x3D8D JUMPI INVALID JUMPDEST MOD SWAP3 POP PUSH2 0x3D9C DUP2 DUP10 DUP10 DUP10 PUSH2 0x4AB9 JUMP JUMPDEST DUP11 DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x3DAD JUMPI INVALID JUMPDEST DUP3 MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xF8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x58 SHL MUL PUSH1 0x1 PUSH1 0x58 SHL PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0x6 SWAP4 SWAP1 SWAP4 SIGNEXTEND PUSH7 0xFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x20 SHL MUL PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x20 SHL NOT PUSH4 0xFFFFFFFF SWAP1 SWAP8 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP6 SWAP1 SWAP6 AND SWAP3 SWAP1 SWAP3 OR AND SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 AND OR SWAP1 SSTORE POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP5 DUP6 SWAP5 SWAP4 DUP10 AND SWAP4 SWAP3 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3EC3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3EA4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3F25 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3F2A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x3F58 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x3F58 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD JUMPDEST PUSH2 0x3F8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2A23 PUSH1 0xF1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70A08231 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x402E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x400F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x408E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4093 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x40A7 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST PUSH2 0x40B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x70A08231 PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP2 MLOAD DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 PUSH1 0x20 DUP4 LT PUSH2 0x402E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x400F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0xFFFF AND GT PUSH2 0x41B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0xF8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT PUSH2 0x41CA JUMPI POP DUP2 PUSH2 0x36CE JUMP JUMPDEST DUP3 JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND LT ISZERO PUSH2 0x4210 JUMPI PUSH1 0x1 DUP6 DUP3 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x41EF JUMPI INVALID JUMPDEST ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x41CC JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xF DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x2F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4241 DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x4651 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP5 DIV DUP2 AND DUP6 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0xC8 SHL DUP5 DIV DUP2 AND PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL SWAP1 SWAP5 DIV AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE DUP9 MLOAD SWAP1 DUP10 ADD MLOAD SWAP5 DUP10 ADD MLOAD SWAP3 DUP10 ADD MLOAD SWAP4 SWAP5 PUSH2 0x42E3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x4D56 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ PUSH2 0x4458 JUMPI DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x4338 JUMPI PUSH2 0x4331 PUSH2 0x431A DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST PUSH2 0x4327 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x4F0B JUMP JUMPDEST SWAP3 POP PUSH2 0x4458 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x442E JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x438A SWAP1 PUSH2 0x436E PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x9 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP2 PUSH2 0x3CC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xC8 SHL NOT AND PUSH1 0x1 PUSH1 0xC8 SHL PUSH2 0xFFFF SWAP4 DUP5 AND MUL OR PUSH2 0xFFFF PUSH1 0xB8 SHL NOT AND PUSH1 0x1 PUSH1 0xB8 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x40 DUP8 ADD MLOAD PUSH2 0x43DA SWAP2 SWAP1 PUSH2 0x43D0 SWAP1 PUSH2 0x30A0 JUMP JUMPDEST DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0x4F0B JUMP JUMPDEST SWAP4 POP PUSH2 0x43F8 PUSH2 0x43EC DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x60 DUP10 ADD MLOAD PUSH2 0x4F4F JUMP JUMPDEST SWAP3 POP PUSH2 0x4408 DUP2 DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x3921 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0x4458 JUMP JUMPDEST PUSH2 0x4455 PUSH2 0x443E DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST PUSH2 0x444B DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x30A0 JUMP JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0x4F4F JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446D DUP5 DUP5 DUP5 PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP1 PUSH2 0x4479 JUMPI INVALID JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x36CE JUMPI PUSH1 0x0 NOT DUP2 LT PUSH2 0x4490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 SIGNEXTEND PUSH1 0xE8 SWAP1 DUP2 SHL PUSH1 0x34 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SIGNEXTEND SWAP1 SWAP2 SHL PUSH1 0x37 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP5 SUB PUSH1 0x1A ADD DUP2 MSTORE PUSH1 0x3A SWAP1 SWAP4 ADD DUP2 MSTORE DUP3 MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 KECCAK256 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP1 MSTORE SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP4 PUSH2 0xFFFF AND GT PUSH2 0x4539 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0xF8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x457A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP1 ISZERO PUSH2 0x4594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x45BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x4644 JUMPI PUSH2 0x45EF DUP11 DUP11 DUP11 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x45DE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP11 DUP11 DUP11 DUP11 PUSH2 0x36D5 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x45FB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x460E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP3 PUSH1 0x6 SIGNEXTEND PUSH1 0x6 SIGNEXTEND DUP2 MSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x45C4 JUMP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x4691 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x544C55 PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E7 NOT PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x46D4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x544C4D PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP3 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x4716 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x54554D PUSH1 0xE8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH4 0xFFFFFFFF SWAP3 DUP4 AND DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x60 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SWAP2 OR SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xF8 SHL OR SWAP1 SWAP2 SSTORE SWAP1 DUP2 SWAP1 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND PUSH1 0x8 DUP2 SWAP1 SAR SWAP2 PUSH2 0x100 SWAP1 SWAP2 SMOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x4799 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT PUSH2 0x47AC JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x1 PUSH1 0x20 SHL DUP3 LT PUSH2 0x47BF JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x47D1 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x47E2 JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x47F2 JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x4802 JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2F55 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x4820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO PUSH2 0x483B JUMPI PUSH1 0x7F NOT ADD PUSH2 0x4843 JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ISZERO PUSH2 0x485B JUMPI PUSH1 0x3F NOT ADD PUSH2 0x4863 JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND ISZERO PUSH2 0x4878 JUMPI PUSH1 0x1F NOT ADD PUSH2 0x4880 JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH2 0xFFFF DUP3 AND ISZERO PUSH2 0x4893 JUMPI PUSH1 0xF NOT ADD PUSH2 0x489B JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x48AD JUMPI PUSH1 0x7 NOT ADD PUSH2 0x48B5 JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0xF DUP3 AND ISZERO PUSH2 0x48C7 JUMPI PUSH1 0x3 NOT ADD PUSH2 0x48CF JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x3 DUP3 AND ISZERO PUSH2 0x48E1 JUMPI PUSH1 0x1 NOT ADD PUSH2 0x48E9 JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x2F55 JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x491B JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 PUSH2 0x4948 JUMPI PUSH2 0x4943 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x496B JUMP JUMPDEST PUSH2 0x496B DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x4460 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x4996 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP7 SUB DUP2 AND SWAP1 DUP8 AND PUSH2 0x49C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH2 0x49F0 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x49E3 DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST DUP2 PUSH2 0x49EA JUMPI INVALID JUMPDEST DIV PUSH2 0x4A16 JUMP JUMPDEST PUSH2 0x4A16 PUSH2 0x4A07 DUP4 DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4460 JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F7E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x4A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x4A4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x4A60 JUMPI PUSH2 0x4943 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x4F89 JUMP JUMPDEST PUSH2 0x496B DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x506A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x4A84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x4A9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH2 0x4AAC JUMPI PUSH2 0x4943 DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x506A JUMP JUMPDEST PUSH2 0x496B DUP6 DUP6 DUP6 PUSH1 0x0 PUSH2 0x4F89 JUMP JUMPDEST PUSH2 0x4AC1 PUSH2 0x588A JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP6 SUB SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP7 PUSH1 0x2 SIGNEXTEND MUL DUP9 PUSH1 0x20 ADD MLOAD ADD PUSH1 0x6 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0x4B15 JUMPI PUSH1 0x1 PUSH2 0x4B17 JUMP JUMPDEST DUP5 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH4 0xFFFFFFFF PUSH1 0x80 SHL PUSH1 0x80 DUP6 SWAP1 SHL AND DUP2 PUSH2 0x4B35 JUMPI INVALID JUMPDEST DIV DUP9 PUSH1 0x40 ADD MLOAD ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4B64 PUSH2 0x588A JUMP JUMPDEST PUSH2 0x4B6C PUSH2 0x588A JUMP JUMPDEST DUP9 DUP6 PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x4B7D JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP2 SWAP1 SWAP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP3 POP PUSH2 0x4BE1 SWAP1 DUP10 SWAP1 DUP10 PUSH2 0x514D JUMP JUMPDEST ISZERO PUSH2 0x4C19 JUMPI DUP7 PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x4C03 JUMPI PUSH2 0x385B JUMP JUMPDEST DUP2 PUSH2 0x4C10 DUP4 DUP10 DUP10 DUP9 PUSH2 0x4AB9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x385B JUMP JUMPDEST DUP9 DUP4 PUSH2 0xFFFF AND DUP7 PUSH1 0x1 ADD PUSH2 0xFFFF AND DUP2 PUSH2 0x4C2E JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF AND PUSH2 0xFFFF DUP2 LT PUSH2 0x4C3E JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP3 POP PUSH2 0x4CF3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP11 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x58 SHL DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP2 POP JUMPDEST PUSH2 0x4D02 DUP9 DUP4 PUSH1 0x0 ADD MLOAD DUP10 PUSH2 0x514D JUMP JUMPDEST PUSH2 0x4D39 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x13D311 PUSH1 0xEA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4D46 DUP10 DUP10 DUP10 DUP9 DUP8 PUSH2 0x520E JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D65 PUSH1 0x8 DUP8 DUP8 DUP8 PUSH2 0x449A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 DUP1 PUSH1 0xF DUP8 SWAP1 SIGNEXTEND ISZERO PUSH2 0x4EAB JUMPI PUSH1 0x0 PUSH2 0x4D86 PUSH2 0x2F5A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x5 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0x4DD0 SWAP2 PUSH1 0x9 SWAP2 DUP7 SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SIGNEXTEND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xB8 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 PUSH1 0xC8 SHL SWAP1 DIV AND PUSH2 0x36D5 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4E0A PUSH1 0x6 DUP14 DUP12 DUP14 DUP12 DUP12 DUP8 DUP10 DUP12 PUSH1 0x0 PUSH32 0x0 PUSH2 0x53AC JUMP JUMPDEST SWAP5 POP PUSH2 0x4E41 PUSH1 0x6 DUP13 DUP12 DUP14 DUP12 DUP12 DUP8 DUP10 DUP12 PUSH1 0x1 PUSH32 0x0 PUSH2 0x53AC JUMP JUMPDEST SWAP4 POP DUP5 ISZERO PUSH2 0x4E75 JUMPI PUSH2 0x4E75 PUSH1 0x7 DUP14 PUSH32 0x0 PUSH2 0x5565 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x4EA7 JUMPI PUSH2 0x4EA7 PUSH1 0x7 DUP13 PUSH32 0x0 PUSH2 0x5565 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EBD PUSH1 0x6 DUP13 DUP13 DUP12 DUP11 DUP11 PUSH2 0x55CB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x4ECE DUP8 DUP11 DUP5 DUP5 PUSH2 0x5677 JUMP JUMPDEST PUSH1 0x0 DUP10 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x4EFC JUMPI DUP4 ISZERO PUSH2 0x4EEB JUMPI PUSH2 0x4EEB PUSH1 0x6 DUP13 PUSH2 0x580C JUMP JUMPDEST DUP3 ISZERO PUSH2 0x4EFC JUMPI PUSH2 0x4EFC PUSH1 0x6 DUP12 PUSH2 0x580C JUMP JUMPDEST POP POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x4F31 JUMPI PUSH2 0x4F2C PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x4976 JUMP JUMPDEST PUSH2 0x35B9 JUMP JUMPDEST PUSH2 0x496E JUMP JUMPDEST PUSH2 0x4F44 PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x0 SUB PUSH1 0x0 PUSH2 0x4976 JUMP JUMPDEST PUSH1 0x0 SUB SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x4F6B JUMPI PUSH2 0x4F2C PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x48FB JUMP JUMPDEST PUSH2 0x4F44 PUSH2 0x4F27 DUP6 DUP6 DUP6 PUSH1 0x0 SUB PUSH1 0x0 PUSH2 0x48FB JUMP JUMPDEST DUP1 DUP3 DIV SWAP2 MOD ISZERO ISZERO ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x4FFC JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 GT ISZERO PUSH2 0x4FBF JUMPI PUSH2 0x4FBA DUP5 PUSH1 0x1 PUSH1 0x60 SHL DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x3625 JUMP JUMPDEST PUSH2 0x4FD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND PUSH1 0x60 DUP6 SWAP1 SHL DUP2 PUSH2 0x4FD5 JUMPI INVALID JUMPDEST DIV JUMPDEST SWAP1 POP PUSH2 0x4FF4 PUSH2 0x4FEF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 PUSH2 0x40CE JUMP JUMPDEST PUSH2 0x5838 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x496E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 GT ISZERO PUSH2 0x502A JUMPI PUSH2 0x5025 DUP5 PUSH1 0x1 PUSH1 0x60 SHL DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x4460 JUMP JUMPDEST PUSH2 0x5041 JUMP JUMPDEST PUSH2 0x5041 PUSH1 0x60 DUP6 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH2 0x4F7E JUMP JUMPDEST SWAP1 POP DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x5058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SUB SWAP1 POP PUSH2 0x496E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5078 JUMPI POP DUP4 PUSH2 0x496E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x60 DUP6 SWAP1 SHL AND DUP3 ISZERO PUSH2 0x5106 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DUP2 PUSH2 0x50A6 JUMPI INVALID JUMPDEST DIV EQ ISZERO PUSH2 0x50D7 JUMPI DUP2 DUP2 ADD DUP3 DUP2 LT PUSH2 0x50D5 JUMPI PUSH2 0x50CB DUP4 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x4460 JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x496E JUMP JUMPDEST POP JUMPDEST PUSH2 0x50FD DUP3 PUSH2 0x50F8 DUP8 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP2 PUSH2 0x50F1 JUMPI INVALID JUMPDEST DIV SWAP1 PUSH2 0x40CE JUMP JUMPDEST PUSH2 0x4F7E JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x496E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 DUP2 MUL SWAP1 DUP6 DUP3 DUP2 PUSH2 0x511D JUMPI INVALID JUMPDEST DIV EQ DUP1 ISZERO PUSH2 0x512A JUMPI POP DUP1 DUP3 GT JUMPDEST PUSH2 0x5133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB PUSH2 0x50CB PUSH2 0x4FEF DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 PUSH2 0x4460 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO DUP1 ISZERO PUSH2 0x5177 JUMPI POP DUP4 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x5193 JUMPI DUP2 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO SWAP1 POP PUSH2 0x36CE JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT PUSH2 0x51BA JUMPI DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x20 SHL ADD PUSH2 0x51C2 JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT PUSH2 0x51F2 JUMPI DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x20 SHL ADD PUSH2 0x51FA JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 SWAP2 GT ISZERO SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5216 PUSH2 0x588A JUMP JUMPDEST PUSH2 0x521E PUSH2 0x588A JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0xFFFF AND DUP6 PUSH1 0x1 ADD PUSH2 0xFFFF AND DUP2 PUSH2 0x5234 JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP6 PUSH2 0xFFFF AND DUP4 ADD SUB SWAP1 POP PUSH1 0x0 JUMPDEST POP PUSH1 0x2 DUP2 DUP4 ADD DIV DUP10 PUSH2 0xFFFF DUP8 AND DUP3 DUP2 PUSH2 0x5261 JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF DUP2 LT PUSH2 0x526D JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP6 POP PUSH2 0x52D7 JUMPI DUP1 PUSH1 0x1 ADD SWAP3 POP PUSH2 0x524C JUMP JUMPDEST DUP10 DUP7 PUSH2 0xFFFF AND DUP3 PUSH1 0x1 ADD DUP2 PUSH2 0x52E8 JUMPI INVALID JUMPDEST MOD PUSH2 0xFFFF DUP2 LT PUSH2 0x52F4 JUMPI INVALID JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP2 DIV PUSH1 0x6 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x58 SHL DUP3 DIV AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xF8 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP6 MLOAD SWAP1 SWAP5 POP PUSH1 0x0 SWAP1 PUSH2 0x535E SWAP1 DUP12 SWAP1 DUP12 PUSH2 0x514D JUMP JUMPDEST SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x5377 JUMPI POP PUSH2 0x5377 DUP11 DUP11 DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x514D JUMP JUMPDEST ISZERO PUSH2 0x5382 JUMPI POP PUSH2 0x539F JUMP JUMPDEST DUP1 PUSH2 0x5392 JUMPI PUSH1 0x1 DUP3 SUB SWAP3 POP PUSH2 0x5399 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SWAP4 POP JUMPDEST POP PUSH2 0x524C JUMP JUMPDEST POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP11 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP13 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH2 0x53D7 DUP3 DUP14 PUSH2 0x3921 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x5425 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4C4F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 DUP2 AND ISZERO SWAP1 DUP3 AND ISZERO DUP2 EQ ISZERO SWAP5 POP ISZERO PUSH2 0x54CA JUMPI DUP13 PUSH1 0x2 SIGNEXTEND DUP15 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x54B2 JUMPI PUSH1 0x1 DUP4 ADD DUP12 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD DUP11 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x38 SHL PUSH1 0x1 PUSH1 0xD8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x38 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF NOT AND PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x6 DUP12 SWAP1 SIGNEXTEND AND OR PUSH4 0xFFFFFFFF PUSH1 0xD8 SHL NOT AND PUSH1 0x1 PUSH1 0xD8 SHL PUSH4 0xFFFFFFFF DUP11 AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB AND PUSH1 0x1 PUSH1 0xF8 SHL OR SWAP1 SSTORE JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND OR DUP4 SSTORE DUP6 PUSH2 0x5513 JUMPI DUP3 SLOAD PUSH2 0x550E SWAP1 PUSH2 0x5509 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP16 SWAP1 SIGNEXTEND PUSH2 0x35EB JUMP JUMPDEST PUSH2 0x4219 JUMP JUMPDEST PUSH2 0x5534 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x5534 SWAP1 PUSH2 0x5509 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND SWAP1 DUP16 SWAP1 SIGNEXTEND PUSH2 0x35CF JUMP JUMPDEST DUP4 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP2 AND OR SWAP1 SWAP3 SSTORE POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x5574 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x5582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x559D DUP4 PUSH1 0x2 SIGNEXTEND DUP6 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x5597 JUMPI INVALID JUMPDEST SDIV PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x1 SWAP2 DUP3 SIGNEXTEND DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0x40 SWAP1 SWAP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP2 SHL SWAP1 SWAP6 XOR SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP6 DUP2 SIGNEXTEND DUP1 DUP3 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP10 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP9 DUP6 SIGNEXTEND DUP6 SIGNEXTEND DUP4 MSTORE SWAP1 DUP3 KECCAK256 SWAP2 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 SWAP2 DUP3 SWAP2 SWAP1 DUP11 SWAP1 SIGNEXTEND SLT PUSH2 0x5611 JUMPI POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x5624 JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP9 SUB SWAP2 POP DUP4 PUSH1 0x2 ADD SLOAD DUP8 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 DUP12 PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x5646 JUMPI POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x5659 JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD DUP11 SUB SWAP2 POP DUP5 PUSH1 0x2 ADD SLOAD DUP10 SUB SWAP1 POP JUMPDEST SWAP3 SWAP1 SWAP9 SUB SWAP8 SWAP1 SWAP8 SUB SWAP12 SWAP7 SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 SUB SWAP9 POP SWAP4 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP8 ADD SLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP8 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP7 ADD SLOAD DUP1 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xF DUP6 SWAP1 SIGNEXTEND PUSH2 0x5716 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x570E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x4E5 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH2 0x5725 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x5722 SWAP1 DUP7 PUSH2 0x3921 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x5749 DUP4 PUSH1 0x20 ADD MLOAD DUP7 SUB DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x576F DUP5 PUSH1 0x40 ADD MLOAD DUP7 SUB DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3625 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ PUSH2 0x5796 JUMPI DUP8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 AND OR DUP9 SSTORE JUMPDEST PUSH1 0x1 DUP9 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 DUP9 ADD DUP6 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND ISZERO ISZERO DUP1 PUSH2 0x57C4 JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x5802 JUMPI PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND DUP6 ADD DUP3 AND OR DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 DUP3 SWAP1 DIV DUP4 AND DUP6 ADD SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND DUP2 SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 ADD SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"1021:36739:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1606:40;;;:::i;:::-;;;;-1:-1:-1;;;;;1606:40:1;;;;;;;;;;;;;;24239:9547;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24239:9547:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;24239:9547:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;24239:9547:1;;;;;;;;;;-1:-1:-1;24239:9547:1;;-1:-1:-1;24239:9547:1;-1:-1:-1;24239:9547:1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3448:33;;;:::i;:::-;;;;-1:-1:-1;;;;;3448:33:1;;;;;;;;;;;;;;3356:41;;;:::i;:::-;;;;;-1:-1:-1;;;;;3356:41:1;;;;;;-1:-1:-1;;;;;3356:41:1;;;;;;;;;;;;;;;;3839:54;;;;;;;;;;;;;;;;-1:-1:-1;3839:54:1;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3839:54:1;;;;;;;;;;;;;;;;;;;;;;10124:672;;;;;;;;;;;;;;;;-1:-1:-1;10124:672:1;;;;:::i;:::-;;2949:27;;;:::i;:::-;;;;-1:-1:-1;;;;;2949:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18806:1179;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18806:1179:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18806:1179:1;;;;;;;;;;;;;;;;-1:-1:-1;;;18806:1179:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;18806:1179:1;;;;;;;;;;-1:-1:-1;18806:1179:1;;-1:-1:-1;18806:1179:1;-1:-1:-1;18806:1179:1;:::i;3120:44::-;;;:::i;:::-;;;;;;;;;;;;;;;;33838:2017;;;;;;;;;;;;;;;;-1:-1:-1;;;;;33838:2017:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;33838:2017:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;33838:2017:1;;;;;;;;;;-1:-1:-1;33838:2017:1;;-1:-1:-1;33838:2017:1;-1:-1:-1;33838:2017:1;:::i;20037:1058::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20037:1058:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20037:1058:1;;;;;;;;;;;;:::i;3731:59::-;;;;;;;;;;;;;;;;-1:-1:-1;3731:59:1;;:::i;:::-;;;;-1:-1:-1;;;;;3731:59:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3630:52;;;;;;;;;;;;;;;;-1:-1:-1;3630:52:1;;;;:::i;3927:31::-;;;:::i;1985:53::-;;;:::i;36525:1046::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;36525:1046:1;;;;-1:-1:-1;;;;;36525:1046:1;;;;;;;;;;;;:::i;9581:491::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9581:491:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9581:491:1;;;;;;;;;;-1:-1:-1;9581:491:1;;-1:-1:-1;9581:491:1;-1:-1:-1;9581:491:1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21218:924;;;;;;;;;;;;;;;;-1:-1:-1;21218:924:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21218:924:1;;:::i;6664:2860::-;;;;;;;;;;;;;;;;-1:-1:-1;6664:2860:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6664:2860:1;;;;;;;;;;;;;;;;;;;;;;35912:556;;;;;;;;;;;;;;;;-1:-1:-1;35912:556:1;;;;;;;;;;;:::i;1511:41::-;;;:::i;37579:178::-;;;;;;;;;;;;;;;;-1:-1:-1;37579:178:1;-1:-1:-1;;;;;37579:178:1;;:::i;1886:43::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1700:40;;;:::i;1794:36::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3027:44;;;:::i;3532:49::-;;;;;;;;;;;;;;;;-1:-1:-1;3532:49:1;;;;:::i;:::-;;;;-1:-1:-1;;;;;3532:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3532:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;10905:1217;;;;;;;;;;;;;;;;-1:-1:-1;10905:1217:1;-1:-1:-1;;;;;10905:1217:1;;:::i;1606:40::-;;;:::o;24239:9547::-;24440:14;;24491:20;24483:35;;;;;-1:-1:-1;;;24483:35:1;;;;;;;;;;;;-1:-1:-1;;;24483:35:1;;;;;;;;;;;;;;;24531:31;;;;;;;;:23;:31;-1:-1:-1;;;;;24531:31:1;;;;-1:-1:-1;;;24531:31:1;;;;;;;;;;;;;;;-1:-1:-1;;;24531:31:1;;;;;;;;;;;-1:-1:-1;;;24531:31:1;;;;;;;;-1:-1:-1;;;24531:31:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;24531:31:1;;;;;;;;;;;;24575:35;;;;;-1:-1:-1;;;24575:35:1;;;;;;;;;;;;-1:-1:-1;;;24575:35:1;;;;;;;;;;;;;;;24643:10;:230;;24803:10;:23;;;-1:-1:-1;;;;;24783:43:1;:17;-1:-1:-1;;;;;24783:43:1;;:90;;;;-1:-1:-1;1019:49:28;-1:-1:-1;;;;;24830:43:1;;;24783:90;24643:230;;;24693:10;:23;;;-1:-1:-1;;;;;24673:43:1;:17;-1:-1:-1;;;;;24673:43:1;;:90;;;;-1:-1:-1;837:10:28;-1:-1:-1;;;;;24720:43:1;;;24673:90;24621:283;;;;;-1:-1:-1;;;24621:283:1;;;;;;;;;;;;-1:-1:-1;;;24621:283:1;;;;;;;;;;;;;;;24917:14;:22;;-1:-1:-1;;;;24917:22:1;;;24977:356;;;;;;;;;24934:5;;24977:356;25103:10;:88;;25188:2;25162:10;:22;;;:28;;;;25103:88;;;25117:22;;;;:40;;25103:88;24977:356;;;;25018:9;;-1:-1:-1;;;;;25018:9:1;24977:356;;;;;;25058:17;:15;:17::i;:::-;24977:356;;;;25273:1;24977:356;;;;;;;;;;;;;;;;;25358:6;;24952:381;;-1:-1:-1;;;;;;25358:6:1;25350:29;25346:105;;25394:6;;25418:20;;;;;25394:45;;-1:-1:-1;;;25394:45:1;;;;;;;;;;;;-1:-1:-1;;;;;25394:6:1;;;;:23;;:45;;;;;:6;;:45;;;;;;;;:6;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25346:105;25463:15;25499:1;25481:15;:19;25463:37;;25513:22;25538:367;;;;;;;;25589:15;25538:367;;;;25637:1;25538:367;;;;25667:10;:23;;;-1:-1:-1;;;;;25538:367:1;;;;;25711:10;:15;;;25538:367;;;;;;25762:10;:56;;25798:20;;25762:56;;;25775:20;;25762:56;25538:367;;;;25846:1;-1:-1:-1;;;;;25538:367:1;;;;;25873:5;:20;;;-1:-1:-1;;;;;25538:367:1;;;;25513:392;;26035:4844;26042:30;;:35;;;;:78;;;26103:17;-1:-1:-1;;;;;26081:39:1;:5;:18;;;-1:-1:-1;;;;;26081:39:1;;;26042:78;26035:4844;;;26137:28;;:::i;:::-;26207:18;;;;-1:-1:-1;;;;;26182:43:1;;;26340:10;;;;26278:146;;:10;;26369:11;26399:10;26278:43;:146::i;:::-;26242:182;;26258:16;;;26242:182;;;;;;;26243:13;;;26242:182;;;-1:-1:-1;;26559:33:1;;;26555:220;;;-1:-1:-1;;26613:13:1;;;:33;26555:220;;;26672:13;;;;654:9:28;26672:33:1;;;;;;26668:107;;;654:9:28;26726:13:1;;;:33;26668:107;26863:42;26891:4;:13;;;26863:27;:42::i;:::-;-1:-1:-1;;;;;26839:66:1;:21;;;:66;27155:18;;;;27112:386;;27193:10;:98;;27274:17;-1:-1:-1;;;;;27250:41:1;:4;:21;;;-1:-1:-1;;;;;27250:41:1;;27193:98;;;27230:17;-1:-1:-1;;;;;27206:41:1;:4;:21;;;-1:-1:-1;;;;;27206:41:1;;27193:98;27192:186;;27357:4;:21;;;27192:186;;;27316:17;27192:186;27397:15;;;;27431:30;;27480:3;27112:24;:386::i;:::-;27094:14;;;27042:456;27078:14;;;27042:456;27063:13;;;27042:456;-1:-1:-1;;;;;27042:456:1;27043:18;;;27042:456;27515:440;;;;27584:43;27601:4;:14;;;27585:4;:13;;;:30;27584:41;:43::i;:::-;27550:77;;;;;27698:14;;;;27671:53;;27698:25;;:23;:25::i;:::-;27671:22;;;;;:26;:53::i;:::-;27646:22;;;:78;27515:440;;;27799:25;:4;:14;;;:23;:25::i;:::-;27765:59;;;;;27912:14;;;;27896:13;;;;27868:71;;27895:43;;27896:30;27895:41;:43::i;:::-;27868:22;;;;;:26;:71::i;:::-;27843:22;;;:96;27515:440;28093:17;;:21;;;28089:240;;28135:13;2158:5;28152:37;28171:5;:17;;;28152:37;;:4;:14;;;:18;;:37;;;;:::i;:::-;28151:66;;;;;28236:14;;;:23;;28151:66;;;;28236:23;;;;;;28278:17;;;:35;;;;;-1:-1:-1;;;;;28278:35:1;;;-1:-1:-1;28089:240:1;28391:15;;;;-1:-1:-1;;;;;28391:19:1;;28387:139;;28458:68;28474:4;:14;;;-1:-1:-1;;;28510:5:1;:15;;;-1:-1:-1;;;;;28458:68:1;:15;:68::i;:::-;28429:25;;;:97;;;;;;;28387:139;28625:4;:21;;;-1:-1:-1;;;;;28603:43:1;:5;:18;;;-1:-1:-1;;;;;28603:43:1;;28599:2269;;;28743:4;:16;;;28739:1762;;;28961:5;:31;;;28956:575;;29087:355;29144:5;:20;;;29195:1;29227:10;:15;;;29273:10;:27;;;29331:5;:20;;;29382:10;:33;;;29087:12;:26;;:355;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29021:421:1;29044:39;;;29021:421;;;;;;;29022:20;;;29021:421;29503:4;29469:31;;;:38;28956:575;29567:6;;-1:-1:-1;;;;;29567:6:1;29559:29;29555:129;;29615:6;;29634:13;;;;29615:45;;;-1:-1:-1;;;29615:45:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;29615:6:1;;;;:18;;:45;;;;;:6;;:45;;;;;;;;:6;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29555:129;29708:19;29730:414;29768:4;:13;;;29809:10;:61;;29850:20;;29809:61;;;29822:5;:25;;;29809:61;29899:10;:61;;29935:5;:25;;;29899:61;;;29912:20;;29899:61;29988:39;;;;30054:20;;;;30101;;;;29730:5;;:414;;;29988:39;30054:20;29730:11;:414::i;:::-;29708:436;;30345:10;30341:44;;;30372:13;;30341:44;30428:53;30451:5;:15;;;30468:12;30428:22;:53::i;:::-;-1:-1:-1;;;;;30410:71:1;:15;;;:71;-1:-1:-1;28739:1762:1;30534:10;:46;;30567:4;:13;;;30534:46;;;30563:1;30547:4;:13;;;:17;30534:46;30521:59;;;;;;:10;;;:59;28599:2269;;;30628:4;:22;;;-1:-1:-1;;;;;30606:44:1;:5;:18;;;-1:-1:-1;;;;;30606:44:1;;30602:266;;30805:47;30833:5;:18;;;30805:27;:47::i;:::-;30792:60;;;;;;:10;;;:60;30602:266;26035:4844;;;;30978:10;:15;;;30964:29;;:5;:10;;;:29;;;30960:801;;31011:23;31036:29;31069:299;31106:10;:27;;;31152:5;:20;;;31191:10;:15;;;31225:5;:20;;;31264:10;:33;;;31316:10;:37;;;31069:12;:18;;:299;;;;;;;;;:::i;:::-;31491:18;;;;31528:10;;;;31384:5;31383:246;;-1:-1:-1;;;;31383:246:1;-1:-1:-1;;;31383:246:1;;;;;;-1:-1:-1;;;;31383:246:1;-1:-1:-1;;;31383:246:1;;;;;;;;;;;;-1:-1:-1;;;;31383:246:1;-1:-1:-1;;;31383:246:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31383:246:1;-1:-1:-1;;;;;31383:246:1;;;;;;-1:-1:-1;30960:801:1;;-1:-1:-1;30960:801:1;;31731:18;;;;31710:5;:39;;-1:-1:-1;;;;;;31710:39:1;-1:-1:-1;;;;;31710:39:1;;;;;;;;;30960:801;31844:5;:15;;;-1:-1:-1;;;;;31820:39:1;:5;:20;;;-1:-1:-1;;;;;31820:39:1;;31816:72;;31873:15;;;;31861:9;:27;;-1:-1:-1;;;;;;31861:27:1;-1:-1:-1;;;;;31861:27:1;;;;;;;;;31816:72;31901:26;31942;32158:10;32154:442;;;32208:25;;;;32185:20;:48;32252:17;;;;-1:-1:-1;;;;;32252:21:1;;32248:67;;32298:17;;;;32275:12;:40;;-1:-1:-1;;;;;;32275:40:1;;-1:-1:-1;;;;;32275:40:1;;;;;;;;;;;;;32248:67;32351:5;:17;;;32330:38;;32154:442;;;32424:25;;;;32401:20;:48;32468:17;;;;-1:-1:-1;;;;;32468:21:1;;32464:67;;32514:17;;;;32491:12;:40;;-1:-1:-1;;;;;32491:40:1;;;-1:-1:-1;;;32491:40:1;;;;;;;;;;;;;;;;;32464:67;-1:-1:-1;32567:17:1;;;;32154:442;32643:10;32629:24;;:10;:24;;;:204;;32760:22;;;;32802:30;;32784:48;;32629:204;;;32688:5;:30;;;32670:15;:48;32720:5;:22;;;32629:204;32608:225;;-1:-1:-1;32608:225:1;-1:-1:-1;32895:700:1;;;;32940:1;32930:7;:11;32926:82;;;32943:65;32971:6;32979:9;32999:7;32998:8;;32943:27;:65::i;:::-;33025:22;33050:10;:8;:10::i;:::-;33025:35;;33099:10;-1:-1:-1;;;;;33075:58:1;;33134:7;33143;33152:4;;33075:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33220:10;:8;:10::i;:::-;33180:36;:14;33207:7;33180:18;:36::i;:::-;:50;;33172:66;;;;;-1:-1:-1;;;33172:66:1;;;;;;;;;;;;-1:-1:-1;;;33172:66:1;;;;;;;;;;;;;;;32895:700;;;;33285:1;33275:7;:11;33271:82;;;33288:65;33316:6;33324:9;33344:7;33343:8;;33288:27;:65::i;:::-;33370:22;33395:10;:8;:10::i;:::-;33370:35;;33444:10;-1:-1:-1;;;;;33420:58:1;;33479:7;33488;33497:4;;33420:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33565:10;:8;:10::i;:::-;33525:36;:14;33552:7;33525:18;:36::i;:::-;:50;;33517:66;;;;;-1:-1:-1;;;33517:66:1;;;;;;;;;;;;-1:-1:-1;;;33517:66:1;;;;;;;;;;;;;;;32895:700;;33629:9;-1:-1:-1;;;;;33612:134:1;33617:10;-1:-1:-1;;;;;33612:134:1;;33640:7;33649;33658:5;:18;;;33678:5;:15;;;33695:5;:10;;;33707:18;33727;33612:134;;;;;;;;;;;;;;-1:-1:-1;;;;;33612:134:1;;;;;;-1:-1:-1;;;;;33612:134:1;;;;;;;;;;;;;-1:-1:-1;;;;;33612:134:1;;;;;;-1:-1:-1;;;;;33612:134:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33774:4:1;33757:21;;-1:-1:-1;;;;33757:21:1;-1:-1:-1;;;33757:21:1;;;-1:-1:-1;24239:9547:1;;;;-1:-1:-1;24239:9547:1;;-1:-1:-1;;;;;;;;24239:9547:1:o;3448:33::-;;;-1:-1:-1;;;;;3448:33:1;;:::o;3356:41::-;;;-1:-1:-1;;;;;3356:41:1;;;;-1:-1:-1;;;3356:41:1;;;;:::o;3839:54::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3839:54:1;;;;;-1:-1:-1;;;3839:54:1;;-1:-1:-1;;;;;3839:54:1;;-1:-1:-1;;;3839:54:1;;;;;:::o;10124:672::-;4396:14;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;-1:-1:-1;10308:32:1;;-1:-1:-1;;;10308:32:1;::::1;;;::::0;10407:113:::1;:12;10308:32:::0;10483:26;10407:17:::1;:113::i;:::-;10531:5;:64:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;10531:64:1;::::1;-1:-1:-1::0;;;;10531:64:1;;::::1;::::0;;;::::1;::::0;;;10368:152;;-1:-1:-1;10610:62:1;::::1;;10606:182;;10692:96;::::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;10606:182;-1:-1:-1::0;;4491:4:1;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;-1:-1:-1;10124:672:1:o;2949:27::-;;;;;-1:-1:-1;;;;;2949:27:1;;;-1:-1:-1;;;2949:27:1;;;;;;-1:-1:-1;;;2949:27:1;;;;;-1:-1:-1;;;2949:27:1;;;;;-1:-1:-1;;;2949:27:1;;;;;;;;;;;;-1:-1:-1;;;2949:27:1;;;;;:::o;18806:1179::-;4396:14;;18994:15;;;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;-1:-1:-1;;;;;19047:10:1;::::1;19039:19;;;::::0;::::1;;19072:17;19091::::0;19112:251:::1;19142:210;;;;;;;;19189:9;-1:-1:-1::0;;;;;19142:210:1::1;;;;;19228:9;19142:210;;;;;;19267:9;19142:210;;;;;;19311:25;19318:6;-1:-1:-1::0;;;;;19311:14:1::1;:23;:25::i;:::-;19142:210;;::::0;;19112:15:::1;:251::i;:::-;19069:294;;;;;19394:10;19376:29;;19434:10;19416:29;;19458:22;19491::::0;19538:1:::1;19528:7;:11;19524:44;;;19558:10;:8;:10::i;:::-;19541:27;;19524:44;19583:11:::0;;19579:44:::1;;19613:10;:8;:10::i;:::-;19596:27;;19579:44;19658:10;-1:-1:-1::0;;;;;19634:58:1::1;;19693:7;19702;19711:4;;19634:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;19741:1;19731:7;:11;19727:73;;;19783:10;:8;:10::i;:::-;19752:27;:14:::0;19771:7;19752:18:::1;:27::i;:::-;:41;;19744:56;;;::::0;;-1:-1:-1;;;19744:56:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;19744:56:1;;;;;;;;;;;;;::::1;;19815:11:::0;;19811:73:::1;;19867:10;:8;:10::i;:::-;19836:27;:14:::0;19855:7;19836:18:::1;:27::i;:::-;:41;;19828:56;;;::::0;;-1:-1:-1;;;19828:56:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;19828:56:1;;;;;;;;;;;;;::::1;;19941:9;19902:75;;19930:9;19902:75;;19919:9;-1:-1:-1::0;;;;;19902:75:1::1;;19907:10;19952:6;19960:7;19969;19902:75;;;;-1:-1:-1::0;;;;;19902:75:1::1;;;;;;-1:-1:-1::0;;;;;19902:75:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;4491:4:1;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;-1:-1:-1;18806:1179:1;;;;-1:-1:-1;18806:1179:1;-1:-1:-1;;;;;;18806:1179:1:o;3120:44::-;;;;:::o;33838:2017::-;4396:14;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;34025:9:::1;::::0;-1:-1:-1;;;;;34025:9:1::1;34053:14:::0;34045:28:::1;;;::::0;;-1:-1:-1;;;34045:28:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;34045:28:1;;;;;;;;;;;;;::::1;;34086:12;34101:44;34127:7;34136:3;34101:44;;34141:3;34101:25;:44::i;:::-;34086:59;;34156:12;34171:44;34197:7;34206:3;34171:44;;34211:3;34171:25;:44::i;:::-;34156:59;;34226:22;34251:10;:8;:10::i;:::-;34226:35;;34272:22;34297:10;:8;:10::i;:::-;34272:35:::0;-1:-1:-1;34324:11:1;;34320:72:::1;;34337:55;34365:6;34373:9;34384:7;34337:27;:55::i;:::-;34407:11:::0;;34403:72:::1;;34420:55;34448:6;34456:9;34467:7;34420:27;:55::i;:::-;34513:10;-1:-1:-1::0;;;;;34488:60:1::1;;34549:4;34555;34561;;34488:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;34579:21;34603:10;:8;:10::i;:::-;34579:34;;34624:21;34648:10;:8;:10::i;:::-;34624:34:::0;-1:-1:-1;34707:13:1;34679:24:::1;:14:::0;34698:4;34679:18:::1;:24::i;:::-;:41;;34671:56;;;::::0;;-1:-1:-1;;;34671:56:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;34671:56:1;;;;;;;;;;;;;::::1;;34774:13:::0;34746:24:::1;:14:::0;34765:4;34746:18:::1;:24::i;:::-;:41;;34738:56;;;::::0;;-1:-1:-1;;;34738:56:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;34738:56:1;;;;;;;;;;;;;::::1;;34912:30:::0;;::::1;34969::::0;;::::1;35016:9:::0;;35012:380:::1;;35064:17;::::0;:35;;35042:19:::1;35130:17:::0;;:73:::1;;2158:5;35155:20;::::0;::::1;::::0;::::1;35154:49;35130:73;;;35150:1;35130:73;35114:89:::0;-1:-1:-1;;;;;;35222:18:1;::::1;::::0;35218:61:::1;;35242:12;:37:::0;;-1:-1:-1;;;;;35242:37:1;;::::1;::::0;::::1;;-1:-1:-1::0;;;;;;35242:37:1;;::::1;;::::0;;35218:61:::1;35318:62;35342:5;35334;:13;-1:-1:-1::0;;;35369:10:1::1;-1:-1:-1::0;;;;;35318:62:1::1;:15;:62::i;:::-;35294:20;:86:::0;;;;::::1;::::0;;-1:-1:-1;;35012:380:1::1;35406:9:::0;;35402:368:::1;;35454:17;::::0;35475:2:::1;35454:23:::0;;;35432:19:::1;35508:17:::0;;:73:::1;;2158:5;35533:20;::::0;::::1;::::0;::::1;35532:49;35508:73;;;35528:1;35508:73;35492:89:::0;-1:-1:-1;;;;;;35600:18:1;::::1;::::0;35596:61:::1;;35620:12;:37:::0;;-1:-1:-1;;;;;;;;35620:37:1;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;;::::0;;35596:61:::1;35696:62;35720:5;35712;:13;-1:-1:-1::0;;;35747:10:1::1;-1:-1:-1::0;;;;;35696:62:1::1;:15;:62::i;:::-;35672:20;:86:::0;;;;::::1;::::0;;-1:-1:-1;;35402:368:1::1;35805:9;-1:-1:-1::0;;;;;35787:60:1::1;35793:10;-1:-1:-1::0;;;;;35787:60:1::1;;35816:7;35825;35834:5;35841;35787:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;4491:4:1;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;-1:-1:-1;;;;;;;;;;;;33838:2017:1:o;20037:1058::-;4396:14;;20243:15;;;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;4446:5;20434:47:::1;:9;20448:10;20460:9:::0;20471;20434:13:::1;:47::i;:::-;20523:20;::::0;::::1;::::0;20401:80;;-1:-1:-1;;;;;;20523:20:1;;::::1;20504:39:::0;;::::1;;:81;;20569:16;20504:81;;;20546:20;::::0;::::1;::::0;-1:-1:-1;;;;;20546:20:1::1;20504:81;20625:20;::::0;::::1;::::0;20494:91;;-1:-1:-1;;;;;;;;;20625:20:1;;::::1;::::0;::::1;20606:39:::0;;::::1;;:81;;20671:16;20606:81;;;20648:20;::::0;::::1;::::0;-1:-1:-1;;;20648:20:1;::::1;-1:-1:-1::0;;;;;20648:20:1::1;20606:81;20596:91:::0;-1:-1:-1;;;;;;20704:11:1;::::1;::::0;20700:145:::1;;20732:20;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;20732:31:1;::::1;-1:-1:-1::0;;;;;20732:31:1;;::::1;::::0;;::::1;::::0;::::1;;::::0;;;20778:55:::1;::::0;20806:6:::1;::::0;20814:9;;20778:55;::::1;:27;:55::i;:::-;-1:-1:-1::0;;;;;20859:11:1;::::1;::::0;20855:145:::1;;20887:20;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;;;20887:31:1;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;20933:55:::1;::::0;20961:6:::1;::::0;20969:9;;20933:55;::::1;:27;:55::i;:::-;21017:70;::::0;;-1:-1:-1;;;;;21017:70:1;::::1;::::0;;-1:-1:-1;;;;;21017:70:1;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;21025:10:::1;::::0;21017:70:::1;::::0;;;;;;;;::::1;-1:-1:-1::0;4491:4:1;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;20037:1058;;;;-1:-1:-1;20037:1058:1;-1:-1:-1;;;;20037:1058:1:o;3731:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3731:59:1;;;;;;;;;;-1:-1:-1;;;3731:59:1;;;;:::o;3630:52::-;;;;;;;;;;;;;:::o;3927:31::-;;;-1:-1:-1;;;;;3927:31:1;;:::o;1985:53::-;;;:::o;36525:1046::-;4396:14;;36713:15;;;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;4662:10:::1;-1:-1:-1::0;;;;;4676:7:1::1;4662:21;;::::0;:74:::1;;;4720:7;-1:-1:-1::0;;;;;4701:33:1::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;4701:35:1;-1:-1:-1;;;;;4687:49:1::1;:10;:49;4662:74;4654:83;;;::::0;::::1;;36787:12:::2;:19:::0;-1:-1:-1;;;;;36787:19:1;;::::2;36768:38:::0;;::::2;;:79;;36831:16;36768:79;;;36809:12;:19:::0;-1:-1:-1;;;;;36809:19:1::2;36768:79;36887:12;:19:::0;36758:89;;-1:-1:-1;;;;;;;;;36887:19:1;;::::2;::::0;::::2;36868:38:::0;;::::2;;:79;;36931:16;36868:79;;;36909:12;:19:::0;-1:-1:-1;;;36909:19:1;::::2;-1:-1:-1::0;;;;;36909:19:1::2;36868:79;36858:89:::0;-1:-1:-1;;;;;;36964:11:1;::::2;::::0;36960:260:::2;;37007:12;:19:::0;-1:-1:-1;;;;;36996:30:1;;::::2;37007:19:::0;::::2;36996:30;36992:45;;;-1:-1:-1::0;;37028:9:1;;;;36992:45:::2;37108:12;:30:::0;;-1:-1:-1;;;;;;37108:30:1;::::2;-1:-1:-1::0;;;;;37108:30:1;;::::2;::::0;;::::2;::::0;::::2;;::::0;;;37153:55:::2;::::0;37181:6:::2;::::0;37189:9;;37153:55;::::2;:27;:55::i;:::-;-1:-1:-1::0;;;;;37234:11:1;::::2;::::0;37230:260:::2;;37277:12;:19:::0;-1:-1:-1;;;;;37266:30:1;;::::2;-1:-1:-1::0;;;37277:19:1;;::::2;;37266:30;37262:45;;;-1:-1:-1::0;;37298:9:1;37262:45:::2;37378:12;:30:::0;;-1:-1:-1;;;;;;;;37378:30:1;;::::2;::::0;::::2;::::0;;::::2;::::0;::::2;;::::0;;::::2;::::0;;;::::2;::::0;;;37423:55:::2;::::0;37451:6:::2;::::0;37459:9;;37423:55;::::2;:27;:55::i;:::-;37507:56;::::0;;-1:-1:-1;;;;;37507:56:1;;::::2;::::0;;;::::2;;::::0;::::2;::::0;;;-1:-1:-1;;;;;37507:56:1;::::2;::::0;37523:10:::2;::::0;37507:56:::2;::::0;;;;;;;;;::::2;4491:4:::0;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;36525:1046;;;;-1:-1:-1;36525:1046:1;-1:-1:-1;;36525:1046:1:o;9581:491::-;9697:30;9729:51;9818:246;9857:17;:15;:17::i;:::-;9893:11;;9818:246;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9923:10:1;9993:9;;9818:12;;:246;;-1:-1:-1;;;;9923:10:1;;;;;-1:-1:-1;9952:22:1;-1:-1:-1;;;9952:22:1;;;;;-1:-1:-1;;;;;;9993:9:1;;;;-1:-1:-1;;;10021:28:1;;;9818:20;:246::i;:::-;9798:266;;;;9581:491;;;;;:::o;21218:924::-;4396:14;;21348:15;;;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;21496:212:::1;::::0;;::::1;::::0;::::1;::::0;;21543:10:::1;21496:212:::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;;;;4446:5;;;;;;21466:253:::1;::::0;21496:212;;;21667:25:::1;-1:-1:-1::0;;;;;21667:14:1;::::1;:23;:25::i;:::-;21666:26;;21496:212;;::::0;;21466:15:::1;:253::i;:::-;21393:326;;;;;;21751:10;21750:11;;21732:30;;21792:10;21791:11;;21773:30;;21830:1;21820:7;:11;:26;;;;21845:1;21835:7;:11;21820:26;21816:237;;;21929:20;::::0;::::1;::::0;;-1:-1:-1;;;;;21929:20:1;;::::1;:39:::0;;::::1;21863:178:::0;::::1;-1:-1:-1::0;;;21987:20:1;;;::::1;::::0;::::1;:39:::0;::::1;21863:178:::0;;::::1;::::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;;;;21863:178:1::1;;::::0;;21816:237:::1;22070:64;::::0;;-1:-1:-1;;;;;22070:64:1;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;22075:10:::1;::::0;22070:64:::1;::::0;;;;;;;;::::1;-1:-1:-1::0;;4491:4:1;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;-1:-1:-1;21218:924:1;;;;-1:-1:-1;21218:924:1;-1:-1:-1;;21218:924:1:o;6664:2860::-;6815:26;6856:37;6908:20;6956:32;6967:9;6978;6956:10;:32::i;:::-;7298:16;;;;;;7001:25;7298:16;;;:5;:16;;;;;;;;7355;;;;;;;;;;7541:27;;;;;;;;;-1:-1:-1;;;7587:36:1;;-1:-1:-1;;;;;7587:36:1;;7001:25;;-1:-1:-1;;;7642:20:1;;;;;7001:25;;7298:16;;7355;-1:-1:-1;;;7681:17:1;;;;;7728:25;;;;;;7925:27;;;;;;;;;-1:-1:-1;;;;7971:36:1;;-1:-1:-1;;;;;7971:36:1;;-1:-1:-1;;;;8026:20:1;;;;;-1:-1:-1;;;;8065:17:1;;;;;8112:25;;;;;;-1:-1:-1;;8161:27:1;;;;;;;;:19;:27;-1:-1:-1;;;;;8161:27:1;;;;-1:-1:-1;;;8161:27:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;8161:27:1;;;;;;;;;;;-1:-1:-1;;;8161:27:1;;;;;;;;-1:-1:-1;;;8161:27:1;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8161:27:1;;;;;;;;;;;;-1:-1:-1;8205:23:1;;;;;;8201:1316;;-1:-1:-1;8201:1316:1;;-1:-1:-1;8271:41:1;;;;;-1:-1:-1;8331:73:1;;;-1:-1:-1;8423:41:1;;;-1:-1:-1;8245:234:1;;8201:1316;8515:9;8501:23;;:6;:11;;;:23;;;8497:1020;;;8541:11;8555:17;:15;:17::i;:::-;8743:11;;;;8773:23;;;;8815:9;;8843:29;;;;8541:31;;-1:-1:-1;8588:20:1;;;;8655:232;;:12;;8541:31;;8588:20;;8743:11;8773:23;-1:-1:-1;;;;;8815:9:1;;8655:26;:232::i;:::-;8928:36;;;:58;;;;;-1:-1:-1;;9005:92:1;;;;:151;;;;;-1:-1:-1;9175:26:1;;;:48;;-1:-1:-1;8902:336:1;;-1:-1:-1;;8902:336:1;8497:1020;-1:-1:-1;9297:41:1;;;;;-1:-1:-1;9357:73:1;;-1:-1:-1;9449:41:1;;;-1:-1:-1;6664:2860:1;;;;;;:::o;35912:556::-;4396:14;;-1:-1:-1;;;4396:14:1;;;;4388:30;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;-1:-1:-1;;;4388:30:1;;;;;;;;;;;;;;;4429:14;:22;;-1:-1:-1;;;;4429:22:1;;;4662:10:::1;-1:-1:-1::0;;;;;4676:7:1::1;4662:21;;::::0;:74:::1;;;4720:7;-1:-1:-1::0;;;;;4701:33:1::1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;4701:35:1;-1:-1:-1;;;;;4687:49:1::1;:10;:49;4662:74;4654:83;;;::::0;::::1;;36061:17:::2;::::0;::::2;::::0;;:67:::2;;;36099:4;36083:12;:20;;;;:44;;;;;36123:4;36107:12;:20;;;;36083:44;36060:155;;;;-1:-1:-1::0;36147:17:1::2;::::0;::::2;::::0;;:67:::2;;;36185:4;36169:12;:20;;;;:44;;;;;36209:4;36193:12;:20;;;;36169:44;36038:188;;;::::0;::::2;;36263:17;::::0;;36327:18;36343:2:::2;36327:18:::0;;;;36311:35;::::2;36263:17;36291:55:::0;;::::2;-1:-1:-1::0;;36291:55:1;::::2;;::::0;;;36263:17:::2;36362:98;2091:5;36263:17:::0;36362:98:::2;::::0;;36411:20:::2;36377:32:::0;;;::::2;36362:98:::0;::::2;::::0;;36411:20;36429:2:::2;36411:20:::0;;;;36362:98:::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;::::2;::::0;;;;;;;;;;;;;::::2;-1:-1:-1::0;;4491:4:1;4474:21;;-1:-1:-1;;;;4474:21:1;-1:-1:-1;;;4474:21:1;;;-1:-1:-1;35912:556:1:o;1511:41::-;;;:::o;37579:178::-;4662:10;-1:-1:-1;;;;;4676:7:1;4662:21;;;:74;;;4720:7;-1:-1:-1;;;;;4701:33:1;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4701:35:1;-1:-1:-1;;;;;4687:49:1;:10;:49;4662:74;4654:83;;;;;;37668:6:::1;:35:::0;;-1:-1:-1;;;;;37668:35:1;::::1;-1:-1:-1::0;;;;;;37668:35:1;;::::1;::::0;::::1;::::0;;;37717:32:::1;::::0;;;;;;::::1;::::0;;;;::::1;::::0;;::::1;37579:178:::0;:::o;1886:43::-;;;:::o;1700:40::-;;;:::o;1794:36::-;;;:::o;3027:44::-;;;;:::o;3532:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3532:49:1;;;-1:-1:-1;;;3532:49:1;;;;;;;;;;;;-1:-1:-1;;;3532:49:1;;-1:-1:-1;;;;;3532:49:1;;-1:-1:-1;;;3532:49:1;;;;;-1:-1:-1;;;3532:49:1;;;;;:::o;10905:1217::-;10984:5;:18;-1:-1:-1;;;;;10984:18:1;:23;10976:38;;;;;-1:-1:-1;;;10976:38:1;;;;;;;;;;;;-1:-1:-1;;;10976:38:1;;;;;;;;;;;;;;;11027:10;11040:41;11068:12;11040:27;:41::i;:::-;11027:54;;11095:18;11115:22;11141:42;11165:17;:15;:17::i;:::-;11141:12;;:23;:42::i;:::-;11204:357;;;;;;;;-1:-1:-1;;;;;11204:357:1;;;;;;;;;;;;;;;-1:-1:-1;11204:357:1;;;;;;;;;;;;;;;;;;;;;;;;;11446:9;11204:357;;;;;;11545:4;11204:357;;;;;;;11196:365;;-1:-1:-1;;;;;;11196:365:1;;;;-1:-1:-1;;;;11196:365:1;-1:-1:-1;;;11196:365:1;;;;;;;;;;;;;;;-1:-1:-1;;;;11196:365:1;-1:-1:-1;;;11196:365:1;;;;-1:-1:-1;;;;11196:365:1;-1:-1:-1;;;11196:365:1;;;;;;;;;;;;-1:-1:-1;;;;;11196:365:1;;;;;;-1:-1:-1;;;;11196:365:1;;;;11204:357;;-1:-1:-1;11204:357:1;-1:-1:-1;11578:3:1;:10;11585:3;11578:10;11574:493;;;11605:17;:29;;-1:-1:-1;;11605:29:1;11625:9;11605:29;;;11574:493;;;11702:3;:10;;11709:3;11702:10;11698:369;;;11729:17;:29;;-1:-1:-1;;11729:29:1;11749:9;11729:29;;;11698:369;;;11826:3;:11;;11833:4;11826:11;11822:245;;;11854:17;:29;;-1:-1:-1;;11854:29:1;11874:9;11854:29;;;11822:245;;;11951:3;:12;;11958:5;11951:12;11947:120;;;11980:17;:29;;-1:-1:-1;;11980:29:1;12000:9;11980:29;;;11947:120;12084:30;;;-1:-1:-1;;;;;12084:30:1;;;;;;;;;;;;;;;;;;;;;;;;;10905:1217;;;;:::o;2253:369:26:-;2337:7;;2409:11;2374:31;;;;-1:-1:-1;;2374:31:26;;;;;;2373:47;;-1:-1:-1;2431:13:26;2483:11;2448:31;;;;654:9:28;2448:31:26;;;;;;2447:47;2431:63;;2505:15;2552:11;2530:33;;2541:7;2531;:17;2530:33;;;;;;;;2567:1;2523:45;2505:63;;2606:8;2586:28;;-1:-1:-1;;;;;2586:28:26;;;;;;;;2579:35;;;;;2253:369;;;;:::o;5465:140:1:-;5556:15;5465:140;:::o;2237:1956:27:-;2426:10;2438:16;2467;2493:11;2486:18;;:4;:18;;;;;;;;2467:37;;2526:1;2519:4;:8;;;:35;;;;;2538:11;2531:18;;:4;:18;;;;;;;;:23;;;;2519:35;2515:53;;;-1:-1:-1;;2556:12:27;2515:53;2620:3;2616:1570;;;2641:13;2656:12;2672:20;2681:10;2672:8;:20::i;:::-;2811:1;2855:13;;;;;2775:12;2855:13;;;;;;;;;;;2811:11;;;;;;;2790:33;;-1:-1:-1;;2790:33:27;2855:20;;;3025:11;;;;-1:-1:-1;2640:52:27;;-1:-1:-1;2640:52:27;;-1:-1:-1;2790:33:27;3025:11;3169:172;;3330:11;3319:6;3313:13;;3300:10;:26;3299:42;3169:172;;;3268:11;3229:34;3256:6;3229:26;:34::i;:::-;3220:6;:43;3214:50;;3201:10;:63;3200:79;3169:172;3162:179;;2616:1570;;;;;;;3473:13;3488:12;3504:24;3513:10;3526:1;3513:14;3504:8;:24::i;:::-;3472:56;;;;3602:12;3635:1;3625:6;3620:11;;:1;:11;;3619:17;3617:20;3602:35;;3652:14;3685:4;3669;:13;3674:7;3669:13;;;;;;;;;;;;;;;;:20;3652:37;;3831:6;3841:1;3831:11;;3817:25;;3975:11;:199;;4163:11;4152:6;4134:15;:24;4128:31;;4111:10;4124:1;4111:14;:48;4110:64;3975:199;;;4079:11;4068:6;4030:35;4058:6;4030:27;:35::i;:::-;:44;4024:51;;4007:10;4020:1;4007:14;:68;4006:84;3975:199;3968:206;;2616:1570;;;;;2237:1956;;;;;;;;:::o;1384:2611:28:-;1447:20;1480:15;1505:1;1498:4;:8;;;:57;;1549:4;1542:12;;1498:57;;;1525:4;1518:12;;1517:13;;1498:57;1480:75;-1:-1:-1;654:9:28;1574:28;;;1566:42;;;;;-1:-1:-1;;;1566:42:28;;;;;;;;;;;;-1:-1:-1;;;1566:42:28;;;;;;;;;;;;;;;1621:13;1647:3;1637:13;;:93;;-1:-1:-1;;;1637:93:28;;;1658:34;1637:93;-1:-1:-1;;;;;1621:109:28;;-1:-1:-1;1755:3:28;1745:13;;:18;1741:83;;1782:34;1774:42;1821:3;1773:51;1741:83;1849:3;1839:13;;:18;1835:83;;1876:34;1868:42;1915:3;1867:51;1835:83;1943:3;1933:13;;:18;1929:83;;1970:34;1962:42;2009:3;1961:51;1929:83;2037:4;2027:14;;:19;2023:84;;2065:34;2057:42;2104:3;2056:51;2023:84;2132:4;2122:14;;:19;2118:84;;2160:34;2152:42;2199:3;2151:51;2118:84;2227:4;2217:14;;:19;2213:84;;2255:34;2247:42;2294:3;2246:51;2213:84;2322:4;2312:14;;:19;2308:84;;2350:34;2342:42;2389:3;2341:51;2308:84;2417:5;2407:15;;:20;2403:85;;2446:34;2438:42;2485:3;2437:51;2403:85;2513:5;2503:15;;:20;2499:85;;2542:34;2534:42;2581:3;2533:51;2499:85;2609:5;2599:15;;:20;2595:85;;2638:34;2630:42;2677:3;2629:51;2595:85;2705:5;2695:15;;:20;2691:85;;2734:34;2726:42;2773:3;2725:51;2691:85;2801:6;2791:16;;:21;2787:86;;2831:34;2823:42;2870:3;2822:51;2787:86;2898:6;2888:16;;:21;2884:86;;2928:34;2920:42;2967:3;2919:51;2884:86;2995:6;2985:16;;:21;2981:86;;3025:34;3017:42;3064:3;3016:51;2981:86;3092:6;3082:16;;:21;3078:86;;3122:34;3114:42;3161:3;3113:51;3078:86;3189:7;3179:17;;:22;3175:86;;3220:33;3212:41;3258:3;3211:50;3175:86;3286:7;3276:17;;:22;3272:85;;3317:32;3309:40;3354:3;3308:49;3272:85;3382:7;3372:17;;:22;3368:83;;3413:30;3405:38;3448:3;3404:47;3368:83;3476:7;3466:17;;:22;3462:78;;3507:25;3499:33;3537:3;3498:42;3462:78;3564:1;3557:4;:8;;;3553:47;;;3595:5;-1:-1:-1;;3575:25:28;;;;;;3567:33;;3553:47;-1:-1:-1;;;3955:5:28;:17;:22;:30;;3984:1;3955:30;;;3980:1;3955:30;3938:48;;3948:2;3939:5;:11;;3938:48;3915:72;;1384:2611;;;;;:::o;1419:3315:25:-;1676:24;;;;-1:-1:-1;;;;;1841:41:25;;;;;;;;1908:20;;;;;;1941:1379;;1969:30;2002:61;2026:15;2050:7;2044:3;:13;2002:61;;2059:3;2002:15;:61::i;:::-;1969:94;;2089:10;:224;;2226:87;2256:19;2277:18;2297:9;2308:4;2226:29;:87::i;:::-;2089:224;;;2119:87;2149:18;2169:19;2190:9;2201:4;2119:29;:87::i;:::-;2078:235;;2358:8;2332:22;:34;2328:343;;2387:18;2368:37;;2328:343;;;2461:210;2523:19;2565:9;2597:22;2642:10;2461:39;:210::i;:::-;2442:229;;2328:343;1941:1379;;;;2716:10;:226;;2854:88;2884:19;2905:18;2925:9;2936:5;2854:29;:88::i;:::-;2716:226;;;2746:88;2776:18;2796:19;2817:9;2828:5;2746:29;:88::i;:::-;2704:238;;2990:9;2970:15;2969:16;;2961:38;2957:351;;3020:18;3001:37;;2957:351;;;3094:214;3157:19;3199:9;3240:15;3239:16;;3279:10;3094:40;:214::i;:::-;3075:233;;2957:351;-1:-1:-1;;;;;3343:38:25;;;;;;;3435:746;;;;3477:3;:14;;;;;3484:7;3477:14;:147;;3539:85;3569:16;3587:19;3608:9;3619:4;3539:29;:85::i;:::-;3477:147;;;3511:8;3477:147;3466:158;;3651:3;:15;;;;;3659:7;3658:8;3651:15;:150;;3715:86;3745:16;3763:19;3784:9;3795:5;3715:29;:86::i;:::-;3651:150;;;3686:9;3651:150;3639:162;;3435:746;;;3845:3;:14;;;;;3852:7;3845:14;:147;;3907:85;3937:19;3958:16;3976:9;3987:4;3907:29;:85::i;:::-;3845:147;;;3879:8;3845:147;3834:158;;4019:3;:15;;;;;4027:7;4026:8;4019:15;:150;;4083:86;4113:19;4134:16;4152:9;4163:5;4083:29;:86::i;:::-;4019:150;;;4054:9;4019:150;4007:162;;3435:746;4274:7;4273:8;:49;;;;;4306:15;4305:16;;4285:9;:37;4273:49;4269:119;;;4360:15;4359:16;;4339:37;;4269:119;4404:7;:49;;;;;4435:18;-1:-1:-1;;;;;4415:38:25;:16;-1:-1:-1;;;;;4415:38:25;;;4404:49;4400:327;;;4603:8;4584:15;4576:35;4564:47;;4400:327;;;4656:59;4682:8;4692:7;4656:59;;4707:7;4701:3;:13;4656:59;;:25;:59::i;:::-;4644:71;;4400:327;1419:3315;;;;;;;;;;;;;:::o;947:124:23:-;999:8;-1:-1:-1;;;1028:1:23;:10;1020:19;;;;;;-1:-1:-1;1061:1:23;947:124::o;1615:122:20:-;1705:5;;;1700:16;;;;1671:8;1721:6;;;1700:28;1692:37;;;;;;1615:122;;;;:::o;1310:::-;1400:5;;;1395:16;;;;1366:8;1416:6;;;1395:28;1387:37;;;;;1012:127;1070:9;1100:6;;;:30;;-1:-1:-1;;1115:5:20;;;1129:1;1124;1115:5;1124:1;1110:15;;;;;:20;1100:30;1092:39;;;;;775:3868:18;891:14;;;-1:-1:-1;;1407:1:18;1404;1397:20;1440:9;;;;-1:-1:-1;1492:13:18;;;1476:14;;;;1472:34;;-1:-1:-1;1592:10:18;1588:185;;1641:1;1627:11;:15;1619:24;;;;;;-1:-1:-1;1696:23:18;;;;-1:-1:-1;1748:13:18;;1588:185;1904:5;1890:11;:19;1882:28;;;;;;2195:17;2273:11;2270:1;2267;2260:25;2636:12;2651;;;:26;;2774:22;;;;;3597:1;3578;:15;;3577:21;;3828:17;;;3824:21;;3817:28;3887:17;;;3883:21;;3876:28;3947:17;;;3943:21;;3936:28;4007:17;;;4003:21;;3996:28;4067:17;;;4063:21;;4056:28;4128:17;;;4124:21;;;4117:28;3157:12;;;;3153:23;;;3178:1;3149:31;2406:20;;;2395:32;;;3210:12;;;;2450:21;;;;2907:16;;;;3201:21;;;;4600:11;;;;;-1:-1:-1;;775:3868:18;;;;;;:::o;12905:2074:21:-;13151:20;;13231:15;;;13227:261;;13263:23;13289:4;13294:5;13289:11;;;;;;;;;13263:37;;;;;;;;13289:11;;;;13263:37;;;;;;;;-1:-1:-1;;;13263:37:21;;;;;;;;;;;;;;-1:-1:-1;;;13263:37:21;;-1:-1:-1;;;;;13263:37:21;;;;;;;;-1:-1:-1;;;13263:37:21;;;;;;;;;;;;;-1:-1:-1;13319:27:21;;;13315:78;;13355:38;13365:4;13371;13377;13383:9;13355;:38::i;:::-;13348:45;;13315:78;13416:4;:19;;;13437:4;:38;;;13408:68;;;;;;;13227:261;13516:17;;;13500:13;;13610:185;13651:4;13516;:17;13710:4;13729:5;13749:9;13773:11;13610:26;:185::i;:::-;13546:249;;;;13822:10;:25;;;13812:35;;:6;:35;;;13808:1164;;;13915:10;:25;;;13942:10;:44;;;13907:80;;;;;;;;;13808:1164;14019:24;;14009:34;;;;;;;14005:967;;;14112:9;:24;;;14138:9;:43;;;14104:78;;;;;;;;;14005:967;14308:25;;14281:24;;14522:25;;;;;14495:24;;;;14281:52;;;;;14369:34;;;14493:114;;;;;14494:77;;;;14495:52;14494:77;;;;;;;;14493:114;14444:10;:25;;;:163;14902:20;14728:194;;14887:11;14729:169;;14813:10;:44;;;14767:9;:43;;;:90;-1:-1:-1;;;;;14729:155:21;:169;14728:194;;;;;;14626:10;:44;;;:319;14418:542;;;;;;;;;12905:2074;;;;;;;;;;;:::o;9043:853:26:-;9395:10;;;;;;9338:19;9395:10;;;;;;;;;;;;9468:26;;;;;9445:49;;;9416:78;;;9557:26;;;;;9534:49;;;9505:78;;;9668:35;;;;;9826:19;-1:-1:-1;;;;;;;;;;;9668:35:26;;;;;9632:71;;;9594:109;;;;-1:-1:-1;;;;;;;;9594:109:26;;;;;;;9760:26;;;;9743:43;;;9714:72;;;;;-1:-1:-1;;9714:72:26;;;;;;;9826:19;;;;;9819:26;;;9797:48;;;;-1:-1:-1;;;;9797:48:26;;;;;;;;;9871:17;-1:-1:-1;;;9871:17:26;;;;;9043:853::o;392:242:19:-;454:9;484:1;480;:5;;;476:151;;;534:1;-1:-1:-1;;;;;510:25:19;528:1;527:2;;515:1;:15;511:19;;;-1:-1:-1;;;;;510:25:19;;502:40;;;;;-1:-1:-1;;;502:40:19;;;;;;;;;;;;-1:-1:-1;;;502:40:19;;;;;;;;;;;;;;;476:151;;;607:1;-1:-1:-1;;;;;583:25:19;600:1;588;:14;584:18;;;-1:-1:-1;;;;;583:25:19;;;575:40;;;;;-1:-1:-1;;;575:40:19;;;;;;;;;;;;-1:-1:-1;;;575:40:19;;;;;;;;;;;;;;4421:4424:28;4494:10;837;-1:-1:-1;;;;;4625:30:28;;;;;;:63;;-1:-1:-1;1019:49:28;-1:-1:-1;;;;;4659:29:28;;;4625:63;4617:77;;;;;-1:-1:-1;;;4617:77:28;;;;;;;;;;;;-1:-1:-1;;;4617:77:28;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;4746:2:28;4721:27;;;;-1:-1:-1;;;;;4857:41:28;;4854:1;4850:49;4949:9;;;-1:-1:-1;;;;;5019:25:28;;5016:1;5012:33;5095:9;;;5171:10;5165:17;;5162:1;5158:25;5233:9;;;5309:6;5303:13;;5300:1;5296:21;5367:9;;;5443:4;5437:11;;5434:1;5430:19;;;5499:9;;;5575:3;5569:10;;5566:1;5562:18;5630:9;;;5700:10;;;5697:1;5693:18;;;5761:9;;;;5824:10;;;5066;;5204;;;5338;;;5470;5601;;;5732;5855;5899:3;5892:10;;5888:80;;5924:3;5918;:9;5908:5;:20;;5904:24;;5888:80;;;5964:3;5958;:9;5948:5;:20;;5944:24;;5888:80;6072:9;;;6067:3;6063:19;;;6105:11;;;;6179:9;;;;6247;;6238:19;;;6280:11;;;6354:9;6422;;6413:19;;;6455:11;;;6529:9;6597;;6588:19;;;6630:11;;;6704:9;6772;;6763:19;;;6805:11;;;6879:9;6947;;6938:19;;;6980:11;;;7054:9;7122;;7113:19;;;7155:11;;;7229:9;7297;;7288:19;;;7330:11;;;7404:9;7472;;7463:19;;;7505:11;;;7579:9;7647;;7638:19;;;7680:11;;;7754:9;7822;;7813:19;;;7855:11;;;7929:9;7997;;7988:19;;;8030:11;;;8104:9;8172;;8163:19;;;8205:11;;;;8279:9;;;;8347;;8338:19;;;;;6072:9;-1:-1:-1;;5997:17:28;;6019:2;5996:25;6149:10;;;;;-1:-1:-1;;;6149:10:28;6139:21;6324:10;;;;;-1:-1:-1;;;6324:10:28;6314:21;;;;6499:10;;;;;-1:-1:-1;;;6499:10:28;6489:21;;;;6674:10;;;;;-1:-1:-1;;;6674:10:28;6664:21;;;;6849:10;;;;;-1:-1:-1;;;6849:10:28;6839:21;;;;7024:10;;;;;-1:-1:-1;;;7024:10:28;7014:21;;;;7199:10;;;;;-1:-1:-1;;;7199:10:28;7189:21;7374:10;;;;;-1:-1:-1;;;7374:10:28;7364:21;7549:10;;;;;-1:-1:-1;;;7549:10:28;7539:21;7724:10;;;;;-1:-1:-1;;;7724:10:28;7714:21;7899:10;;;;;-1:-1:-1;;;7899:10:28;7889:21;8074:10;;;;;-1:-1:-1;;;8074:10:28;8064:21;8249:10;;;;;-1:-1:-1;;;8249:10:28;8239:21;8424:10;;;;;-1:-1:-1;;;8424:10:28;8414:21;8489:24;8481:32;;-1:-1:-1;;8567:53:28;;6011:3;8566:62;;;;8678:39;8662:55;;8661:64;;8746:17;;;;;;;;;:91;;8806:12;-1:-1:-1;;;;;8776:42:28;:26;8795:6;8776:18;:26::i;:::-;-1:-1:-1;;;;;8776:42:28;;;:61;;8830:7;8776:61;;;8821:6;8776:61;8746:91;;;8766:7;8746:91;8739:98;4421:4424;-1:-1:-1;;;;;;;;;4421:4424:28:o;4524:925:21:-;4772:19;4793:25;4831:23;4857:4;4862:5;4857:11;;;;;;;;;4831:37;;;;;;;;4857:11;;;;4831:37;;;;;;;;-1:-1:-1;;;4831:37:21;;;;;;;;;;;;;;-1:-1:-1;;;4831:37:21;;-1:-1:-1;;;;;4831:37:21;;;;;;;;-1:-1:-1;;;4831:37:21;;;;;;;;;;;;;-1:-1:-1;4961:37:21;;;4957:70;;;5008:5;5015:11;5000:27;;;;;;;4957:70;5131:11;5113:29;;:15;:29;;;:59;;;;;5170:1;5156:11;:15;5146:26;;:5;:26;;;5113:59;5109:193;;;5210:15;5189:36;;5109:193;;;5279:11;5258:32;;5109:193;5343:18;5329:32;;5330:5;5338:1;5330:9;5329:32;;;;;;;;5314:47;;5393:48;5403:4;5409:14;5425:4;5431:9;5393;:48::i;:::-;5372:4;5377:12;5372:18;;;;;;;;;:69;;:18;;:69;;;;;;;;;;;;;;;;;-1:-1:-1;;;5372:69:21;-1:-1:-1;;;;;;;;;;5372:69:21;;;-1:-1:-1;;;5372:69:21;-1:-1:-1;;;;;;;;5372:69:21;;;;;;;-1:-1:-1;;;5372:69:21;-1:-1:-1;;;;5372:69:21;;;;-1:-1:-1;;5372:69:21;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4524:925:21;;;;;;;;;;:::o;615:347:29:-;794:66;;;-1:-1:-1;;;;;794:66:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;794:66:29;-1:-1:-1;;;794:66:29;;;769:102;;;;734:12;;;;769:10;;;;794:66;769:102;;;794:66;769:102;;794:66;769:102;;;;;;;;;;-1:-1:-1;;769:102:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:138;;;;890:7;:57;;;;-1:-1:-1;902:11:29;;:16;;:44;;;933:4;922:24;;;;;;;;;;;;;;;-1:-1:-1;922:24:29;902:44;882:72;;;;;-1:-1:-1;;;882:72:29;;;;;;;;;;;;-1:-1:-1;;;882:72:29;;;;;;;;;;;;;;;615:347;;;;;:::o;5793:313:1:-;5923:71;;;5988:4;5923:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5923:71:1;-1:-1:-1;;;5923:71:1;;;5891:114;;;;5835:7;;;;;;-1:-1:-1;;;;;5891:6:1;:17;;5923:71;;5891:114;;;;5923:71;5891:114;;5923:71;5891:114;;;;;;;;;;-1:-1:-1;;5891:114:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5855:150;;;;6024:7;:28;;;;;6050:2;6035:4;:11;:17;;6024:28;6016:37;;;;;;6082:4;6071:27;;;;;;;;;;;;;;;-1:-1:-1;6071:27:1;;-1:-1:-1;;;5793:313:1;:::o;445:113:20:-;538:5;;;533:16;;;;525:25;;;;;6294:313:1;6424:71;;;6489:4;6424:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6424:71:1;-1:-1:-1;;;6424:71:1;;;6392:114;;;;6336:7;;;;;;-1:-1:-1;;;;;6392:6:1;:17;;6424:71;;6392:114;;;;6424:71;6392:114;;6424:71;6392:114;;;;;;;;;-1:-1:-1;;6392:114:1;;;;;;;;;;;;5835:561:21;5963:6;6000:1;5990:7;:11;;;5982:25;;;;;-1:-1:-1;;;5982:25:21;;;;;;;;;;;;-1:-1:-1;;;5982:25:21;;;;;;;;;;;;;;;6115:7;6107:15;;:4;:15;;;6103:35;;-1:-1:-1;6131:7:21;6124:14;;6103:35;6316:7;6300:66;6329:4;6325:8;;:1;:8;;;6300:66;;;6365:1;6340:4;6345:1;6340:7;;;;;;;;;;:26;;-1:-1:-1;;6340:26:21;;;;;;;;;;;;-1:-1:-1;6335:3:21;6300:66;;;-1:-1:-1;6384:4:21;;5835:561;-1:-1:-1;;;5835:561:21:o;668:109:23:-;767:1;748:20;;;;;;740:29;;;;;12888:2855:1;12998:30;13043:14;13072;13114:46;13125:6;:16;;;13143:6;:16;;;13114:10;:46::i;:::-;13173:27;;;;;;;;:19;:27;-1:-1:-1;;;;;13173:27:1;;;;-1:-1:-1;;;13173:27:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13173:27:1;;;;;;;;-1:-1:-1;;;13173:27:1;;;;;;;;;;;;-1:-1:-1;;;13173:27:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13173:27:1;;;;;;;;;;13284:12;;13311:16;;;;13342;;;;13373:21;;;;13173:27;;13254:177;;13284:12;;13311:16;;13342;;13373:21;13254:15;:177::i;:::-;13243:188;;13448:6;:21;;;:26;;13473:1;13448:26;13444:2292;;13509:6;:16;;;13495:30;;:6;:11;;;:30;;;13491:2234;;;13787:228;13839:45;13867:6;:16;;;13839:27;:45::i;:::-;13907;13935:6;:16;;;13907:27;:45::i;:::-;13975:6;:21;;;13787:29;:228::i;:::-;13777:238;;13491:2234;;;14055:6;:16;;;14041:30;;:6;:11;;;:30;;;14037:1688;;;14178:9;;14378:23;;;;-1:-1:-1;;;;;14178:9:1;;;;14337:303;;14424:17;:15;:17::i;:::-;14464:11;;;;14536:29;;;;14588:33;;;;14337:12;;:303;;14464:11;14498:15;;14337:18;:303::i;:::-;14281:5;14280:360;;-1:-1:-1;;;;14280:360:1;-1:-1:-1;;;14280:360:1;;;;;;-1:-1:-1;;;;14280:360:1;-1:-1:-1;;;14280:360:1;;;;;;;;;;;14723:19;;14793:16;;;;14671:202;;14723:19;14765:45;;:27;:45::i;:::-;14833:6;:21;;;14671:29;:202::i;:::-;14661:212;;14902:202;14954:45;14982:6;:16;;;14954:27;:45::i;:::-;15022:19;;15064:21;;;;14902:29;:202::i;:::-;14892:212;;15137:62;15160:15;15177:6;:21;;;15137:22;:62::i;:::-;15125:9;:74;;-1:-1:-1;;;;;;15125:74:1;-1:-1:-1;;;;;15125:74:1;;;;;;;;;;-1:-1:-1;14037:1688:1;;;15481:228;15533:45;15561:6;:16;;;15533:27;:45::i;:::-;15601;15629:6;:16;;;15601:27;:45::i;:::-;15669:6;:21;;;15481:29;:228::i;:::-;15471:238;;14037:1688;12888:2855;;;;;;:::o;4932:325:18:-;5058:14;5094:25;5101:1;5104;5107:11;5094:6;:25::i;:::-;5085:34;;5162:1;5147:11;5134:25;;;;;5144:1;5141;5134:25;:29;5130:120;;;-1:-1:-1;;5188:6:18;:26;5180:35;;;;;;5230:8;;4932:325;;;;;:::o;1290:291:22:-;1526:45;;;;;;;;-1:-1:-1;;;;;;1526:45:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:56;;;;;;;;;-1:-1:-1;1511:62:22;;;;;;;;;1290:291::o;15946:886:21:-;16196:30;16228:51;16314:1;16300:11;:15;;;16292:29;;;;;-1:-1:-1;;;16292:29:21;;;;;;;;;;;;-1:-1:-1;;;16292:29:21;;;;;;;;;;;;;;;16364:11;:18;-1:-1:-1;;;;;16352:31:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16352:31:21;;16334:49;;16445:11;:18;-1:-1:-1;;;;;16431:33:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16431:33:21;;16394:70;;16480:9;16475:350;16499:11;:18;16495:1;:22;16475:350;;;16601:212;16633:4;16656;16679:11;16691:1;16679:14;;;;;;;;;;;;;;16712:4;16735:5;16759:9;16787:11;16601:13;:212::i;:::-;16540:15;16556:1;16540:18;;;;;;;;;;;;;16560:34;16595:1;16560:37;;;;;;;;;;;;;16539:274;-1:-1:-1;;;;;16539:274:21;-1:-1:-1;;;;;16539:274:21;;;;;;;;;;;;;;16519:3;;;;;;;16475:350;;;;15946:886;;;;;;;;;;:::o;5104:237:1:-;5202:9;5190:21;;:9;:21;;;5182:37;;;;;-1:-1:-1;;;5182:37:1;;;;;;;;;;;;-1:-1:-1;;;5182:37:1;;;;;;;;;;;;;;;-1:-1:-1;;5238:30:1;;;;;;5230:46;;;;;-1:-1:-1;;;5230:46:1;;;;;;;;;;;;-1:-1:-1;;;5230:46:1;;;;;;;;;;;;;;;654:9:28;5295:30:1;;;;;;5287:46;;;;;-1:-1:-1;;;5287:46:1;;;;;;;;;;;;-1:-1:-1;;;5287:46:1;;;;;;;;;;;;;;;5104:237;;:::o;2954:378:21:-;3126:174;;;;;;;;;;;;;;;-1:-1:-1;3126:174:21;;;;;;;;;;;;;3284:4;3126:174;;;;;;;3116:184;;-1:-1:-1;;3116:184:21;;;;;;;-1:-1:-1;;;3116:184:21;;;;3284:4;;;2954:378::o;707:163:27:-;815:9;;823:1;815:9;;;;858:3;851:10;;;;707:163::o;683:763:15:-;745:7;777:1;773;:5;765:14;;;;;;-1:-1:-1;;;796:1:15;:40;792:105;;859:3;853:9;;;;877:8;792:105;-1:-1:-1;;;911:1:15;:24;907:87;;958:2;952:8;;;;975:7;907:87;-1:-1:-1;;;1008:1:15;:16;1004:79;;1047:2;1041:8;;;;1064:7;1004:79;1102:7;1097:1;:12;1093:75;;1132:2;1126:8;;;;1149:7;1093:75;1187:5;1182:1;:10;1178:71;;1215:1;1209:7;;;;1231:6;1178:71;1268:4;1263:1;:9;1259:70;;1295:1;1289:7;;;;1311:6;1259:70;1348:3;1343:1;:8;1339:69;;1374:1;1368:7;;;;1390:6;1339:69;1427:3;1422:1;:8;1418:20;;1437:1;1432:6;683:763;;;:::o;1945:934::-;2008:7;2040:1;2036;:5;2028:14;;;;;;-1:-1:-1;2059:3:15;-1:-1:-1;;;;;2077:21:15;;:25;2073:108;;-1:-1:-1;;2119:8:15;2073:108;;;2166:3;2160:9;;;;;2073:108;-1:-1:-1;;;;;2195:20:15;;:24;2191:105;;-1:-1:-1;;2236:7:15;2191:105;;;2282:2;2276:8;;;;;2191:105;2314:16;2310:20;;:24;2306:105;;-1:-1:-1;;2351:7:15;2306:105;;;2397:2;2391:8;;;;;2306:105;2429:16;2425:20;;:24;2421:105;;-1:-1:-1;;2466:7:15;2421:105;;;2512:2;2506:8;;;;;2421:105;2544:15;2540:19;;:23;2536:102;;-1:-1:-1;;2580:6:15;2536:102;;;2625:1;2619:7;;;;;2536:102;2656:3;2652:7;;:11;2648:90;;-1:-1:-1;;2680:6:15;2648:90;;;2725:1;2719:7;;;;;2648:90;2756:3;2752:7;;:11;2748:90;;-1:-1:-1;;2780:6:15;2748:90;;;2825:1;2819:7;;;;;2748:90;2856:3;2852:7;;:11;2848:23;;-1:-1:-1;;2865:6:15;1945:934;;;:::o;8850:544:24:-;9020:15;9068:13;-1:-1:-1;;;;;9052:29:24;:13;-1:-1:-1;;;;;9052:29:24;;9048:98;;;9117:13;;9132;9048:98;9179:7;:207;;9311:75;9327:9;-1:-1:-1;;;;;9311:75:24;9354:13;9338;:29;-1:-1:-1;;;;;9311:75:24;-1:-1:-1;;;9311:15:24;:75::i;:::-;9179:207;;;9206:85;9232:9;-1:-1:-1;;;;;9206:85:24;9259:13;9243;:29;-1:-1:-1;;;;;9206:85:24;-1:-1:-1;;;9206:25:24;:85::i;:::-;9159:227;;8850:544;;;;;;;:::o;7587:799::-;7757:15;7805:13;-1:-1:-1;;;;;7789:29:24;:13;-1:-1:-1;;;;;7789:29:24;;7785:98;;;7854:13;;7869;7785:98;-1:-1:-1;;;;;;;316:2:17;7917:45:24;;;;-1:-1:-1;;;;;7994:29:24;;;7973:50;;;8044:17;;8036:26;;;;;;8095:7;:283;;8365:13;-1:-1:-1;;;;;8308:70:24;:54;8324:10;8336;8348:13;-1:-1:-1;;;;;8308:54:24;:15;:54::i;:::-;:70;;;;;;8095:283;;;8122:166;8169:64;8195:10;8207;8219:13;-1:-1:-1;;;;;8169:64:24;:25;:64::i;:::-;8256:13;-1:-1:-1;;;;;8122:166:24;:24;:166::i;:::-;8075:303;7587:799;-1:-1:-1;;;;;;;7587:799:24:o;5346:564::-;5519:16;5567:1;5556:8;-1:-1:-1;;;;;5556:12:24;;5548:21;;;;;;5600:1;5588:9;-1:-1:-1;;;;;5588:13:24;;5580:22;;;;;;5702:10;:200;;5826:76;5866:8;5876:9;5887:8;5897:4;5826:39;:76::i;5702:200::-;5732:74;5770:8;5780:9;5791:8;5801:4;5732:37;:74::i;6465:564::-;6640:16;6688:1;6677:8;-1:-1:-1;;;;;6677:12:24;;6669:21;;;;;;6721:1;6709:9;-1:-1:-1;;;;;6709:13:24;;6701:22;;;;;;6817:10;:204;;6945:76;6983:8;6993:9;7004;7015:5;6945:37;:76::i;6817:204::-;6847:78;6887:8;6897:9;6908;6919:5;6847:39;:78::i;1848:648:21:-;2011:18;;:::i;:::-;2042:12;2074:4;:19;;;2057:14;:36;2042:51;;2124:364;;;;;;;;2171:14;2124:364;;;;;;2256:5;2242:19;;2248:4;2242:11;;:19;2220:4;:19;;;:41;2124:364;;;;;;2417:1;2405:9;-1:-1:-1;;;;;2405:13:21;;:29;;2433:1;2405:29;;;2421:9;2405:29;-1:-1:-1;;;;;2378:57:21;-1:-1:-1;;;2397:3:21;2379:21;;;;2378:57;;;;;;2315:4;:38;;;:121;-1:-1:-1;;;;;2124:364:21;;;;;2468:4;2124:364;;;;;2104:384;;;1848:648;;;;;;:::o;10322:1457::-;10576:29;;:::i;:::-;10607:28;;:::i;:::-;10725:4;10730:5;10725:11;;;;;;;;;10712:24;;;;;;;;10725:11;;;;10712:24;;;;;;;-1:-1:-1;;;10712:24:21;;;;;;;;;;;;;;-1:-1:-1;;;10712:24:21;;-1:-1:-1;;;;;10712:24:21;;;;;;;;-1:-1:-1;;;10712:24:21;;;;;;;;;;;-1:-1:-1;10854:44:21;;10858:4;;10891:6;10854:3;:44::i;:::-;10850:451;;;10948:6;10919:35;;:10;:25;;;:35;;;10915:375;;;11084:30;;10915:375;11215:10;11227:46;11237:10;11249:6;11257:4;11263:9;11227;:46::i;:::-;11207:67;;;;;;10915:375;11380:4;11399:11;11385:25;;11386:5;11394:1;11386:9;11385:25;;;;;;;;11380:31;;;;;;;;;11367:44;;;;;;;;11380:31;;;;11367:44;;;;;;-1:-1:-1;;;11367:44:21;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;11367:44:21;;;;;;;;;;;-1:-1:-1;;;11367:44:21;;;;;;;;;;;;;;-1:-1:-1;11422:49:21;;11451:20;;;;;;;;;;;;;;;-1:-1:-1;;;11451:20:21;;;;;;;;;;;;;;-1:-1:-1;;;11451:20:21;;-1:-1:-1;;;;;11451:20:21;;;;;;;;-1:-1:-1;;;11451:20:21;;;;;;;;;;;;-1:-1:-1;11422:49:21;11581:44;11585:4;11591:10;:25;;;11618:6;11581:3;:44::i;:::-;11573:60;;;;;-1:-1:-1;;;11573:60:21;;;;;;;;;;;;-1:-1:-1;;;11573:60:21;;;;;;;;;;;;;;;11719:52;11732:4;11738;11744:6;11752:5;11759:11;11719:12;:52::i;:::-;11712:59;;;;10322:1457;;;;;;;;;;:::o;16074:2609:1:-;16252:30;16306:42;:9;16320:5;16327:9;16338;16306:13;:42::i;:::-;16393:20;;16486;;16295:53;;-1:-1:-1;16393:20:1;16361:29;;16659:19;;;;;16655:1400;;16695:11;16709:17;:15;:17::i;:::-;16742:20;16897:10;;16967:9;;16695:31;;-1:-1:-1;16742:20:1;;;;16809:229;;:12;;16695:31;;16742:20;;-1:-1:-1;;;16897:10:1;;;;;16926:22;-1:-1:-1;;;16926:22:1;;;;;-1:-1:-1;;;;;16967:9:1;;;;-1:-1:-1;;;16995:28:1;;;16809:26;:229::i;:::-;16741:297;;-1:-1:-1;16741:297:1;-1:-1:-1;17070:361:1;:5;17101:9;17129:4;17152:14;17185:21;17225;16741:297;;17350:4;17373:5;17397:19;17070:12;:361::i;:::-;17055:376;-1:-1:-1;17461:360:1;:5;17492:9;17520:4;17543:14;17576:21;17616;17656:33;17708:14;17741:4;17764;17787:19;17461:12;:360::i;:::-;17446:375;;17842:12;17838:96;;;17875:43;:10;17895:9;17906:11;17875:19;:43::i;:::-;17952:12;17948:96;;;17985:43;:10;18005:9;18016:11;17985:19;:43::i;:::-;16655:1400;;;;18068:28;;18130:174;:5;18169:9;18193;18217:4;18236:21;18272;18130:24;:174::i;:::-;18067:237;;-1:-1:-1;18067:237:1;-1:-1:-1;18317:75:1;:8;18333:14;18067:237;;18317:15;:75::i;:::-;18483:1;18466:14;:18;;;18462:214;;;18505:12;18501:75;;;18538:22;:5;18550:9;18538:11;:22::i;:::-;18594:12;18590:75;;;18627:22;:5;18639:9;18627:11;:22::i;:::-;16074:2609;;;;;;;;;;;;;:::o;9745:421:24:-;9891:14;9950:1;9938:9;:13;;;:220;;10076:82;:71;10092:13;10107;10130:9;10142:4;10076:15;:71::i;:::-;:80;:82::i;:::-;9938:220;;;9972:84;:73;9988:13;10003;10027:9;10026:10;;10039:5;9972:15;:73::i;:84::-;9971:85;;9918:240;9745:421;-1:-1:-1;;;;9745:421:24:o;10517:::-;10663:14;10722:1;10710:9;:13;;;:220;;10848:82;:71;10864:13;10879;10902:9;10914:4;10848:15;:71::i;10710:220::-;10744:84;:73;10760:13;10775;10799:9;10798:10;;10811:5;10744:15;:73::i;503:169:30:-;626:9;;;640;;637:16;;622:32;;602:63::o;3672:1116:24:-;3850:7;4030:3;4026:755;;;4050:16;-1:-1:-1;;;;;4088:27:24;;;:174;;4210:52;4226:6;-1:-1:-1;;;4252:9:24;-1:-1:-1;;;;;4210:52:24;:15;:52::i;:::-;4088:174;;;-1:-1:-1;;;;;4139:47:24;;316:2:17;4140:33:24;;;4139:47;;;;;;4088:174;4050:227;-1:-1:-1;4301:43:24;:31;-1:-1:-1;;;;;4301:17:24;;4050:227;4301:21;:31::i;:::-;:41;:43::i;:::-;4294:50;;;;;4026:755;4377:16;-1:-1:-1;;;;;4415:27:24;;;:207;;4560:62;4586:6;-1:-1:-1;;;4612:9:24;-1:-1:-1;;;;;4560:62:24;:25;:62::i;:::-;4415:207;;;4466:70;316:2:17;4491:33:24;;;-1:-1:-1;;;;;4466:70:24;;:24;:70::i;:::-;4377:260;;4673:8;4662;-1:-1:-1;;;;;4662:19:24;;4654:28;;;;;;-1:-1:-1;;;;;4749:19:24;;;;-1:-1:-1;4734:35:24;;1440:1394;1616:7;1753:11;1749:32;;-1:-1:-1;1773:8:24;1766:15;;1749:32;-1:-1:-1;;;;;;;316:2:17;1813:45:24;;;;1871:956;;;;-1:-1:-1;;;;;1929:50:24;;1940:17;;;;1961:6;1940:17;1961:6;1929:38;;;;;:50;1925:328;;;2022:20;;;2065:25;;;2061:176;;2176:60;2202:10;2214:8;-1:-1:-1;;;;;2176:60:24;2224:11;2176:25;:60::i;:::-;2161:76;;;;;;;2061:176;1925:328;;2284:73;2309:10;2321:35;2349:6;2335:8;-1:-1:-1;;;;;2322:21:24;:10;:21;;;;;;;2321:27;:35::i;:::-;2284:24;:73::i;:::-;2269:89;;;;;;1871:956;-1:-1:-1;;;;;2589:50:24;;2600:17;;;;2621:6;2600:17;2621:6;2589:38;;;;;:50;:74;;;;;2656:7;2643:10;:20;2589:74;2581:83;;;;;;2701:20;;;2743:72;:60;2701:10;-1:-1:-1;;;;;2743:60:24;;2701:20;2743:25;:60::i;6838:383:21:-;6940:4;7027;7022:9;;:1;:9;;;;:22;;;;;7040:4;7035:9;;:1;:9;;;;7022:22;7018:41;;;7058:1;7053:6;;:1;:6;;;;7046:13;;;;7018:41;7072:17;7096:4;7092:8;;:1;:8;;;:24;;7107:1;:9;;-1:-1:-1;;;7107:9:21;7092:24;;;7103:1;7092:24;;;7072:44;;;;7127:17;7151:4;7147:8;;:1;:8;;;:24;;7162:1;:9;;-1:-1:-1;;;7162:9:21;7147:24;;;7158:1;7147:24;;;7127:44;;7191:22;;;;;6838:383;-1:-1:-1;;;;;6838:383:21:o;8189:1095::-;8380:29;;:::i;:::-;8411:28;;:::i;:::-;8452:9;8478:11;8464:25;;8465:5;8473:1;8465:9;8464:25;;;;;;;;8452:37;;;;8522:9;8552:1;8538:11;8534:15;;:1;:15;:19;8522:31;;8586:9;8606:671;-1:-1:-1;8648:1:21;8639:5;;;8638:11;8679:4;8684:15;;;8638:11;8684:15;;;;;;8679:21;;;;;;;8666:34;;;;;;;;8679:21;;;;8666:34;;;;;;-1:-1:-1;;;8666:34:21;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;8666:34:21;;;;;;;;;;;-1:-1:-1;;;8666:34:21;;;;;;;;;;;;;;-1:-1:-1;8810:100:21;;8862:1;8866;8862:5;8858:9;;8886:8;;8810:100;8938:4;8953:11;8943:21;;8944:1;8948;8944:5;8943:21;;;;;;8938:27;;;;;;;8926:39;;;;;;;;8938:27;;;;8926:39;;;;;;-1:-1:-1;;;8926:39:21;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;8926:39:21;;;;;;;;;;;-1:-1:-1;;;8926:39:21;;;;;;;;;;9015:25;;8926:39;;-1:-1:-1;;;9005:44:21;;9009:4;;9042:6;9005:3;:44::i;:::-;8982:67;;9119:15;:62;;;;;9138:43;9142:4;9148:6;9156:9;:24;;;9138:3;:43::i;:::-;9115:73;;;9183:5;;;9115:73;9210:15;9205:60;;9235:1;9231;:5;9227:9;;9205:60;;;9260:1;9264;9260:5;9256:9;;9205:60;8606:671;;;;8189:1095;;;;;;;;;;;:::o;6225:1729:26:-;6683:10;;;;;;6633:12;6683:10;;;;;;;;;;6737:19;;-1:-1:-1;;;;;6737:19:26;6633:12;6797:60;6737:19;6842:14;6797:22;:60::i;:::-;6767:90;;6901:12;-1:-1:-1;;;;;6878:35:26;:19;-1:-1:-1;;;;;6878:35:26;;;6870:50;;;;;-1:-1:-1;;;6870:50:26;;;;;;;;;;;;-1:-1:-1;;;6870:50:26;;;;;;;;;;;;;;;-1:-1:-1;;;;;6974:25:26;;;;6944:24;;;;6943:57;;;;-1:-1:-1;6943:57:26;7013:582;;7184:11;7176:19;;:4;:19;;;7172:374;;7216:26;;;:49;;;7284:26;;;:49;;;7352:35;;;:71;;-1:-1:-1;;;;;;;;7352:71:26;-1:-1:-1;;;;;;;;7352:71:26;;;;-1:-1:-1;;7442:43:26;;;;;;;;-1:-1:-1;;;;7504:26:26;-1:-1:-1;;;7504:26:26;;;;;;;7172:374;7560:16;;;:23;;-1:-1:-1;;;;;7560:23:26;-1:-1:-1;;;7560:23:26;;;7013:582;7607:41;;-1:-1:-1;;;;;;7607:41:26;-1:-1:-1;;;;;7607:41:26;;;;;7797:5;:149;;7897:17;;7890:56;;:45;;-1:-1:-1;;;7897:17:26;;7890:45;7897:17;;;7890:25;;;:45;;;:29;:45::i;:::-;:54;:56::i;:::-;7797:149;;;7825:17;;7818:56;;:45;;-1:-1:-1;;;7825:17:26;;7818:45;7825:17;;;7818:25;;;:45;;;:29;:45::i;:56::-;7777:169;;;;;;;-1:-1:-1;;;;;7777:169:26;;;-1:-1:-1;;;7777:169:26;;;;;;;-1:-1:-1;6225:1729:26;;;-1:-1:-1;;;;;;;;;;;;6225:1729:26:o;1132:357:27:-;1290:11;1283:18;;:4;:18;;;;;;;;:23;;;1275:32;;;;;;1353:13;1368:12;1384:28;1400:11;1393:18;;:4;:18;;;;;;;;1384:8;:28::i;:::-;1438:1;1460:13;;;;;1423:12;1460:13;;;;;;;;;;;;:21;;1438:11;;;;;;;;1460:21;;;;;;-1:-1:-1;;;;1132:357:27:o;3409:1604:26:-;3768:15;;;;;;;3676:28;3768:15;;;;;;;;;;;3815;;;;;;;;;;3676:28;;;;3768:15;;3815;3676:28;;;;3962:24;;;;;3958:362;;-1:-1:-1;;4025:27:26;;;;4089;;;;3958:362;;;4194:5;:27;;;4171:20;:50;4149:72;;4281:5;:27;;;4258:20;:50;4236:72;;3958:362;4371:27;4409;4465:9;4451:23;;:11;:23;;;4447:361;;;-1:-1:-1;;4513:27:26;;;;4577;;;;4447:361;;;4682:5;:27;;;4659:20;:50;4637:72;;4769:5;:27;;;4746:20;:50;4724:72;;4447:361;4843:42;;;;:64;;;;;4941:42;;;;:64;;;;;-1:-1:-1;3409:1604:26;;-1:-1:-1;;;;;;;3409:1604:26:o;2068:1399:22:-;2249:24;;;;;;;;;;-1:-1:-1;;;;;2249:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2249:24:22;;;;;;;;;:17;2322:19;;;;2318:280;;2366:15;;-1:-1:-1;;;;;2366:19:22;2358:34;;;;;-1:-1:-1;;;2358:34:22;;;;;;;;;;;;-1:-1:-1;;;2358:34:22;;;;;;;;;;;;;;;-1:-1:-1;2467:15:22;;2318:280;;;2554:15;;2531:55;;2571:14;2531:22;:55::i;:::-;2515:71;;2318:280;2649:19;2693:107;2732:5;:30;;;2709:20;:53;2764:5;:15;;;-1:-1:-1;;;;;2693:107:22;-1:-1:-1;;;2693:15:22;:107::i;:::-;2649:162;;2822:19;2866:107;2905:5;:30;;;2882:20;:53;2937:5;:15;;;-1:-1:-1;;;;;2866:107:22;-1:-1:-1;;;2866:15:22;:107::i;:::-;2822:162;;3033:14;:19;;3051:1;3033:19;3029:55;;3054:30;;-1:-1:-1;;;;;;3054:30:22;-1:-1:-1;;;;;3054:30:22;;;;;3029:55;3095:29;;;:52;;;3158:29;;;:52;;;-1:-1:-1;;;;;3225:15:22;;;;;:34;;;3258:1;3244:11;-1:-1:-1;;;;;3244:15:22;;3225:34;3221:239;;;3371:16;;;:31;;-1:-1:-1;;;;;;3371:31:22;;-1:-1:-1;;;;;3371:31:22;;;;;;;;3417;;;-1:-1:-1;;;3417:31:22;;;;;;;;;;;;;;;3221:239;2068:1399;;;;;;;;:::o;8146:114:26:-;8242:10;;;;;;;;;;;;;;;;;;8235:17;;;;;;;;;;;;;;;;;;8146:114::o;366:113:23:-;469:1;-1:-1:-1;;;;;449:21:23;;;;441:30;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","lmPool()":"540d4918","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint32,uint32)":"b0d0d211","setLmPool(address)":"cc7e7fa2","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol0Old\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol1Old\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol0New\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol1New\",\"type\":\"uint32\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SetLmPoolEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeesToken0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeesToken1\",\"type\":\"uint128\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lmPool\",\"outputs\":[{\"internalType\":\"contract IBubblySwapLmPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"noDelegateCall is applied indirectly via _modifyPosition\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapFlashCallback#BubblySwapFlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"not locked because it initializes unlocked\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"noDelegateCall is applied indirectly via _modifyPosition\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapSwapCallback#BubblySwapSwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"stateVariables\":{\"factory\":{\"return\":\"The contract address\"},\"fee\":{\"return\":\"The fee\"},\"feeGrowthGlobal0X128\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128\":{\"details\":\"This value can overflow the uint256\"},\"liquidity\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"return\":\"The max amount of liquidity per tick\"},\"observations\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"return\":\"blockTimestamp The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"},\"positions\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"return\":\"_liquidity The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"},\"protocolFees\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0\":{\"return\":\"sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"},\"tickSpacing\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"return\":\"The tick spacing\"},\"ticks\":{\"params\":{\"tick\":\"The tick to look up\"},\"return\":\"liquidityGross the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"},\"token0\":{\"return\":\"The token contract address\"},\"token1\":{\"return\":\"The token contract address\"}},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint32,uint32,uint32,uint32)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint128,uint128)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IBubblySwapFactory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BubblySwapPool.sol\":\"BubblySwapPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"@pancakeswap/v3-lm-pool/contracts/interfaces/IBubblySwapLmPool.sol\":{\"keccak256\":\"0x76ab49314fc5c8efadfcbcdce2b71acb0a1effbdf5e6fdb93d211655d82176b1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dcdb849ebe2a8e13109926de517835d8721e1d91e9e9007dacc7e65ede679192\",\"dweb:/ipfs/QmSAwjrxiRQtaHfnNfQWwA2H8wRvneZsZfqCUe5zxHKTRx\"]},\"contracts/BubblySwapPool.sol\":{\"keccak256\":\"0xa567b765eb5c18ad978f2fbdbb6586d1b16fe66474185a4d46900c1a0fa8cf93\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9f3b757968b87cd0b64930f47c34ac0a0f6c2e673d22a993458dd706e8ef55f9\",\"dweb:/ipfs/Qmbyr5YAXbdsAxC7tYiLxWJTz2kVHWBSH3iEHtLeHGAb92\"]},\"contracts/interfaces/IBubblySwapFactory.sol\":{\"keccak256\":\"0xb01904a03f1e2fa2ddc861dda4baa160a3a3740c17f44a846bfb107f83fc043f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d19020a5c92c4066261958b9acb59ef93e1b6ed6c1049fdc2adc4e64436acead\",\"dweb:/ipfs/QmTzFGMhjpmAqTBVkg4ehmoUWLsPaw9zNiEdBow555fVt3\"]},\"contracts/interfaces/IBubblySwapPool.sol\":{\"keccak256\":\"0x04718c8575da69215d8fb250da4cfb4de19fe289af963d9fb21a8252b6939898\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4ce8039fbd270a7f7209d1c3b328cf5ffbeb84e44a21c146c4ec0ae5a3fe3663\",\"dweb:/ipfs/QmZQXZ1fFQtsYXxZRWno1CsVTdsBozmmN8NXvCwtx2FoNF\"]},\"contracts/interfaces/IBubblySwapPoolDeployer.sol\":{\"keccak256\":\"0x2d3160423596a8a94bcb3e190ad3ecc483cf56d4e3df0efcc9442ec64e73eb40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b389509605e0e1875e76042ae9a7ab09d3d67248b14c9b7571f681f30ec3ea5b\",\"dweb:/ipfs/QmS5qtNJssLDBSJukj4CQpsyXcQ7bq6QoGrfFCT2TAiJxd\"]},\"contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x80c98ebee8f4d10912c7cd88d5f0bfebd459281c2ab0058fa976a06c603a0d92\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://70a2ac7f351d0d582cec545bab772beb56268e981b3b537be8db3c09b7000b92\",\"dweb:/ipfs/QmRVmM5kodxLC3pztKQLXqrJcoYuot1mNfqVVx1jTjVn9Q\"]},\"contracts/interfaces/callback/IBubblySwapFlashCallback.sol\":{\"keccak256\":\"0x295d8a6ff25951f9ae88de8c1aa542cf8f5b88687dee858a41d4ffa443f52c8d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://db28ee08f567800feec736dc2c13e149a92ae586efe9fc7c97ae35f803a7bce5\",\"dweb:/ipfs/QmNRmNJ8c2YdsD73H7kcqWD8otLxe28BDFGM3EtH6XzPDK\"]},\"contracts/interfaces/callback/IBubblySwapMintCallback.sol\":{\"keccak256\":\"0xfbb4e1da5b12971d63473a70f985ef1ae089941e0d9c1d135e1c8516164ac008\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fb0a31a6414552af3e79c33b3f998b7a148312c319c668db078c2629ea8579ab\",\"dweb:/ipfs/QmUxpfJgX3QAjPaG3gChFdmiUaeBzb22x1HLrBG1USEQDk\"]},\"contracts/interfaces/callback/IBubblySwapSwapCallback.sol\":{\"keccak256\":\"0x0e353890c51aa6258d1d593055bb1fc152d36acf9522919f9a91b189cbc708c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f1f7392e44d791bd9f4a4a58355253d6fe2fc397bb9b16727bac69538c9e4d\",\"dweb:/ipfs/QmfQmTtYF9EbBzDuyAejNQQB3bo2zmCsta9sGSPzbWQZBU\"]},\"contracts/interfaces/pool/IBubblySwapPoolActions.sol\":{\"keccak256\":\"0x10162ae4f817c5578b153c8174799acb93c0a4eed8bdb1f1efddfd91fa7e5cee\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://65931766b9ab10b849a2eca91e59fa653658d767c296059570d6253e62ab8346\",\"dweb:/ipfs/QmPyZJQ7d1cdYnCcbAuXzgtmuWpzS2JaVA2FYAe1tjkDGR\"]},\"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol\":{\"keccak256\":\"0xca5b6ad620b4ae83c7c0df3f51a61304c0f3ad8d0a7018c0de7b8aadfeb9bded\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d987ef7de8e31bd725c456fd15f4d087ab21dcf412ff9553d6284fa10273e887\",\"dweb:/ipfs/QmbFNVsWi4NfKesLJY39WguB2s2FEhQm557nhtHVPSrkCX\"]},\"contracts/interfaces/pool/IBubblySwapPoolEvents.sol\":{\"keccak256\":\"0x2a9b0baf1c498198a593ccb329a3290bdc85370961a6b1a782f68cb2bf3cfa4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d70b9590e5cfc31c8c17338f7dc41051e914a25369e6050f66b2721d9dfa683\",\"dweb:/ipfs/QmT82E6rAPC1xeuCE2fSRhuHdBoib5NSCNahrAHBRC87eP\"]},\"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol\":{\"keccak256\":\"0xb3eca3b43bb93f43ef2a0dc672f4a3ab4b51854bdcfbf8aa36dfae51256c1cad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b858d7d2a3f833550e930a2d26f185b0e5232b77e078a8e838fc211308dcc8b9\",\"dweb:/ipfs/QmVY7mPjvHAkwfFaXLEx6hFMmCe6X4nnvn7dYrx7w2P6ot\"]},\"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol\":{\"keccak256\":\"0x292d54fb70d263073560b6f4544eca8514f6e6760871caa23bb8392fc48eba3a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3934020093f288db3abba5724616bdcdfc99c99fac7e7b945bfcebfa29a0f2ac\",\"dweb:/ipfs/QmYDUdj5xqryQ17zsYe9fcddmejedG3Ewa5fvf35XKCktr\"]},\"contracts/interfaces/pool/IBubblySwapPoolState.sol\":{\"keccak256\":\"0x3358e6a49867624431ad7576238f7e912dd1624b21638c156fa717698a0da48d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://16f953bf7b356e4ae8c8efe490df07912dc63c83afea329d3a00ef8377f984bc\",\"dweb:/ipfs/QmXcRsrq3r7bsNUZG7CUKVkpJNoMv64ayz2kaxTd4oM4mK\"]},\"contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x14c52bf69e189d123dc9fa84ebdca0d879cb020b7df4953678345a8e567aaf7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aba03531acefeef92920d5208618ae8dfa9f9a918e2c5bfbf5798110ba8f60de\",\"dweb:/ipfs/QmUSm4Js5hMFvhBW4DvMhBPhhXTbwZ8ix9beZUNEppvAhv\"]},\"contracts/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x558d30194d1a7f76eb5e983633625efd87b13ac0862792a69a305ce69003ab14\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89bca54921a13c0c863c055f18b3108582491fcc091d7188b58e05786c7f2b55\",\"dweb:/ipfs/QmfS5jM1WxULWx4FNB3CJC7KAWDpMpzRgFSGV5dp8RaCJr\"]},\"contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xa32f3be89d31e1641fc6fe7d0fca23412e2c49156e5e98ed8aa7673a0cac96c8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89a87db593c07d1099f7d24548925f96e7f5203da78a30ac591b7ea3a2d219dd\",\"dweb:/ipfs/QmS7n2iZaC16H2nBsjw7EwtAtoWwDinGGgrYS3SDPm3MNo\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xc3c95d7e005f2b27b7edaac7f59a44bd330371f42162f2c4a9bf1a09a11214dc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2adb4027abd82a15c0575bdd06c20329d9d7fe80dd3ed03fad6cde7dbe9afd4a\",\"dweb:/ipfs/QmQR4kZkzUz8aUGyYZ8PczDb5e6MJm5NPZCi6BBgdAxmKN\"]},\"contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x3ec938fd1b7cc8751df9e2ed90fd0abf32ffacc42cf4b6edbf7138629d747944\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a741475c8a3b5ae8eac7d328170c5a6811920dac22d3800197e39abe0ba42e01\",\"dweb:/ipfs/Qmc2fs5kxp437hWxtLZ6CB8g7vt3bkwKLxE7MMo9D5TAF9\"]},\"contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0xace198277a90cabd10817b1226718204a297e3ff70a9937b6a4bea60e7978e1f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e5a79a038cd3b2d5475d2a6ff5d46f28e0d65d1c2cce085d8bf100d7e026a9fa\",\"dweb:/ipfs/QmVDAK77ydqRK74AFV14Z5uEtdoZoKvQNyh2z4C2RNFf7V\"]},\"contracts/libraries/Oracle.sol\":{\"keccak256\":\"0xf5cdfece87d184f71703af5fa80dbdd40b09753ba735b778f28df2aa7d49ff30\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c2d7122e28eec161314b44c7cb3754f1e29878e6e4ac402e51b6b03ea671d1fd\",\"dweb:/ipfs/QmW3nxhgTbhBAR1RxFF2TUyTVdgQt26yozudEDDUjQsxEA\"]},\"contracts/libraries/Position.sol\":{\"keccak256\":\"0x494633643e8e5d3c42bb183ed99a23b494bff34a664327d85dbef179022330bf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bce8e98e8ead06e47a84092a759d03ca5a0556370b5808e7dfa859a3dfa704ab\",\"dweb:/ipfs/QmVP29SbCYH1bKYnSjjoJDSdMZ3NbhyTP26Ff7mpwDeFYi\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x2ce167ecfd192faccc43e6ab3eadf5dcaa4b57bc53215abea354e55b9149bd08\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b2699166ead0922ec7ef5c15aa0f931d9211e98f5d23408e5565a1539c7fd13\",\"dweb:/ipfs/QmURByWGxXgSydaC5KdkCyef8twwZRMTAS1WQv2uJBoAL6\"]},\"contracts/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x3d3d39d16b3c946c91ef0d06f0a63c0c3648327138cdee7d562bfc390aa0fcfe\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4783367d2ce459e88cbeb090308c21af37debea9385bfee421ef4b4b78ca662b\",\"dweb:/ipfs/QmdC6Fd8q7hPs2vKdCowBDgKxXJLt4yFe5P6piLio47vXq\"]},\"contracts/libraries/SwapMath.sol\":{\"keccak256\":\"0x4b509872ad6bb88d7db18c6bfce08bb1631af325e3534233f44302418e672ce5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5907aeeb756607f2cff7cf5a2f2da34405b66e9bdc29ad7830892de974126069\",\"dweb:/ipfs/QmYCw3nq48ygCanLDmg9qLM3WHNgXTbkzSfyrginknpegL\"]},\"contracts/libraries/Tick.sol\":{\"keccak256\":\"0xec04d311d12480d1aaa04c112d16812afb8f91a208e3ca61fcee0b047a54da9f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://86996249f245482cca5f274258fff73b83bd557df55cfc5373621bc36c0aa23f\",\"dweb:/ipfs/QmSoVnef1M4edksbdqpi8nVgNK9PW15s6YjejLxhxTMz1G\"]},\"contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x8c77f0e238b05804fde564a4f26314f6cced0e7eeb71b5d8c6462bf66ec29e1d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://328f83046a865664174f9f2e6ac967ff6cae863804849992f3ea231b23f7b12a\",\"dweb:/ipfs/QmQcFRhoeC1DaCH155ozxPgkov1HWy7Fm7iYAs1YrCK5NX\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xfa4feac39e3d2d34f7b2893e4b73ff0f64625fa909dcf11af40688d220f78c83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://780d7fd2c1468f9dd2ffff1fe98251f4aa985eec20d6ee0b20612390a13e73c7\",\"dweb:/ipfs/Qmabr69tjsqq297fACkSUHpEK3GZh35zbFtdpQRUUJb1ta\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x45053903dbe795b9309eaf4b147093082f99d78b0097f15a8c2a37d42d67d2bc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d994b26b6da1a9b3972ea4e52aa423c65f9359c6a105128f4a357435e21c4b3e\",\"dweb:/ipfs/QmetiZX1jyobSeSnPMgYfhhg8qCsrHfF6GqbttrFLJrJzK\"]},\"contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x3c829e89e91323d9c3e0f15272baa9aa1d28291e7633ee4f1414774e6eca0a7d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f99f38de11092e98d43f1d14061fcfa7309a80ae93d2b7af99c9256c97312c23\",\"dweb:/ipfs/QmQXXUR1PhKUFVZXwwekW23YE9Zy7r3GvdtcDyc2nNTpSb\"]}},\"version\":1}"}},"contracts/interfaces/IBubblySwapFactory.sol":{"IBubblySwapFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"bool","name":"whitelistRequested","type":"bool"},{"indexed":false,"internalType":"bool","name":"enabled","type":"bool"}],"name":"FeeAmountExtraInfoUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"lmPoolDeployer","type":"address"}],"name":"SetLmPoolDeployer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"bool","name":"verified","type":"bool"}],"name":"WhiteListAdded","type":"event"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacingExtraInfo","outputs":[{"internalType":"bool","name":"whitelistRequested","type":"bool"},{"internalType":"bool","name":"enabled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"bool","name":"whitelistRequested","type":"bool"},{"internalType":"bool","name":"enabled","type":"bool"}],"name":"setFeeAmountExtraInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"uint32","name":"feeProtocol0","type":"uint32"},{"internalType":"uint32","name":"feeProtocol1","type":"uint32"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"lmPool","type":"address"}],"name":"setLmPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lmPoolDeployer","type":"address"}],"name":"setLmPoolDeployer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"verified","type":"bool"}],"name":"setWhiteListAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"collectProtocol(address,address,uint128,uint128)":"43db87da","createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","feeAmountTickSpacingExtraInfo(uint24)":"88e8006d","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setFeeAmountExtraInfo(uint24,bool,bool)":"8ff38e80","setFeeProtocol(address,uint32,uint32)":"7e8435e6","setLmPool(address,address)":"11ff5e8d","setLmPoolDeployer(address)":"80d6a792","setOwner(address)":"13af4035","setWhiteListAddress(address,bool)":"e4a86a99"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelistRequested\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"FeeAmountExtraInfoUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lmPoolDeployer\",\"type\":\"address\"}],\"name\":\"SetLmPoolDeployer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"WhiteListAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacingExtraInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"whitelistRequested\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"whitelistRequested\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setFeeAmountExtraInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lmPoolDeployer\",\"type\":\"address\"}],\"name\":\"setLmPoolDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"name\":\"setWhiteListAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"feeAmountTickSpacingExtraInfo(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"whitelistRequested\":\"The flag whether should be created by white list users only\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setFeeAmountExtraInfo(uint24,bool,bool)\":{\"details\":\"Fee amounts can be updated by owner with extra info\",\"params\":{\"enabled\":\"The flag is the fee is enabled or not\",\"whitelistRequested\":\"The flag whether should be created by owner only\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}},\"setWhiteListAddress(address,bool)\":{\"details\":\"Address can be updated by owner with boolean value false\",\"params\":{\"user\":\"The user address that add into white list\"}}},\"title\":\"The interface for the PancakeSwap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"},\"SetLmPoolDeployer(address)\":{\"notice\":\"Emitted when LM pool deployer is set\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"feeAmountTickSpacingExtraInfo(uint24)\":{\"notice\":\"Returns the tick spacing extra info\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setFeeAmountExtraInfo(uint24,bool,bool)\":{\"notice\":\"Set a fee amount extra info\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"},\"setWhiteListAddress(address,bool)\":{\"notice\":\"Set an address into white list\"}},\"notice\":\"The PancakeSwap V3 Factory facilitates creation of PancakeSwap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBubblySwapFactory.sol\":\"IBubblySwapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBubblySwapFactory.sol\":{\"keccak256\":\"0xb01904a03f1e2fa2ddc861dda4baa160a3a3740c17f44a846bfb107f83fc043f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d19020a5c92c4066261958b9acb59ef93e1b6ed6c1049fdc2adc4e64436acead\",\"dweb:/ipfs/QmTzFGMhjpmAqTBVkg4ehmoUWLsPaw9zNiEdBow555fVt3\"]}},\"version\":1}"}},"contracts/interfaces/IBubblySwapPool.sol":{"IBubblySwapPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"feeProtocol0Old","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol1Old","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol0New","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol1New","type":"uint32"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"protocolFeesToken0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"protocolFeesToken1","type":"uint128"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"feeProtocol0","type":"uint32"},{"internalType":"uint32","name":"feeProtocol1","type":"uint32"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lmPool","type":"address"}],"name":"setLmPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint32","name":"feeProtocol","type":"uint32"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint32,uint32)":"b0d0d211","setLmPool(address)":"cc7e7fa2","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol0Old\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol1Old\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol0New\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol1New\",\"type\":\"uint32\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeesToken0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeesToken1\",\"type\":\"uint128\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapFlashCallback#BubblySwapFlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapMintCallback#BubblySwapMintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapSwapCallback#BubblySwapSwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a PancakeSwap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint32,uint32,uint32,uint32)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint128,uint128)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IBubblySwapFactory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"setLmPool(address)\":{\"notice\":\"Set the LM pool to enable liquidity mining\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A PancakeSwap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBubblySwapPool.sol\":\"IBubblySwapPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBubblySwapPool.sol\":{\"keccak256\":\"0x04718c8575da69215d8fb250da4cfb4de19fe289af963d9fb21a8252b6939898\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4ce8039fbd270a7f7209d1c3b328cf5ffbeb84e44a21c146c4ec0ae5a3fe3663\",\"dweb:/ipfs/QmZQXZ1fFQtsYXxZRWno1CsVTdsBozmmN8NXvCwtx2FoNF\"]},\"contracts/interfaces/pool/IBubblySwapPoolActions.sol\":{\"keccak256\":\"0x10162ae4f817c5578b153c8174799acb93c0a4eed8bdb1f1efddfd91fa7e5cee\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://65931766b9ab10b849a2eca91e59fa653658d767c296059570d6253e62ab8346\",\"dweb:/ipfs/QmPyZJQ7d1cdYnCcbAuXzgtmuWpzS2JaVA2FYAe1tjkDGR\"]},\"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol\":{\"keccak256\":\"0xca5b6ad620b4ae83c7c0df3f51a61304c0f3ad8d0a7018c0de7b8aadfeb9bded\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d987ef7de8e31bd725c456fd15f4d087ab21dcf412ff9553d6284fa10273e887\",\"dweb:/ipfs/QmbFNVsWi4NfKesLJY39WguB2s2FEhQm557nhtHVPSrkCX\"]},\"contracts/interfaces/pool/IBubblySwapPoolEvents.sol\":{\"keccak256\":\"0x2a9b0baf1c498198a593ccb329a3290bdc85370961a6b1a782f68cb2bf3cfa4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d70b9590e5cfc31c8c17338f7dc41051e914a25369e6050f66b2721d9dfa683\",\"dweb:/ipfs/QmT82E6rAPC1xeuCE2fSRhuHdBoib5NSCNahrAHBRC87eP\"]},\"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol\":{\"keccak256\":\"0xb3eca3b43bb93f43ef2a0dc672f4a3ab4b51854bdcfbf8aa36dfae51256c1cad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b858d7d2a3f833550e930a2d26f185b0e5232b77e078a8e838fc211308dcc8b9\",\"dweb:/ipfs/QmVY7mPjvHAkwfFaXLEx6hFMmCe6X4nnvn7dYrx7w2P6ot\"]},\"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol\":{\"keccak256\":\"0x292d54fb70d263073560b6f4544eca8514f6e6760871caa23bb8392fc48eba3a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3934020093f288db3abba5724616bdcdfc99c99fac7e7b945bfcebfa29a0f2ac\",\"dweb:/ipfs/QmYDUdj5xqryQ17zsYe9fcddmejedG3Ewa5fvf35XKCktr\"]},\"contracts/interfaces/pool/IBubblySwapPoolState.sol\":{\"keccak256\":\"0x3358e6a49867624431ad7576238f7e912dd1624b21638c156fa717698a0da48d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://16f953bf7b356e4ae8c8efe490df07912dc63c83afea329d3a00ef8377f984bc\",\"dweb:/ipfs/QmXcRsrq3r7bsNUZG7CUKVkpJNoMv64ayz2kaxTd4oM4mK\"]}},\"version\":1}"}},"contracts/interfaces/IBubblySwapPoolDeployer.sol":{"IBubblySwapPoolDeployer":{"abi":[{"inputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"deploy","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"parameters","outputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deploy(address,address,address,uint24,int24)":"fad5359f","parameters()":"89035730"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is used to avoid having constructor arguments in the pool contract, which results in the init code hash of the pool being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\",\"kind\":\"dev\",\"methods\":{\"parameters()\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool Returns factory The factory address Returns token0 The first token of the pool by address sort order Returns token1 The second token of the pool by address sort order Returns fee The fee collected upon every swap in the pool, denominated in hundredths of a bip Returns tickSpacing The minimum number of ticks between initialized ticks\"}},\"title\":\"An interface for a contract that is capable of deploying PancakeSwap V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"parameters()\":{\"notice\":\"Get the parameters to be used in constructing the pool, set transiently during pool creation.\"}},\"notice\":\"A contract that constructs a pool must implement this to pass arguments to the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBubblySwapPoolDeployer.sol\":\"IBubblySwapPoolDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBubblySwapPoolDeployer.sol\":{\"keccak256\":\"0x2d3160423596a8a94bcb3e190ad3ecc483cf56d4e3df0efcc9442ec64e73eb40\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b389509605e0e1875e76042ae9a7ab09d3d67248b14c9b7571f681f30ec3ea5b\",\"dweb:/ipfs/QmS5qtNJssLDBSJukj4CQpsyXcQ7bq6QoGrfFCT2TAiJxd\"]}},\"version\":1}"}},"contracts/interfaces/IERC20Minimal.sol":{"IERC20Minimal":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for PancakeSwap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in PancakeSwap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20Minimal.sol\":\"IERC20Minimal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x80c98ebee8f4d10912c7cd88d5f0bfebd459281c2ab0058fa976a06c603a0d92\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://70a2ac7f351d0d582cec545bab772beb56268e981b3b537be8db3c09b7000b92\",\"dweb:/ipfs/QmRVmM5kodxLC3pztKQLXqrJcoYuot1mNfqVVx1jTjVn9Q\"]}},\"version\":1}"}},"contracts/interfaces/callback/IBubblySwapFlashCallback.sol":{"IBubblySwapFlashCallback":{"abi":[{"inputs":[{"internalType":"uint256","name":"fee0","type":"uint256"},{"internalType":"uint256","name":"fee1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"BubblySwapFlashCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BubblySwapFlashCallback(uint256,uint256,bytes)":"6a9b97f0"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"BubblySwapFlashCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"BubblySwapFlashCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must repay the pool the tokens sent by flash plus the computed fee amounts. The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\",\"params\":{\"data\":\"Any data passed through by the caller via the IBubblySwapPoolActions#flash call\",\"fee0\":\"The fee amount in token0 due to the pool by the end of the flash\",\"fee1\":\"The fee amount in token1 due to the pool by the end of the flash\"}}},\"title\":\"Callback for IBubblySwapPoolActions#flash\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BubblySwapFlashCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after transferring to the recipient from IBubblySwapPool#flash.\"}},\"notice\":\"Any contract that calls IBubblySwapPoolActions#flash must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/callback/IBubblySwapFlashCallback.sol\":\"IBubblySwapFlashCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/callback/IBubblySwapFlashCallback.sol\":{\"keccak256\":\"0x295d8a6ff25951f9ae88de8c1aa542cf8f5b88687dee858a41d4ffa443f52c8d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://db28ee08f567800feec736dc2c13e149a92ae586efe9fc7c97ae35f803a7bce5\",\"dweb:/ipfs/QmNRmNJ8c2YdsD73H7kcqWD8otLxe28BDFGM3EtH6XzPDK\"]}},\"version\":1}"}},"contracts/interfaces/callback/IBubblySwapMintCallback.sol":{"IBubblySwapMintCallback":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount0Owed","type":"uint256"},{"internalType":"uint256","name":"amount1Owed","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"BubblySwapMintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BubblySwapMintCallback(uint256,uint256,bytes)":"724ffb81"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"BubblySwapMintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"BubblySwapMintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IBubblySwapPoolActions#mint call\"}}},\"title\":\"Callback for IBubblySwapPoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BubblySwapMintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IBubblySwapPool#mint.\"}},\"notice\":\"Any contract that calls IBubblySwapPoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/callback/IBubblySwapMintCallback.sol\":\"IBubblySwapMintCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/callback/IBubblySwapMintCallback.sol\":{\"keccak256\":\"0xfbb4e1da5b12971d63473a70f985ef1ae089941e0d9c1d135e1c8516164ac008\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fb0a31a6414552af3e79c33b3f998b7a148312c319c668db078c2629ea8579ab\",\"dweb:/ipfs/QmUxpfJgX3QAjPaG3gChFdmiUaeBzb22x1HLrBG1USEQDk\"]}},\"version\":1}"}},"contracts/interfaces/callback/IBubblySwapSwapCallback.sol":{"IBubblySwapSwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"BubblySwapSwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BubblySwapSwapCallback(int256,int256,bytes)":"ce41b35a"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"BubblySwapSwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"BubblySwapSwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a BubblySwapPool deployed by the canonical BubblySwapFactory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IBubblySwapPoolActions#swap call\"}}},\"title\":\"Callback for IBubblySwapPoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"BubblySwapSwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IBubblySwapPool#swap.\"}},\"notice\":\"Any contract that calls IBubblySwapPoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/callback/IBubblySwapSwapCallback.sol\":\"IBubblySwapSwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/callback/IBubblySwapSwapCallback.sol\":{\"keccak256\":\"0x0e353890c51aa6258d1d593055bb1fc152d36acf9522919f9a91b189cbc708c0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7f1f7392e44d791bd9f4a4a58355253d6fe2fc397bb9b16727bac69538c9e4d\",\"dweb:/ipfs/QmfQmTtYF9EbBzDuyAejNQQB3bo2zmCsta9sGSPzbWQZBU\"]}},\"version\":1}"}},"contracts/interfaces/pool/IBubblySwapPoolActions.sol":{"IBubblySwapPoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapFlashCallback#BubblySwapFlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapMintCallback#BubblySwapMintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IBubblySwapSwapCallback#BubblySwapSwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IBubblySwapPoolActions.sol\":\"IBubblySwapPoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IBubblySwapPoolActions.sol\":{\"keccak256\":\"0x10162ae4f817c5578b153c8174799acb93c0a4eed8bdb1f1efddfd91fa7e5cee\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://65931766b9ab10b849a2eca91e59fa653658d767c296059570d6253e62ab8346\",\"dweb:/ipfs/QmPyZJQ7d1cdYnCcbAuXzgtmuWpzS2JaVA2FYAe1tjkDGR\"]}},\"version\":1}"}},"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol":{"IBubblySwapPoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol\":\"IBubblySwapPoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IBubblySwapPoolDerivedState.sol\":{\"keccak256\":\"0xca5b6ad620b4ae83c7c0df3f51a61304c0f3ad8d0a7018c0de7b8aadfeb9bded\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d987ef7de8e31bd725c456fd15f4d087ab21dcf412ff9553d6284fa10273e887\",\"dweb:/ipfs/QmbFNVsWi4NfKesLJY39WguB2s2FEhQm557nhtHVPSrkCX\"]}},\"version\":1}"}},"contracts/interfaces/pool/IBubblySwapPoolEvents.sol":{"IBubblySwapPoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint32","name":"feeProtocol0Old","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol1Old","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol0New","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"feeProtocol1New","type":"uint32"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"},{"indexed":false,"internalType":"uint128","name":"protocolFeesToken0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"protocolFeesToken1","type":"uint128"}],"name":"Swap","type":"event"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol0Old\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol1Old\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol0New\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"feeProtocol1New\",\"type\":\"uint32\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeesToken0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeesToken1\",\"type\":\"uint128\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint32,uint32,uint32,uint32)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint128,uint128)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"protocolFeesToken0\":\"The protocol fee of token0 in the swap\",\"protocolFeesToken1\":\"The protocol fee of token1 in the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint32,uint32,uint32,uint32)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24,uint128,uint128)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IBubblySwapPoolEvents.sol\":\"IBubblySwapPoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IBubblySwapPoolEvents.sol\":{\"keccak256\":\"0x2a9b0baf1c498198a593ccb329a3290bdc85370961a6b1a782f68cb2bf3cfa4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0d70b9590e5cfc31c8c17338f7dc41051e914a25369e6050f66b2721d9dfa683\",\"dweb:/ipfs/QmT82E6rAPC1xeuCE2fSRhuHdBoib5NSCNahrAHBRC87eP\"]}},\"version\":1}"}},"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol":{"IBubblySwapPoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IBubblySwapFactory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol\":\"IBubblySwapPoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IBubblySwapPoolImmutables.sol\":{\"keccak256\":\"0xb3eca3b43bb93f43ef2a0dc672f4a3ab4b51854bdcfbf8aa36dfae51256c1cad\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b858d7d2a3f833550e930a2d26f185b0e5232b77e078a8e838fc211308dcc8b9\",\"dweb:/ipfs/QmVY7mPjvHAkwfFaXLEx6hFMmCe6X4nnvn7dYrx7w2P6ot\"]}},\"version\":1}"}},"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol":{"IBubblySwapPoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"feeProtocol0","type":"uint32"},{"internalType":"uint32","name":"feeProtocol1","type":"uint32"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"lmPool","type":"address"}],"name":"setLmPool","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint32,uint32)":"b0d0d211","setLmPool(address)":"cc7e7fa2"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"setLmPool(address)\":{\"notice\":\"Set the LM pool to enable liquidity mining\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol\":\"IBubblySwapPoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IBubblySwapPoolOwnerActions.sol\":{\"keccak256\":\"0x292d54fb70d263073560b6f4544eca8514f6e6760871caa23bb8392fc48eba3a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3934020093f288db3abba5724616bdcdfc99c99fac7e7b945bfcebfa29a0f2ac\",\"dweb:/ipfs/QmYDUdj5xqryQ17zsYe9fcddmejedG3Ewa5fvf35XKCktr\"]}},\"version\":1}"}},"contracts/interfaces/pool/IBubblySwapPoolState.sol":{"IBubblySwapPoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint32","name":"feeProtocol","type":"uint32"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/pool/IBubblySwapPoolState.sol\":\"IBubblySwapPoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/pool/IBubblySwapPoolState.sol\":{\"keccak256\":\"0x3358e6a49867624431ad7576238f7e912dd1624b21638c156fa717698a0da48d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://16f953bf7b356e4ae8c8efe490df07912dc63c83afea329d3a00ef8377f984bc\",\"dweb:/ipfs/QmXcRsrq3r7bsNUZG7CUKVkpJNoMv64ayz2kaxTd4oM4mK\"]}},\"version\":1}"}},"contracts/libraries/BitMath.sol":{"BitMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"192:2690:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"192:2690:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x14c52bf69e189d123dc9fa84ebdca0d879cb020b7df4953678345a8e567aaf7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aba03531acefeef92920d5208618ae8dfa9f9a918e2c5bfbf5798110ba8f60de\",\"dweb:/ipfs/QmUSm4Js5hMFvhBW4DvMhBPhhXTbwZ8ix9beZUNEppvAhv\"]}},\"version\":1}"}},"contracts/libraries/FixedPoint128.sol":{"FixedPoint128":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"216:101:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"216:101:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint128\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/FixedPoint128.sol\":\"FixedPoint128\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x558d30194d1a7f76eb5e983633625efd87b13ac0862792a69a305ce69003ab14\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89bca54921a13c0c863c055f18b3108582491fcc091d7188b58e05786c7f2b55\",\"dweb:/ipfs/QmfS5jM1WxULWx4FNB3CJC7KAWDpMpzRgFSGV5dp8RaCJr\"]}},\"version\":1}"}},"contracts/libraries/FixedPoint96.sol":{"FixedPoint96":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"251:137:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"251:137:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xa32f3be89d31e1641fc6fe7d0fca23412e2c49156e5e98ed8aa7673a0cac96c8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89a87db593c07d1099f7d24548925f96e7f5203da78a30ac591b7ea3a2d219dd\",\"dweb:/ipfs/QmS7n2iZaC16H2nBsjw7EwtAtoWwDinGGgrYS3SDPm3MNo\"]}},\"version\":1}"}},"contracts/libraries/FullMath.sol":{"FullMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"381:4879:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"381:4879:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xc3c95d7e005f2b27b7edaac7f59a44bd330371f42162f2c4a9bf1a09a11214dc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2adb4027abd82a15c0575bdd06c20329d9d7fe80dd3ed03fad6cde7dbe9afd4a\",\"dweb:/ipfs/QmQR4kZkzUz8aUGyYZ8PczDb5e6MJm5NPZCi6BBgdAxmKN\"]}},\"version\":1}"}},"contracts/libraries/LiquidityMath.sol":{"LiquidityMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"113:524:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"113:524:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math library for liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LiquidityMath.sol\":\"LiquidityMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x3ec938fd1b7cc8751df9e2ed90fd0abf32ffacc42cf4b6edbf7138629d747944\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a741475c8a3b5ae8eac7d328170c5a6811920dac22d3800197e39abe0ba42e01\",\"dweb:/ipfs/Qmc2fs5kxp437hWxtLZ6CB8g7vt3bkwKLxE7MMo9D5TAF9\"]}},\"version\":1}"}},"contracts/libraries/LowGasSafeMath.sol":{"LowGasSafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"254:1486:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"254:1486:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LowGasSafeMath.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0xace198277a90cabd10817b1226718204a297e3ff70a9937b6a4bea60e7978e1f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e5a79a038cd3b2d5475d2a6ff5d46f28e0d65d1c2cce085d8bf100d7e026a9fa\",\"dweb:/ipfs/QmVDAK77ydqRK74AFV14Z5uEtdoZoKvQNyh2z4C2RNFf7V\"]}},\"version\":1}"}},"contracts/libraries/Oracle.sol":{"Oracle":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"701:16134:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"701:16134:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Instances of stored oracle data, \\\"observations\\\", are collected in the oracle array Every pool is initialized with an oracle array length of 1. Anyone can pay the SSTOREs to increase the maximum length of the oracle array. New slots will be added when the array is fully populated. Observations are overwritten when the full length of the oracle array is populated. The most recent observation is available, independent of the length of the oracle array, by passing 0 to observe()\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides price and liquidity data useful for a wide variety of system designs\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Oracle.sol\":\"Oracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/Oracle.sol\":{\"keccak256\":\"0xf5cdfece87d184f71703af5fa80dbdd40b09753ba735b778f28df2aa7d49ff30\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c2d7122e28eec161314b44c7cb3754f1e29878e6e4ac402e51b6b03ea671d1fd\",\"dweb:/ipfs/QmW3nxhgTbhBAR1RxFF2TUyTVdgQt26yozudEDDUjQsxEA\"]}},\"version\":1}"}},"contracts/libraries/Position.sol":{"Position":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"375:3095:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"375:3095:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Positions store additional state for tracking fees owed to the position\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Position\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Positions represent an owner address' liquidity between a lower and upper tick boundary\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Position.sol\":\"Position\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x558d30194d1a7f76eb5e983633625efd87b13ac0862792a69a305ce69003ab14\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89bca54921a13c0c863c055f18b3108582491fcc091d7188b58e05786c7f2b55\",\"dweb:/ipfs/QmfS5jM1WxULWx4FNB3CJC7KAWDpMpzRgFSGV5dp8RaCJr\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xc3c95d7e005f2b27b7edaac7f59a44bd330371f42162f2c4a9bf1a09a11214dc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2adb4027abd82a15c0575bdd06c20329d9d7fe80dd3ed03fad6cde7dbe9afd4a\",\"dweb:/ipfs/QmQR4kZkzUz8aUGyYZ8PczDb5e6MJm5NPZCi6BBgdAxmKN\"]},\"contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x3ec938fd1b7cc8751df9e2ed90fd0abf32ffacc42cf4b6edbf7138629d747944\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a741475c8a3b5ae8eac7d328170c5a6811920dac22d3800197e39abe0ba42e01\",\"dweb:/ipfs/Qmc2fs5kxp437hWxtLZ6CB8g7vt3bkwKLxE7MMo9D5TAF9\"]},\"contracts/libraries/Position.sol\":{\"keccak256\":\"0x494633643e8e5d3c42bb183ed99a23b494bff34a664327d85dbef179022330bf\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://bce8e98e8ead06e47a84092a759d03ca5a0556370b5808e7dfa859a3dfa704ab\",\"dweb:/ipfs/QmVP29SbCYH1bKYnSjjoJDSdMZ3NbhyTP26Ff7mpwDeFYi\"]}},\"version\":1}"}},"contracts/libraries/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"170:904:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"170:904:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x2ce167ecfd192faccc43e6ab3eadf5dcaa4b57bc53215abea354e55b9149bd08\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b2699166ead0922ec7ef5c15aa0f931d9211e98f5d23408e5565a1539c7fd13\",\"dweb:/ipfs/QmURByWGxXgSydaC5KdkCyef8twwZRMTAS1WQv2uJBoAL6\"]}},\"version\":1}"}},"contracts/libraries/SqrtPriceMath.sol":{"SqrtPriceMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"389:10552:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"389:10552:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Functions based on Q64.96 sqrt price and liquidity\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains the math that uses square root of price as a Q64.96 and liquidity to compute deltas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SqrtPriceMath.sol\":\"SqrtPriceMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xa32f3be89d31e1641fc6fe7d0fca23412e2c49156e5e98ed8aa7673a0cac96c8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89a87db593c07d1099f7d24548925f96e7f5203da78a30ac591b7ea3a2d219dd\",\"dweb:/ipfs/QmS7n2iZaC16H2nBsjw7EwtAtoWwDinGGgrYS3SDPm3MNo\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xc3c95d7e005f2b27b7edaac7f59a44bd330371f42162f2c4a9bf1a09a11214dc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2adb4027abd82a15c0575bdd06c20329d9d7fe80dd3ed03fad6cde7dbe9afd4a\",\"dweb:/ipfs/QmQR4kZkzUz8aUGyYZ8PczDb5e6MJm5NPZCi6BBgdAxmKN\"]},\"contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0xace198277a90cabd10817b1226718204a297e3ff70a9937b6a4bea60e7978e1f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e5a79a038cd3b2d5475d2a6ff5d46f28e0d65d1c2cce085d8bf100d7e026a9fa\",\"dweb:/ipfs/QmVDAK77ydqRK74AFV14Z5uEtdoZoKvQNyh2z4C2RNFf7V\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x2ce167ecfd192faccc43e6ab3eadf5dcaa4b57bc53215abea354e55b9149bd08\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b2699166ead0922ec7ef5c15aa0f931d9211e98f5d23408e5565a1539c7fd13\",\"dweb:/ipfs/QmURByWGxXgSydaC5KdkCyef8twwZRMTAS1WQv2uJBoAL6\"]},\"contracts/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x3d3d39d16b3c946c91ef0d06f0a63c0c3648327138cdee7d562bfc390aa0fcfe\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4783367d2ce459e88cbeb090308c21af37debea9385bfee421ef4b4b78ca662b\",\"dweb:/ipfs/QmdC6Fd8q7hPs2vKdCowBDgKxXJLt4yFe5P6piLio47vXq\"]},\"contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x3c829e89e91323d9c3e0f15272baa9aa1d28291e7633ee4f1414774e6eca0a7d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f99f38de11092e98d43f1d14061fcfa7309a80ae93d2b7af99c9256c97312c23\",\"dweb:/ipfs/QmQXXUR1PhKUFVZXwwekW23YE9Zy7r3GvdtcDyc2nNTpSb\"]}},\"version\":1}"}},"contracts/libraries/SwapMath.sol":{"SwapMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"308:4429:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"308:4429:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Computes the result of a swap within ticks\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for computing the result of a swap within a single tick price range, i.e., a single tick.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SwapMath.sol\":\"SwapMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0xa32f3be89d31e1641fc6fe7d0fca23412e2c49156e5e98ed8aa7673a0cac96c8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://89a87db593c07d1099f7d24548925f96e7f5203da78a30ac591b7ea3a2d219dd\",\"dweb:/ipfs/QmS7n2iZaC16H2nBsjw7EwtAtoWwDinGGgrYS3SDPm3MNo\"]},\"contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xc3c95d7e005f2b27b7edaac7f59a44bd330371f42162f2c4a9bf1a09a11214dc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2adb4027abd82a15c0575bdd06c20329d9d7fe80dd3ed03fad6cde7dbe9afd4a\",\"dweb:/ipfs/QmQR4kZkzUz8aUGyYZ8PczDb5e6MJm5NPZCi6BBgdAxmKN\"]},\"contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0xace198277a90cabd10817b1226718204a297e3ff70a9937b6a4bea60e7978e1f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e5a79a038cd3b2d5475d2a6ff5d46f28e0d65d1c2cce085d8bf100d7e026a9fa\",\"dweb:/ipfs/QmVDAK77ydqRK74AFV14Z5uEtdoZoKvQNyh2z4C2RNFf7V\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x2ce167ecfd192faccc43e6ab3eadf5dcaa4b57bc53215abea354e55b9149bd08\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b2699166ead0922ec7ef5c15aa0f931d9211e98f5d23408e5565a1539c7fd13\",\"dweb:/ipfs/QmURByWGxXgSydaC5KdkCyef8twwZRMTAS1WQv2uJBoAL6\"]},\"contracts/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x3d3d39d16b3c946c91ef0d06f0a63c0c3648327138cdee7d562bfc390aa0fcfe\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4783367d2ce459e88cbeb090308c21af37debea9385bfee421ef4b4b78ca662b\",\"dweb:/ipfs/QmdC6Fd8q7hPs2vKdCowBDgKxXJLt4yFe5P6piLio47vXq\"]},\"contracts/libraries/SwapMath.sol\":{\"keccak256\":\"0x4b509872ad6bb88d7db18c6bfce08bb1631af325e3534233f44302418e672ce5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5907aeeb756607f2cff7cf5a2f2da34405b66e9bdc29ad7830892de974126069\",\"dweb:/ipfs/QmYCw3nq48ygCanLDmg9qLM3WHNgXTbkzSfyrginknpegL\"]},\"contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x3c829e89e91323d9c3e0f15272baa9aa1d28291e7633ee4f1414774e6eca0a7d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f99f38de11092e98d43f1d14061fcfa7309a80ae93d2b7af99c9256c97312c23\",\"dweb:/ipfs/QmQXXUR1PhKUFVZXwwekW23YE9Zy7r3GvdtcDyc2nNTpSb\"]}},\"version\":1}"}},"contracts/libraries/Tick.sol":{"Tick":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"303:9596:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"303:9596:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Tick\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains functions for managing tick processes and relevant calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Tick.sol\":\"Tick\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/LiquidityMath.sol\":{\"keccak256\":\"0x3ec938fd1b7cc8751df9e2ed90fd0abf32ffacc42cf4b6edbf7138629d747944\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a741475c8a3b5ae8eac7d328170c5a6811920dac22d3800197e39abe0ba42e01\",\"dweb:/ipfs/Qmc2fs5kxp437hWxtLZ6CB8g7vt3bkwKLxE7MMo9D5TAF9\"]},\"contracts/libraries/LowGasSafeMath.sol\":{\"keccak256\":\"0xace198277a90cabd10817b1226718204a297e3ff70a9937b6a4bea60e7978e1f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e5a79a038cd3b2d5475d2a6ff5d46f28e0d65d1c2cce085d8bf100d7e026a9fa\",\"dweb:/ipfs/QmVDAK77ydqRK74AFV14Z5uEtdoZoKvQNyh2z4C2RNFf7V\"]},\"contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x2ce167ecfd192faccc43e6ab3eadf5dcaa4b57bc53215abea354e55b9149bd08\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7b2699166ead0922ec7ef5c15aa0f931d9211e98f5d23408e5565a1539c7fd13\",\"dweb:/ipfs/QmURByWGxXgSydaC5KdkCyef8twwZRMTAS1WQv2uJBoAL6\"]},\"contracts/libraries/Tick.sol\":{\"keccak256\":\"0xec04d311d12480d1aaa04c112d16812afb8f91a208e3ca61fcee0b047a54da9f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://86996249f245482cca5f274258fff73b83bd557df55cfc5373621bc36c0aa23f\",\"dweb:/ipfs/QmSoVnef1M4edksbdqpi8nVgNK9PW15s6YjejLxhxTMz1G\"]},\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xfa4feac39e3d2d34f7b2893e4b73ff0f64625fa909dcf11af40688d220f78c83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://780d7fd2c1468f9dd2ffff1fe98251f4aa985eec20d6ee0b20612390a13e73c7\",\"dweb:/ipfs/Qmabr69tjsqq297fACkSUHpEK3GZh35zbFtdpQRUUJb1ta\"]}},\"version\":1}"}},"contracts/libraries/TickBitmap.sol":{"TickBitmap":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"347:3849:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"347:3849:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x14c52bf69e189d123dc9fa84ebdca0d879cb020b7df4953678345a8e567aaf7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://aba03531acefeef92920d5208618ae8dfa9f9a918e2c5bfbf5798110ba8f60de\",\"dweb:/ipfs/QmUSm4Js5hMFvhBW4DvMhBPhhXTbwZ8ix9beZUNEppvAhv\"]},\"contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x8c77f0e238b05804fde564a4f26314f6cced0e7eeb71b5d8c6462bf66ec29e1d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://328f83046a865664174f9f2e6ac967ff6cae863804849992f3ea231b23f7b12a\",\"dweb:/ipfs/QmQcFRhoeC1DaCH155ozxPgkov1HWy7Fm7iYAs1YrCK5NX\"]}},\"version\":1}"}},"contracts/libraries/TickMath.sol":{"TickMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"319:8529:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"319:8529:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xfa4feac39e3d2d34f7b2893e4b73ff0f64625fa909dcf11af40688d220f78c83\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://780d7fd2c1468f9dd2ffff1fe98251f4aa985eec20d6ee0b20612390a13e73c7\",\"dweb:/ipfs/Qmabr69tjsqq297fACkSUHpEK3GZh35zbFtdpQRUUJb1ta\"]}},\"version\":1}"}},"contracts/libraries/TransferHelper.sol":{"TransferHelper":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"260:705:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"260:705:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"TransferHelper\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains helper methods for interacting with ERC20 tokens that do not consistently return true/false\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20Minimal.sol\":{\"keccak256\":\"0x80c98ebee8f4d10912c7cd88d5f0bfebd459281c2ab0058fa976a06c603a0d92\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://70a2ac7f351d0d582cec545bab772beb56268e981b3b537be8db3c09b7000b92\",\"dweb:/ipfs/QmRVmM5kodxLC3pztKQLXqrJcoYuot1mNfqVVx1jTjVn9Q\"]},\"contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x45053903dbe795b9309eaf4b147093082f99d78b0097f15a8c2a37d42d67d2bc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d994b26b6da1a9b3972ea4e52aa423c65f9359c6a105128f4a357435e21c4b3e\",\"dweb:/ipfs/QmetiZX1jyobSeSnPMgYfhhg8qCsrHfF6GqbttrFLJrJzK\"]}},\"version\":1}"}},"contracts/libraries/UnsafeMath.sol":{"UnsafeMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"602d6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH1 0x2D PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"249:426:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000706000a","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP EXP ","sourceMap":"249:426:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Math functions that do not check inputs or outputs\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods that perform common math functions but do not do any overflow or underflow checks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UnsafeMath.sol\":\"UnsafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x3c829e89e91323d9c3e0f15272baa9aa1d28291e7633ee4f1414774e6eca0a7d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f99f38de11092e98d43f1d14061fcfa7309a80ae93d2b7af99c9256c97312c23\",\"dweb:/ipfs/QmQXXUR1PhKUFVZXwwekW23YE9Zy7r3GvdtcDyc2nNTpSb\"]}},\"version\":1}"}}}}}